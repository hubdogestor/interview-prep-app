{
  "version": 3,
  "sources": [],
  "debugId": "beb7f46a-5f80-7814-3e06-c1511ab0aed0",
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/internal/tslib.mjs"],"sourcesContent":["function __classPrivateFieldSet(receiver, state, value, kind, f) {\n    if (kind === \"m\")\n        throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f)\n        throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver))\n        throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? (f.value = value) : state.set(receiver, value), value;\n}\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n    if (kind === \"a\" && !f)\n        throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver))\n        throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\nexport { __classPrivateFieldSet, __classPrivateFieldGet };\n"],"names":[],"mappings":";;;;;;AAAA,SAAS,uBAAuB,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;IAC3D,IAAI,SAAS,KACT,MAAM,IAAI,UAAU;IACxB,IAAI,SAAS,OAAO,CAAC,GACjB,MAAM,IAAI,UAAU;IACxB,IAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,WACpE,MAAM,IAAI,UAAU;IACxB,OAAO,SAAS,MAAM,EAAE,IAAI,CAAC,UAAU,SAAS,IAAK,EAAE,KAAK,GAAG,QAAS,MAAM,GAAG,CAAC,UAAU,QAAQ;AACxG;AACA,SAAS,uBAAuB,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;IACpD,IAAI,SAAS,OAAO,CAAC,GACjB,MAAM,IAAI,UAAU;IACxB,IAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,WACpE,MAAM,IAAI,UAAU;IACxB,OAAO,SAAS,MAAM,IAAI,SAAS,MAAM,EAAE,IAAI,CAAC,YAAY,IAAI,EAAE,KAAK,GAAG,MAAM,GAAG,CAAC;AACxF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/internal/utils/uuid.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/internal/utils/uuid.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n/**\n * https://stackoverflow.com/a/2117523\n */\nexport let uuid4 = function () {\n  const { crypto } = globalThis as any;\n  if (crypto?.randomUUID) {\n    uuid4 = crypto.randomUUID.bind(crypto);\n    return crypto.randomUUID();\n  }\n  const u8 = new Uint8Array(1);\n  const randomByte = crypto ? () => crypto.getRandomValues(u8)[0]! : () => (Math.random() * 0xff) & 0xff;\n  return '10000000-1000-4000-8000-100000000000'.replace(/[018]/g, (c) =>\n    (+c ^ (randomByte() & (15 >> (+c / 4)))).toString(16),\n  );\n};\n"],"names":[],"mappings":"AAAA,sFAAsF;AAEtF;;GAEG;;;;AACI,IAAI,KAAK,GAAG;IACjB,MAAM,EAAE,MAAM,EAAE,GAAG,UAAiB,CAAC;IACrC,IAAI,MAAM,EAAE,UAAU,EAAE,CAAC;QACvB,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvC,OAAO,MAAM,CAAC,UAAU,EAAE,CAAC;IAC7B,CAAC;IACD,MAAM,EAAE,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;IAC7B,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAG,CAAD,KAAO,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,CAAG,AAAC,CAAF,GAAM,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,EAAG,IAAI,CAAC;IACvG,OAAO,sCAAsC,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAClE,CADoE,AACnE,CAAC,CAAC,GAAG,AAAC,UAAU,EAAE,GAAG,AAAC,EAAE,IAAI,AAAC,CAAC,CAAC,GAAG,CAAC,AAAG,CAAF,AAAG,CAAF,AAAG,QAAQ,CAAC,EAAE,CAAC,CACtD,CAAC;AACJ,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/internal/errors.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/internal/errors.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nexport function isAbortError(err: unknown) {\n  return (\n    typeof err === 'object' &&\n    err !== null &&\n    // Spec-compliant fetch implementations\n    (('name' in err && (err as any).name === 'AbortError') ||\n      // Expo fetch\n      ('message' in err && String((err as any).message).includes('FetchRequestCanceledException')))\n  );\n}\n\nexport const castToError = (err: any): Error => {\n  if (err instanceof Error) return err;\n  if (typeof err === 'object' && err !== null) {\n    try {\n      if (Object.prototype.toString.call(err) === '[object Error]') {\n        // @ts-ignore - not all envs have native support for cause yet\n        const error = new Error(err.message, err.cause ? { cause: err.cause } : {});\n        if (err.stack) error.stack = err.stack;\n        // @ts-ignore - not all envs have native support for cause yet\n        if (err.cause && !error.cause) error.cause = err.cause;\n        if (err.name) error.name = err.name;\n        return error;\n      }\n    } catch {}\n    try {\n      return new Error(JSON.stringify(err));\n    } catch {}\n  }\n  return new Error(err);\n};\n"],"names":[],"mappings":"AAAA,sFAAsF;;;;;;;AAEhF,SAAU,YAAY,CAAC,GAAY;IACvC,OAAO,AACL,OAAO,GAAG,KAAK,QAAQ,IACvB,GAAG,KAAK,IAAI,IACZ,uCAAuC;IACvC,CAAC,AAAC,MAAM,IAAI,GAAG,IAAK,GAAW,CAAC,IAAI,KAAK,YAAY,CAAC,GAEnD,SAAS,IAAI,GAAG,IAAI,MAAM,CAAE,GAAW,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,+BAA+B,CAAC,AAAC,CAAC,CAChG,CAAC;AACJ,CAAC;AAEM,MAAM,WAAW,GAAG,CAAC,GAAQ,EAAS,EAAE;IAC7C,IAAI,GAAG,YAAY,KAAK,EAAE,OAAO,GAAG,CAAC;IACrC,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE,CAAC;QAC5C,IAAI,CAAC;YACH,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,gBAAgB,EAAE,CAAC;gBAC7D,8DAA8D;gBAC9D,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;oBAAE,KAAK,EAAE,GAAG,CAAC,KAAK;gBAAA,CAAE,CAAC,CAAC,CAAC,CAAA,CAAE,CAAC,CAAC;gBAC5E,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;gBACvC,8DAA8D;gBAC9D,IAAI,GAAG,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;gBACvD,IAAI,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;gBACpC,OAAO,KAAK,CAAC;YACf,CAAC;QACH,CAAC,CAAC,OAAM,CAAC,CAAC;QACV,IAAI,CAAC;YACH,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC,OAAM,CAAC,CAAC;IACZ,CAAC;IACD,OAAO,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;AACxB,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/core/error.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/core/error.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { castToError } from '../internal/errors';\n\nexport class AnthropicError extends Error {}\n\nexport class APIError<\n  TStatus extends number | undefined = number | undefined,\n  THeaders extends Headers | undefined = Headers | undefined,\n  TError extends Object | undefined = Object | undefined,\n> extends AnthropicError {\n  /** HTTP status for the response that caused the error */\n  readonly status: TStatus;\n  /** HTTP headers for the response that caused the error */\n  readonly headers: THeaders;\n  /** JSON body of the response that caused the error */\n  readonly error: TError;\n\n  readonly requestID: string | null | undefined;\n\n  constructor(status: TStatus, error: TError, message: string | undefined, headers: THeaders) {\n    super(`${APIError.makeMessage(status, error, message)}`);\n    this.status = status;\n    this.headers = headers;\n    this.requestID = headers?.get('request-id');\n    this.error = error;\n  }\n\n  private static makeMessage(status: number | undefined, error: any, message: string | undefined) {\n    const msg =\n      error?.message ?\n        typeof error.message === 'string' ?\n          error.message\n        : JSON.stringify(error.message)\n      : error ? JSON.stringify(error)\n      : message;\n\n    if (status && msg) {\n      return `${status} ${msg}`;\n    }\n    if (status) {\n      return `${status} status code (no body)`;\n    }\n    if (msg) {\n      return msg;\n    }\n    return '(no status code or body)';\n  }\n\n  static generate(\n    status: number | undefined,\n    errorResponse: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ): APIError {\n    if (!status || !headers) {\n      return new APIConnectionError({ message, cause: castToError(errorResponse) });\n    }\n\n    const error = errorResponse as Record<string, any>;\n\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n\n    return new APIError(status, error, message, headers);\n  }\n}\n\nexport class APIUserAbortError extends APIError<undefined, undefined, undefined> {\n  constructor({ message }: { message?: string } = {}) {\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n  }\n}\n\nexport class APIConnectionError extends APIError<undefined, undefined, undefined> {\n  constructor({ message, cause }: { message?: string | undefined; cause?: Error | undefined }) {\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\n\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor({ message }: { message?: string } = {}) {\n    super({ message: message ?? 'Request timed out.' });\n  }\n}\n\nexport class BadRequestError extends APIError<400, Headers> {}\n\nexport class AuthenticationError extends APIError<401, Headers> {}\n\nexport class PermissionDeniedError extends APIError<403, Headers> {}\n\nexport class NotFoundError extends APIError<404, Headers> {}\n\nexport class ConflictError extends APIError<409, Headers> {}\n\nexport class UnprocessableEntityError extends APIError<422, Headers> {}\n\nexport class RateLimitError extends APIError<429, Headers> {}\n\nexport class InternalServerError extends APIError<number, Headers> {}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/internal/utils/values.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/internal/utils/values.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { AnthropicError } from '../../core/error';\n\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\n\nexport const isAbsoluteURL = (url: string): boolean => {\n  return startsWithSchemeRegexp.test(url);\n};\n\nexport let isArray = (val: unknown): val is unknown[] => ((isArray = Array.isArray), isArray(val));\nexport let isReadonlyArray = isArray as (val: unknown) => val is readonly unknown[];\n\n/** Returns an object if the given value isn't an object, otherwise returns as-is */\nexport function maybeObj(x: unknown): object {\n  if (typeof x !== 'object') {\n    return {};\n  }\n\n  return x ?? {};\n}\n\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj: Object | null | undefined): boolean {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\n\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn<T extends object = object>(obj: T, key: PropertyKey): key is keyof T {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function isObj(obj: unknown): obj is Record<string, unknown> {\n  return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n\nexport const ensurePresent = <T>(value: T | null | undefined): T => {\n  if (value == null) {\n    throw new AnthropicError(`Expected a value to be given but received ${value} instead.`);\n  }\n\n  return value;\n};\n\nexport const validatePositiveInteger = (name: string, n: unknown): number => {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new AnthropicError(`${name} must be an integer`);\n  }\n  if (n < 0) {\n    throw new AnthropicError(`${name} must be a positive integer`);\n  }\n  return n;\n};\n\nexport const coerceInteger = (value: unknown): number => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n\n  throw new AnthropicError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceFloat = (value: unknown): number => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n\n  throw new AnthropicError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceBoolean = (value: unknown): boolean => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\n\nexport const maybeCoerceInteger = (value: unknown): number | undefined => {\n  if (value == null) {\n    return undefined;\n  }\n  return coerceInteger(value);\n};\n\nexport const maybeCoerceFloat = (value: unknown): number | undefined => {\n  if (value == null) {\n    return undefined;\n  }\n  return coerceFloat(value);\n};\n\nexport const maybeCoerceBoolean = (value: unknown): boolean | undefined => {\n  if (value == null) {\n    return undefined;\n  }\n  return coerceBoolean(value);\n};\n\nexport const safeJSON = (text: string) => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/internal/utils/sleep.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/internal/utils/sleep.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nexport const sleep = (ms: number) => new Promise<void>((resolve) => setTimeout(resolve, ms));\n"],"names":[],"mappings":"AAAA,sFAAsF;;;;;AAE/E,MAAM,KAAK,GAAG,CAAC,EAAU,EAAE,CAAG,CAAD,GAAK,OAAO,CAAO,CAAC,OAAO,EAAE,CAAG,CAAD,SAAW,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/version.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/version.ts"],"sourcesContent":["export const VERSION = '0.68.0'; // x-release-please-version\n"],"names":[],"mappings":";;;;AAAO,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,2BAA2B","debugId":null}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/internal/detect-platform.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/internal/detect-platform.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { VERSION } from '../version';\n\nexport const isRunningInBrowser = () => {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\n\ntype DetectedPlatform = 'deno' | 'node' | 'edge' | 'unknown';\n\n/**\n * Note this does not detect 'browser'; for that, use getBrowserInfo().\n */\nfunction getDetectedPlatform(): DetectedPlatform {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return 'deno';\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return 'edge';\n  }\n  if (\n    Object.prototype.toString.call(\n      typeof (globalThis as any).process !== 'undefined' ? (globalThis as any).process : 0,\n    ) === '[object process]'\n  ) {\n    return 'node';\n  }\n  return 'unknown';\n}\n\ndeclare const Deno: any;\ndeclare const EdgeRuntime: any;\ntype Arch = 'x32' | 'x64' | 'arm' | 'arm64' | `other:${string}` | 'unknown';\ntype PlatformName =\n  | 'MacOS'\n  | 'Linux'\n  | 'Windows'\n  | 'FreeBSD'\n  | 'OpenBSD'\n  | 'iOS'\n  | 'Android'\n  | `Other:${string}`\n  | 'Unknown';\ntype Browser = 'ie' | 'edge' | 'chrome' | 'firefox' | 'safari';\ntype PlatformProperties = {\n  'X-Stainless-Lang': 'js';\n  'X-Stainless-Package-Version': string;\n  'X-Stainless-OS': PlatformName;\n  'X-Stainless-Arch': Arch;\n  'X-Stainless-Runtime': 'node' | 'deno' | 'edge' | `browser:${Browser}` | 'unknown';\n  'X-Stainless-Runtime-Version': string;\n};\nconst getPlatformProperties = (): PlatformProperties => {\n  const detectedPlatform = getDetectedPlatform();\n  if (detectedPlatform === 'deno') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version':\n        typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': `other:${EdgeRuntime}`,\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': (globalThis as any).process.version,\n    };\n  }\n  // Check if Node.js\n  if (detectedPlatform === 'node') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform((globalThis as any).process.platform ?? 'unknown'),\n      'X-Stainless-Arch': normalizeArch((globalThis as any).process.arch ?? 'unknown'),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': (globalThis as any).process.version ?? 'unknown',\n    };\n  }\n\n  const browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n      'X-Stainless-Runtime-Version': browserInfo.version,\n    };\n  }\n\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown',\n  };\n};\n\ntype BrowserInfo = {\n  browser: Browser;\n  version: string;\n};\n\ndeclare const navigator: { userAgent: string } | undefined;\n\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo(): BrowserInfo | null {\n  if (typeof navigator === 'undefined' || !navigator) {\n    return null;\n  }\n\n  // NOTE: The order matters here!\n  const browserPatterns = [\n    { key: 'edge' as const, pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'chrome' as const, pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'firefox' as const, pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'safari' as const, pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n  ];\n\n  // Find the FIRST matching browser\n  for (const { key, pattern } of browserPatterns) {\n    const match = pattern.exec(navigator.userAgent);\n    if (match) {\n      const major = match[1] || 0;\n      const minor = match[2] || 0;\n      const patch = match[3] || 0;\n\n      return { browser: key, version: `${major}.${minor}.${patch}` };\n    }\n  }\n\n  return null;\n}\n\nconst normalizeArch = (arch: string): Arch => {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return `other:${arch}`;\n  return 'unknown';\n};\n\nconst normalizePlatform = (platform: string): PlatformName => {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n\n  platform = platform.toLowerCase();\n\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return `Other:${platform}`;\n  return 'Unknown';\n};\n\nlet _platformHeaders: PlatformProperties;\nexport const getPlatformHeaders = () => {\n  return (_platformHeaders ??= getPlatformProperties());\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 525, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/internal/shims.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/internal/shims.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n/**\n * This module provides internal shims and utility functions for environments where certain Node.js or global types may not be available.\n *\n * These are used to ensure we can provide a consistent behaviour between different JavaScript environments and good error\n * messages in cases where an environment isn't fully supported.\n */\n\nimport type { Fetch } from './builtin-types';\nimport type { ReadableStream } from './shim-types';\n\nexport function getDefaultFetch(): Fetch {\n  if (typeof fetch !== 'undefined') {\n    return fetch as any;\n  }\n\n  throw new Error(\n    '`fetch` is not defined as a global; Either pass `fetch` to the client, `new Anthropic({ fetch })` or polyfill the global, `globalThis.fetch = fetch`',\n  );\n}\n\ntype ReadableStreamArgs = ConstructorParameters<typeof ReadableStream>;\n\nexport function makeReadableStream(...args: ReadableStreamArgs): ReadableStream {\n  const ReadableStream = (globalThis as any).ReadableStream;\n  if (typeof ReadableStream === 'undefined') {\n    // Note: All of the platforms / runtimes we officially support already define\n    // `ReadableStream` as a global, so this should only ever be hit on unsupported runtimes.\n    throw new Error(\n      '`ReadableStream` is not defined as a global; You will need to polyfill it, `globalThis.ReadableStream = ReadableStream`',\n    );\n  }\n\n  return new ReadableStream(...args);\n}\n\nexport function ReadableStreamFrom<T>(iterable: Iterable<T> | AsyncIterable<T>): ReadableStream<T> {\n  let iter: AsyncIterator<T> | Iterator<T> =\n    Symbol.asyncIterator in iterable ? iterable[Symbol.asyncIterator]() : iterable[Symbol.iterator]();\n\n  return makeReadableStream({\n    start() {},\n    async pull(controller: any) {\n      const { done, value } = await iter.next();\n      if (done) {\n        controller.close();\n      } else {\n        controller.enqueue(value);\n      }\n    },\n    async cancel() {\n      await iter.return?.();\n    },\n  });\n}\n\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function ReadableStreamToAsyncIterable<T>(stream: any): AsyncIterableIterator<T> {\n  if (stream[Symbol.asyncIterator]) return stream;\n\n  const reader = stream.getReader();\n  return {\n    async next() {\n      try {\n        const result = await reader.read();\n        if (result?.done) reader.releaseLock(); // release lock when stream becomes closed\n        return result;\n      } catch (e) {\n        reader.releaseLock(); // release lock when stream becomes errored\n        throw e;\n      }\n    },\n    async return() {\n      const cancelPromise = reader.cancel();\n      reader.releaseLock();\n      await cancelPromise;\n      return { done: true, value: undefined };\n    },\n    [Symbol.asyncIterator]() {\n      return this;\n    },\n  };\n}\n\n/**\n * Cancels a ReadableStream we don't need to consume.\n * See https://undici.nodejs.org/#/?id=garbage-collection\n */\nexport async function CancelReadableStream(stream: any): Promise<void> {\n  if (stream === null || typeof stream !== 'object') return;\n\n  if (stream[Symbol.asyncIterator]) {\n    await stream[Symbol.asyncIterator]().return?.();\n    return;\n  }\n\n  const reader = stream.getReader();\n  const cancelPromise = reader.cancel();\n  reader.releaseLock();\n  await cancelPromise;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 613, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/internal/request-options.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/internal/request-options.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { NullableHeaders } from './headers';\n\nimport type { BodyInit } from './builtin-types';\nimport { Stream } from '../core/streaming';\nimport type { HTTPMethod, MergedRequestInit } from './types';\nimport { type HeadersLike } from './headers';\n\nexport type FinalRequestOptions = RequestOptions & { method: HTTPMethod; path: string };\n\nexport type RequestOptions = {\n  /**\n   * The HTTP method for the request (e.g., 'get', 'post', 'put', 'delete').\n   */\n  method?: HTTPMethod;\n\n  /**\n   * The URL path for the request.\n   *\n   * @example \"/v1/foo\"\n   */\n  path?: string;\n\n  /**\n   * Query parameters to include in the request URL.\n   */\n  query?: object | undefined | null;\n\n  /**\n   * The request body. Can be a string, JSON object, FormData, or other supported types.\n   */\n  body?: unknown;\n\n  /**\n   * HTTP headers to include with the request. Can be a Headers object, plain object, or array of tuples.\n   */\n  headers?: HeadersLike;\n\n  /**\n   * The maximum number of times that the client will retry a request in case of a\n   * temporary failure, like a network error or a 5XX error from the server.\n   *\n   * @default 2\n   */\n  maxRetries?: number;\n\n  stream?: boolean | undefined;\n\n  /**\n   * The maximum amount of time (in milliseconds) that the client should wait for a response\n   * from the server before timing out a single request.\n   *\n   * @unit milliseconds\n   */\n  timeout?: number;\n\n  /**\n   * Additional `RequestInit` options to be passed to the underlying `fetch` call.\n   * These options will be merged with the client's default fetch options.\n   */\n  fetchOptions?: MergedRequestInit;\n\n  /**\n   * An AbortSignal that can be used to cancel the request.\n   */\n  signal?: AbortSignal | undefined | null;\n\n  /**\n   * A unique key for this request to enable idempotency.\n   */\n  idempotencyKey?: string;\n\n  /**\n   * Override the default base URL for this specific request.\n   */\n  defaultBaseURL?: string | undefined;\n\n  __binaryResponse?: boolean | undefined;\n  __streamClass?: typeof Stream;\n};\n\nexport type EncodedContent = { bodyHeaders: HeadersLike; body: BodyInit };\nexport type RequestEncoder = (request: { headers: NullableHeaders; body: unknown }) => EncodedContent;\n\nexport const FallbackEncoder: RequestEncoder = ({ headers, body }) => {\n  return {\n    bodyHeaders: {\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify(body),\n  };\n};\n"],"names":[],"mappings":"AAAA,sFAAsF;;;;;AAqF/E,MAAM,eAAe,GAAmB,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE;IACnE,OAAO;QACL,WAAW,EAAE;YACX,cAAc,EAAE,kBAAkB;SACnC;QACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;KAC3B,CAAC;AACJ,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 630, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/internal/utils/bytes.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/internal/utils/bytes.ts"],"sourcesContent":["export function concatBytes(buffers: Uint8Array[]): Uint8Array {\n  let length = 0;\n  for (const buffer of buffers) {\n    length += buffer.length;\n  }\n  const output = new Uint8Array(length);\n  let index = 0;\n  for (const buffer of buffers) {\n    output.set(buffer, index);\n    index += buffer.length;\n  }\n\n  return output;\n}\n\nlet encodeUTF8_: (str: string) => Uint8Array;\nexport function encodeUTF8(str: string) {\n  let encoder;\n  return (\n    encodeUTF8_ ??\n    ((encoder = new (globalThis as any).TextEncoder()), (encodeUTF8_ = encoder.encode.bind(encoder)))\n  )(str);\n}\n\nlet decodeUTF8_: (bytes: Uint8Array) => string;\nexport function decodeUTF8(bytes: Uint8Array) {\n  let decoder;\n  return (\n    decodeUTF8_ ??\n    ((decoder = new (globalThis as any).TextDecoder()), (decodeUTF8_ = decoder.decode.bind(decoder)))\n  )(bytes);\n}\n"],"names":[],"mappings":";;;;;;;;AAAM,SAAU,WAAW,CAAC,OAAqB;IAC/C,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,KAAK,MAAM,MAAM,IAAI,OAAO,CAAE,CAAC;QAC7B,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC;IAC1B,CAAC;IACD,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC;IACtC,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,KAAK,MAAM,MAAM,IAAI,OAAO,CAAE,CAAC;QAC7B,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC1B,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC;IACzB,CAAC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,IAAI,WAAwC,CAAC;AACvC,SAAU,UAAU,CAAC,GAAW;IACpC,IAAI,OAAO,CAAC;IACZ,OAAO,CACL,WAAW,IACX,CAAC,AAAC,OAAO,GAAG,IAAK,UAAkB,CAAC,WAAW,EAAE,CAAC,CAAG,CAAD,UAAY,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,AAAC,CAAC,CAClG,CAAC,GAAG,CAAC,CAAC;AACT,CAAC;AAED,IAAI,WAA0C,CAAC;AACzC,SAAU,UAAU,CAAC,KAAiB;IAC1C,IAAI,OAAO,CAAC;IACZ,OAAO,CACL,WAAW,IACX,CAAC,AAAC,OAAO,GAAG,IAAK,UAAkB,CAAC,WAAW,EAAE,CAAC,CAAG,CAAD,UAAY,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,AAAC,CAAC,CAClG,CAAC,KAAK,CAAC,CAAC;AACX,CAAC","debugId":null}},
    {"offset": {"line": 665, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/internal/decoders/line.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/internal/decoders/line.ts"],"sourcesContent":["import { concatBytes, decodeUTF8, encodeUTF8 } from '../utils/bytes';\n\nexport type Bytes = string | ArrayBuffer | Uint8Array | null | undefined;\n\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nexport class LineDecoder {\n  // prettier-ignore\n  static NEWLINE_CHARS = new Set(['\\n', '\\r']);\n  static NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n\n  #buffer: Uint8Array;\n  #carriageReturnIndex: number | null;\n\n  constructor() {\n    this.#buffer = new Uint8Array();\n    this.#carriageReturnIndex = null;\n  }\n\n  decode(chunk: Bytes): string[] {\n    if (chunk == null) {\n      return [];\n    }\n\n    const binaryChunk =\n      chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n      : typeof chunk === 'string' ? encodeUTF8(chunk)\n      : chunk;\n\n    this.#buffer = concatBytes([this.#buffer, binaryChunk]);\n\n    const lines: string[] = [];\n    let patternIndex;\n    while ((patternIndex = findNewlineIndex(this.#buffer, this.#carriageReturnIndex)) != null) {\n      if (patternIndex.carriage && this.#carriageReturnIndex == null) {\n        // skip until we either get a corresponding `\\n`, a new `\\r` or nothing\n        this.#carriageReturnIndex = patternIndex.index;\n        continue;\n      }\n\n      // we got double \\r or \\rtext\\n\n      if (\n        this.#carriageReturnIndex != null &&\n        (patternIndex.index !== this.#carriageReturnIndex + 1 || patternIndex.carriage)\n      ) {\n        lines.push(decodeUTF8(this.#buffer.subarray(0, this.#carriageReturnIndex - 1)));\n        this.#buffer = this.#buffer.subarray(this.#carriageReturnIndex);\n        this.#carriageReturnIndex = null;\n        continue;\n      }\n\n      const endIndex =\n        this.#carriageReturnIndex !== null ? patternIndex.preceding - 1 : patternIndex.preceding;\n\n      const line = decodeUTF8(this.#buffer.subarray(0, endIndex));\n      lines.push(line);\n\n      this.#buffer = this.#buffer.subarray(patternIndex.index);\n      this.#carriageReturnIndex = null;\n    }\n\n    return lines;\n  }\n\n  flush(): string[] {\n    if (!this.#buffer.length) {\n      return [];\n    }\n    return this.decode('\\n');\n  }\n}\n\n/**\n * This function searches the buffer for the end patterns, (\\r or \\n)\n * and returns an object with the index preceding the matched newline and the\n * index after the newline char. `null` is returned if no new line is found.\n *\n * ```ts\n * findNewLineIndex('abc\\ndef') -> { preceding: 2, index: 3 }\n * ```\n */\nfunction findNewlineIndex(\n  buffer: Uint8Array,\n  startIndex: number | null,\n): { preceding: number; index: number; carriage: boolean } | null {\n  const newline = 0x0a; // \\n\n  const carriage = 0x0d; // \\r\n\n  for (let i = startIndex ?? 0; i < buffer.length; i++) {\n    if (buffer[i] === newline) {\n      return { preceding: i, index: i + 1, carriage: false };\n    }\n\n    if (buffer[i] === carriage) {\n      return { preceding: i, index: i + 1, carriage: true };\n    }\n  }\n\n  return null;\n}\n\nexport function findDoubleNewlineIndex(buffer: Uint8Array): number {\n  // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n  // and returns the index right after the first occurrence of any pattern,\n  // or -1 if none of the patterns are found.\n  const newline = 0x0a; // \\n\n  const carriage = 0x0d; // \\r\n\n  for (let i = 0; i < buffer.length - 1; i++) {\n    if (buffer[i] === newline && buffer[i + 1] === newline) {\n      // \\n\\n\n      return i + 2;\n    }\n    if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n      // \\r\\r\n      return i + 2;\n    }\n    if (\n      buffer[i] === carriage &&\n      buffer[i + 1] === newline &&\n      i + 3 < buffer.length &&\n      buffer[i + 2] === carriage &&\n      buffer[i + 3] === newline\n    ) {\n      // \\r\\n\\r\\n\n      return i + 4;\n    }\n  }\n\n  return -1;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 784, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/internal/utils/log.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/internal/utils/log.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { hasOwn } from './values';\nimport { type BaseAnthropic } from '../../client';\nimport { RequestOptions } from '../request-options';\n\ntype LogFn = (message: string, ...rest: unknown[]) => void;\nexport type Logger = {\n  error: LogFn;\n  warn: LogFn;\n  info: LogFn;\n  debug: LogFn;\n};\nexport type LogLevel = 'off' | 'error' | 'warn' | 'info' | 'debug';\n\nconst levelNumbers = {\n  off: 0,\n  error: 200,\n  warn: 300,\n  info: 400,\n  debug: 500,\n};\n\nexport const parseLogLevel = (\n  maybeLevel: string | undefined,\n  sourceName: string,\n  client: BaseAnthropic,\n): LogLevel | undefined => {\n  if (!maybeLevel) {\n    return undefined;\n  }\n  if (hasOwn(levelNumbers, maybeLevel)) {\n    return maybeLevel;\n  }\n  loggerFor(client).warn(\n    `${sourceName} was set to ${JSON.stringify(maybeLevel)}, expected one of ${JSON.stringify(\n      Object.keys(levelNumbers),\n    )}`,\n  );\n  return undefined;\n};\n\nfunction noop() {}\n\nfunction makeLogFn(fnLevel: keyof Logger, logger: Logger | undefined, logLevel: LogLevel) {\n  if (!logger || levelNumbers[fnLevel] > levelNumbers[logLevel]) {\n    return noop;\n  } else {\n    // Don't wrap logger functions, we want the stacktrace intact!\n    return logger[fnLevel].bind(logger);\n  }\n}\n\nconst noopLogger = {\n  error: noop,\n  warn: noop,\n  info: noop,\n  debug: noop,\n};\n\nlet cachedLoggers = /* @__PURE__ */ new WeakMap<Logger, [LogLevel, Logger]>();\n\nexport function loggerFor(client: BaseAnthropic): Logger {\n  const logger = client.logger;\n  const logLevel = client.logLevel ?? 'off';\n  if (!logger) {\n    return noopLogger;\n  }\n\n  const cachedLogger = cachedLoggers.get(logger);\n  if (cachedLogger && cachedLogger[0] === logLevel) {\n    return cachedLogger[1];\n  }\n\n  const levelLogger = {\n    error: makeLogFn('error', logger, logLevel),\n    warn: makeLogFn('warn', logger, logLevel),\n    info: makeLogFn('info', logger, logLevel),\n    debug: makeLogFn('debug', logger, logLevel),\n  };\n\n  cachedLoggers.set(logger, [logLevel, levelLogger]);\n\n  return levelLogger;\n}\n\nexport const formatRequestDetails = (details: {\n  options?: RequestOptions | undefined;\n  headers?: Headers | Record<string, string> | undefined;\n  retryOfRequestLogID?: string | undefined;\n  retryOf?: string | undefined;\n  url?: string | undefined;\n  status?: number | undefined;\n  method?: string | undefined;\n  durationMs?: number | undefined;\n  message?: unknown;\n  body?: unknown;\n}) => {\n  if (details.options) {\n    details.options = { ...details.options };\n    delete details.options['headers']; // redundant + leaks internals\n  }\n  if (details.headers) {\n    details.headers = Object.fromEntries(\n      (details.headers instanceof Headers ? [...details.headers] : Object.entries(details.headers)).map(\n        ([name, value]) => [\n          name,\n          (\n            name.toLowerCase() === 'x-api-key' ||\n            name.toLowerCase() === 'authorization' ||\n            name.toLowerCase() === 'cookie' ||\n            name.toLowerCase() === 'set-cookie'\n          ) ?\n            '***'\n          : value,\n        ],\n      ),\n    );\n  }\n  if ('retryOfRequestLogID' in details) {\n    if (details.retryOfRequestLogID) {\n      details.retryOf = details.retryOfRequestLogID;\n    }\n    delete details.retryOfRequestLogID;\n  }\n  return details;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 877, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/core/streaming.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/core/streaming.ts"],"sourcesContent":["import { AnthropicError } from './error';\nimport { type ReadableStream } from '../internal/shim-types';\nimport { makeReadableStream } from '../internal/shims';\nimport { findDoubleNewlineIndex, LineDecoder } from '../internal/decoders/line';\nimport { ReadableStreamToAsyncIterable } from '../internal/shims';\nimport { isAbortError } from '../internal/errors';\nimport { safeJSON } from '../internal/utils/values';\nimport { encodeUTF8 } from '../internal/utils/bytes';\nimport { loggerFor } from '../internal/utils/log';\nimport type { BaseAnthropic } from '../client';\n\nimport { APIError } from './error';\n\ntype Bytes = string | ArrayBuffer | Uint8Array | null | undefined;\n\nexport type ServerSentEvent = {\n  event: string | null;\n  data: string;\n  raw: string[];\n};\n\nexport class Stream<Item> implements AsyncIterable<Item> {\n  controller: AbortController;\n  #client: BaseAnthropic | undefined;\n\n  constructor(\n    private iterator: () => AsyncIterator<Item>,\n    controller: AbortController,\n    client?: BaseAnthropic,\n  ) {\n    this.controller = controller;\n    this.#client = client;\n  }\n\n  static fromSSEResponse<Item>(\n    response: Response,\n    controller: AbortController,\n    client?: BaseAnthropic,\n  ): Stream<Item> {\n    let consumed = false;\n    const logger = client ? loggerFor(client) : console;\n\n    async function* iterator(): AsyncIterator<Item, any, undefined> {\n      if (consumed) {\n        throw new AnthropicError('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n      }\n      consumed = true;\n      let done = false;\n      try {\n        for await (const sse of _iterSSEMessages(response, controller)) {\n          if (sse.event === 'completion') {\n            try {\n              yield JSON.parse(sse.data);\n            } catch (e) {\n              logger.error(`Could not parse message into JSON:`, sse.data);\n              logger.error(`From chunk:`, sse.raw);\n              throw e;\n            }\n          }\n\n          if (\n            sse.event === 'message_start' ||\n            sse.event === 'message_delta' ||\n            sse.event === 'message_stop' ||\n            sse.event === 'content_block_start' ||\n            sse.event === 'content_block_delta' ||\n            sse.event === 'content_block_stop'\n          ) {\n            try {\n              yield JSON.parse(sse.data);\n            } catch (e) {\n              logger.error(`Could not parse message into JSON:`, sse.data);\n              logger.error(`From chunk:`, sse.raw);\n              throw e;\n            }\n          }\n\n          if (sse.event === 'ping') {\n            continue;\n          }\n\n          if (sse.event === 'error') {\n            throw new APIError(undefined, safeJSON(sse.data) ?? sse.data, undefined, response.headers);\n          }\n        }\n        done = true;\n      } catch (e) {\n        // If the user calls `stream.controller.abort()`, we should exit without throwing.\n        if (isAbortError(e)) return;\n        throw e;\n      } finally {\n        // If the user `break`s, abort the ongoing request.\n        if (!done) controller.abort();\n      }\n    }\n\n    return new Stream(iterator, controller, client);\n  }\n\n  /**\n   * Generates a Stream from a newline-separated ReadableStream\n   * where each item is a JSON value.\n   */\n  static fromReadableStream<Item>(\n    readableStream: ReadableStream,\n    controller: AbortController,\n    client?: BaseAnthropic,\n  ): Stream<Item> {\n    let consumed = false;\n\n    async function* iterLines(): AsyncGenerator<string, void, unknown> {\n      const lineDecoder = new LineDecoder();\n\n      const iter = ReadableStreamToAsyncIterable<Bytes>(readableStream);\n      for await (const chunk of iter) {\n        for (const line of lineDecoder.decode(chunk)) {\n          yield line;\n        }\n      }\n\n      for (const line of lineDecoder.flush()) {\n        yield line;\n      }\n    }\n\n    async function* iterator(): AsyncIterator<Item, any, undefined> {\n      if (consumed) {\n        throw new AnthropicError('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n      }\n      consumed = true;\n      let done = false;\n      try {\n        for await (const line of iterLines()) {\n          if (done) continue;\n          if (line) yield JSON.parse(line);\n        }\n        done = true;\n      } catch (e) {\n        // If the user calls `stream.controller.abort()`, we should exit without throwing.\n        if (isAbortError(e)) return;\n        throw e;\n      } finally {\n        // If the user `break`s, abort the ongoing request.\n        if (!done) controller.abort();\n      }\n    }\n\n    return new Stream(iterator, controller, client);\n  }\n\n  [Symbol.asyncIterator](): AsyncIterator<Item> {\n    return this.iterator();\n  }\n\n  /**\n   * Splits the stream into two streams which can be\n   * independently read from at different speeds.\n   */\n  tee(): [Stream<Item>, Stream<Item>] {\n    const left: Array<Promise<IteratorResult<Item>>> = [];\n    const right: Array<Promise<IteratorResult<Item>>> = [];\n    const iterator = this.iterator();\n\n    const teeIterator = (queue: Array<Promise<IteratorResult<Item>>>): AsyncIterator<Item> => {\n      return {\n        next: () => {\n          if (queue.length === 0) {\n            const result = iterator.next();\n            left.push(result);\n            right.push(result);\n          }\n          return queue.shift()!;\n        },\n      };\n    };\n\n    return [\n      new Stream(() => teeIterator(left), this.controller, this.#client),\n      new Stream(() => teeIterator(right), this.controller, this.#client),\n    ];\n  }\n\n  /**\n   * Converts this stream to a newline-separated ReadableStream of\n   * JSON stringified values in the stream\n   * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n   */\n  toReadableStream(): ReadableStream {\n    const self = this;\n    let iter: AsyncIterator<Item>;\n\n    return makeReadableStream({\n      async start() {\n        iter = self[Symbol.asyncIterator]();\n      },\n      async pull(ctrl: any) {\n        try {\n          const { value, done } = await iter.next();\n          if (done) return ctrl.close();\n\n          const bytes = encodeUTF8(JSON.stringify(value) + '\\n');\n\n          ctrl.enqueue(bytes);\n        } catch (err) {\n          ctrl.error(err);\n        }\n      },\n      async cancel() {\n        await iter.return?.();\n      },\n    });\n  }\n}\n\nexport async function* _iterSSEMessages(\n  response: Response,\n  controller: AbortController,\n): AsyncGenerator<ServerSentEvent, void, unknown> {\n  if (!response.body) {\n    controller.abort();\n    if (\n      typeof (globalThis as any).navigator !== 'undefined' &&\n      (globalThis as any).navigator.product === 'ReactNative'\n    ) {\n      throw new AnthropicError(\n        `The default react-native fetch implementation does not support streaming. Please use expo/fetch: https://docs.expo.dev/versions/latest/sdk/expo/#expofetch-api`,\n      );\n    }\n    throw new AnthropicError(`Attempted to iterate over a response with no body`);\n  }\n\n  const sseDecoder = new SSEDecoder();\n  const lineDecoder = new LineDecoder();\n\n  const iter = ReadableStreamToAsyncIterable<Bytes>(response.body);\n  for await (const sseChunk of iterSSEChunks(iter)) {\n    for (const line of lineDecoder.decode(sseChunk)) {\n      const sse = sseDecoder.decode(line);\n      if (sse) yield sse;\n    }\n  }\n\n  for (const line of lineDecoder.flush()) {\n    const sse = sseDecoder.decode(line);\n    if (sse) yield sse;\n  }\n}\n\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */\nasync function* iterSSEChunks(iterator: AsyncIterableIterator<Bytes>): AsyncGenerator<Uint8Array> {\n  let data = new Uint8Array();\n\n  for await (const chunk of iterator) {\n    if (chunk == null) {\n      continue;\n    }\n\n    const binaryChunk =\n      chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n      : typeof chunk === 'string' ? encodeUTF8(chunk)\n      : chunk;\n\n    let newData = new Uint8Array(data.length + binaryChunk.length);\n    newData.set(data);\n    newData.set(binaryChunk, data.length);\n    data = newData;\n\n    let patternIndex;\n    while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {\n      yield data.slice(0, patternIndex);\n      data = data.slice(patternIndex);\n    }\n  }\n\n  if (data.length > 0) {\n    yield data;\n  }\n}\n\nclass SSEDecoder {\n  private data: string[];\n  private event: string | null;\n  private chunks: string[];\n\n  constructor() {\n    this.event = null;\n    this.data = [];\n    this.chunks = [];\n  }\n\n  decode(line: string) {\n    if (line.endsWith('\\r')) {\n      line = line.substring(0, line.length - 1);\n    }\n\n    if (!line) {\n      // empty line and we didn't previously encounter any messages\n      if (!this.event && !this.data.length) return null;\n\n      const sse: ServerSentEvent = {\n        event: this.event,\n        data: this.data.join('\\n'),\n        raw: this.chunks,\n      };\n\n      this.event = null;\n      this.data = [];\n      this.chunks = [];\n\n      return sse;\n    }\n\n    this.chunks.push(line);\n\n    if (line.startsWith(':')) {\n      return null;\n    }\n\n    let [fieldname, _, value] = partition(line, ':');\n\n    if (value.startsWith(' ')) {\n      value = value.substring(1);\n    }\n\n    if (fieldname === 'event') {\n      this.event = value;\n    } else if (fieldname === 'data') {\n      this.data.push(value);\n    }\n\n    return null;\n  }\n}\n\nfunction partition(str: string, delimiter: string): [string, string, string] {\n  const index = str.indexOf(delimiter);\n  if (index !== -1) {\n    return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n  }\n\n  return [str, '', ''];\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1155, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/internal/parse.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/internal/parse.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport type { FinalRequestOptions } from './request-options';\nimport { Stream } from '../core/streaming';\nimport { type BaseAnthropic } from '../client';\nimport { formatRequestDetails, loggerFor } from './utils/log';\nimport type { AbstractPage } from '../core/pagination';\n\nexport type APIResponseProps = {\n  response: Response;\n  options: FinalRequestOptions;\n  controller: AbortController;\n  requestLogID: string;\n  retryOfRequestLogID: string | undefined;\n  startTime: number;\n};\n\nexport async function defaultParseResponse<T>(\n  client: BaseAnthropic,\n  props: APIResponseProps,\n): Promise<WithRequestID<T>> {\n  const { response, requestLogID, retryOfRequestLogID, startTime } = props;\n  const body = await (async () => {\n    if (props.options.stream) {\n      loggerFor(client).debug('response', response.status, response.url, response.headers, response.body);\n\n      // Note: there is an invariant here that isn't represented in the type system\n      // that if you set `stream: true` the response type must also be `Stream<T>`\n\n      if (props.options.__streamClass) {\n        return props.options.__streamClass.fromSSEResponse(response, props.controller) as any;\n      }\n\n      return Stream.fromSSEResponse(response, props.controller) as any;\n    }\n\n    // fetch refuses to read the body when the status code is 204.\n    if (response.status === 204) {\n      return null as T;\n    }\n\n    if (props.options.__binaryResponse) {\n      return response as unknown as T;\n    }\n\n    const contentType = response.headers.get('content-type');\n    const mediaType = contentType?.split(';')[0]?.trim();\n    const isJSON = mediaType?.includes('application/json') || mediaType?.endsWith('+json');\n    if (isJSON) {\n      const json = await response.json();\n      return addRequestID(json as T, response);\n    }\n\n    const text = await response.text();\n    return text as unknown as T;\n  })();\n  loggerFor(client).debug(\n    `[${requestLogID}] response parsed`,\n    formatRequestDetails({\n      retryOfRequestLogID,\n      url: response.url,\n      status: response.status,\n      body,\n      durationMs: Date.now() - startTime,\n    }),\n  );\n  return body;\n}\n\nexport type WithRequestID<T> =\n  T extends Array<any> | Response | AbstractPage<any> ? T\n  : T extends Record<string, any> ? T & { _request_id?: string | null }\n  : T;\n\nexport function addRequestID<T>(value: T, response: Response): WithRequestID<T> {\n  if (!value || typeof value !== 'object' || Array.isArray(value)) {\n    return value as WithRequestID<T>;\n  }\n\n  return Object.defineProperty(value, '_request_id', {\n    value: response.headers.get('request-id'),\n    enumerable: false,\n  }) as WithRequestID<T>;\n}\n"],"names":[],"mappings":"AAAA,sFAAsF;;;;;;;OAG/E,EAAE,MAAM,EAAE;OAEV,EAAE,oBAAoB,EAAE,SAAS,EAAE;;;AAYnC,KAAK,UAAU,oBAAoB,CACxC,MAAqB,EACrB,KAAuB;IAEvB,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,mBAAmB,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;IACzE,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE;QAC7B,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;gBACzB,oLAAS,EAAC,MAAM,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YAEpG,6EAA6E;YAC7E,4EAA4E;YAE5E,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;gBAChC,OAAO,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAQ,CAAC;YACxF,CAAC;YAED,OAAO,0KAAM,CAAC,eAAe,CAAC,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAQ,CAAC;QACnE,CAAC;QAED,8DAA8D;QAC9D,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE,CAAC;YAC5B,OAAO,IAAS,CAAC;QACnB,CAAC;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC;YACnC,OAAO,QAAwB,CAAC;QAClC,CAAC;QAED,MAAM,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACzD,MAAM,SAAS,GAAG,WAAW,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC;QACrD,MAAM,MAAM,GAAG,SAAS,EAAE,QAAQ,CAAC,kBAAkB,CAAC,IAAI,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;QACvF,IAAI,MAAM,EAAE,CAAC;YACX,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YACnC,OAAO,YAAY,CAAC,IAAS,EAAE,QAAQ,CAAC,CAAC;QAC3C,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QACnC,OAAO,IAAoB,CAAC;IAC9B,CAAC,CAAC,EAAE,CAAC;QACL,oLAAS,EAAC,MAAM,CAAC,CAAC,KAAK,CACrB,CAAA,CAAA,EAAI,YAAY,CAAA,iBAAA,CAAmB,MACnC,+LAAoB,EAAC;QACnB,mBAAmB;QACnB,GAAG,EAAE,QAAQ,CAAC,GAAG;QACjB,MAAM,EAAE,QAAQ,CAAC,MAAM;QACvB,IAAI;QACJ,UAAU,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS;KACnC,CAAC,CACH,CAAC;IACF,OAAO,IAAI,CAAC;AACd,CAAC;AAOK,SAAU,YAAY,CAAI,KAAQ,EAAE,QAAkB;IAC1D,IAAI,CAAC,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;QAChE,OAAO,KAAyB,CAAC;IACnC,CAAC;IAED,OAAO,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,aAAa,EAAE;QACjD,KAAK,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzC,UAAU,EAAE,KAAK;KAClB,CAAqB,CAAC;AACzB,CAAC","debugId":null}},
    {"offset": {"line": 1217, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/core/api-promise.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/core/api-promise.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { type BaseAnthropic } from '../client';\n\nimport { type PromiseOrValue } from '../internal/types';\nimport {\n  type APIResponseProps,\n  type WithRequestID,\n  defaultParseResponse,\n  addRequestID,\n} from '../internal/parse';\n\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise<T> extends Promise<WithRequestID<T>> {\n  private parsedPromise: Promise<WithRequestID<T>> | undefined;\n  #client: BaseAnthropic;\n\n  constructor(\n    client: BaseAnthropic,\n    private responsePromise: Promise<APIResponseProps>,\n    private parseResponse: (\n      client: BaseAnthropic,\n      props: APIResponseProps,\n    ) => PromiseOrValue<WithRequestID<T>> = defaultParseResponse,\n  ) {\n    super((resolve) => {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null as any);\n    });\n    this.#client = client;\n  }\n\n  _thenUnwrap<U>(transform: (data: T, props: APIResponseProps) => U): APIPromise<U> {\n    return new APIPromise(this.#client, this.responsePromise, async (client, props) =>\n      addRequestID(transform(await this.parseResponse(client, props), props), props.response),\n    );\n  }\n\n  /**\n   * Gets the raw `Response` instance instead of parsing the response\n   * data.\n   *\n   * If you want to parse the response body but still get the `Response`\n   * instance, you can use {@link withResponse()}.\n   *\n   * 👋 Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n   * to your `tsconfig.json`.\n   */\n  asResponse(): Promise<Response> {\n    return this.responsePromise.then((p) => p.response);\n  }\n\n  /**\n   * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n   * returned via the `request-id` header which is useful for debugging requests and resporting\n   * issues to Anthropic.\n   *\n   * If you just want to get the raw `Response` instance without parsing it,\n   * you can use {@link asResponse()}.\n   *\n   * 👋 Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n   * to your `tsconfig.json`.\n   */\n  async withResponse(): Promise<{ data: T; response: Response; request_id: string | null | undefined }> {\n    const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n    return { data, response, request_id: response.headers.get('request-id') };\n  }\n\n  private parse(): Promise<WithRequestID<T>> {\n    if (!this.parsedPromise) {\n      this.parsedPromise = this.responsePromise.then(\n        (data) => this.parseResponse(this.#client, data) as any as Promise<WithRequestID<T>>,\n      );\n    }\n    return this.parsedPromise;\n  }\n\n  override then<TResult1 = WithRequestID<T>, TResult2 = never>(\n    onfulfilled?: ((value: WithRequestID<T>) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n  ): Promise<TResult1 | TResult2> {\n    return this.parse().then(onfulfilled, onrejected);\n  }\n\n  override catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,\n  ): Promise<WithRequestID<T> | TResult> {\n    return this.parse().catch(onrejected);\n  }\n\n  override finally(onfinally?: (() => void) | undefined | null): Promise<WithRequestID<T>> {\n    return this.parse().finally(onfinally);\n  }\n}\n"],"names":[],"mappings":"AAAA,sFAAsF;;;;;;OAK/E,EAGL,oBAAoB,EACpB,YAAY,GACb;;;;AAMK,MAAO,UAAc,SAAQ,OAAyB;IAI1D,YACE,MAAqB,EACb,eAA0C,EAC1C,gBAGgC,wLAAoB,CAAA;QAE5D,KAAK,CAAC,CAAC,OAAO,EAAE,EAAE;YAChB,yEAAyE;YACzE,0EAA0E;YAC1E,wBAAwB;YACxB,OAAO,CAAC,IAAW,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QAXK,IAAA,CAAA,eAAe,GAAf,eAAe,CAA2B;QAC1C,IAAA,CAAA,aAAa,GAAb,aAAa,CAGuC;QAR9D,mBAAA,GAAA,CAAA,IAAA,EAAA,KAAA,GAAuB;YAgBrB,0LAAA,EAAA,IAAI,EAAA,oBAAW,MAAM,EAAA,IAAA,CAAC;IACxB,CAAC;IAED,WAAW,CAAI,SAAkD,EAAA;QAC/D,OAAO,IAAI,UAAU,KAAC,0LAAA,EAAA,IAAI,EAAA,oBAAA,IAAQ,EAAE,IAAI,CAAC,eAAe,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,GAChF,gLAAY,EAAC,SAAS,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,CACxF,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG,CACH,UAAU,GAAA;QACR,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE,CAAC,QAAQ,CAAC,CAAC;IACtD,CAAC;IAED;;;;;;;;;;;OAWG,CACH,KAAK,CAAC,YAAY,GAAA;QAChB,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;YAAC,IAAI,CAAC,KAAK,EAAE;YAAE,IAAI,CAAC,UAAU,EAAE;SAAC,CAAC,CAAC;QAC9E,OAAO;YAAE,IAAI;YAAE,QAAQ;YAAE,UAAU,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QAAA,CAAE,CAAC;IAC5E,CAAC;IAEO,KAAK,GAAA;QACX,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAC5C,CAAC,IAAI,EAAE,CAAG,CAAD,GAAK,CAAC,aAAa,KAAC,0LAAA,EAAA,IAAI,EAAA,oBAAA,IAAQ,EAAE,IAAI,CAAqC,CACrF,CAAC;QACJ,CAAC;QACD,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAEQ,IAAI,CACX,WAAgG,EAChG,UAAmF,EAAA;QAEnF,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;IACpD,CAAC;IAEQ,KAAK,CACZ,UAAiF,EAAA;QAEjF,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IACxC,CAAC;IAEQ,OAAO,CAAC,SAA2C,EAAA;QAC1D,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACzC,CAAC;CACF","debugId":null}},
    {"offset": {"line": 1299, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/core/pagination.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/core/pagination.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { AnthropicError } from './error';\nimport { FinalRequestOptions } from '../internal/request-options';\nimport { defaultParseResponse, WithRequestID } from '../internal/parse';\nimport { type BaseAnthropic } from '../client';\nimport { APIPromise } from './api-promise';\nimport { type APIResponseProps } from '../internal/parse';\nimport { maybeObj } from '../internal/utils/values';\n\nexport type PageRequestOptions = Pick<FinalRequestOptions, 'query' | 'headers' | 'body' | 'path' | 'method'>;\n\nexport abstract class AbstractPage<Item> implements AsyncIterable<Item> {\n  #client: BaseAnthropic;\n  protected options: FinalRequestOptions;\n\n  protected response: Response;\n  protected body: unknown;\n\n  constructor(client: BaseAnthropic, response: Response, body: unknown, options: FinalRequestOptions) {\n    this.#client = client;\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n\n  abstract nextPageRequestOptions(): PageRequestOptions | null;\n\n  abstract getPaginatedItems(): Item[];\n\n  hasNextPage(): boolean {\n    const items = this.getPaginatedItems();\n    if (!items.length) return false;\n    return this.nextPageRequestOptions() != null;\n  }\n\n  async getNextPage(): Promise<this> {\n    const nextOptions = this.nextPageRequestOptions();\n    if (!nextOptions) {\n      throw new AnthropicError(\n        'No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.',\n      );\n    }\n\n    return await this.#client.requestAPIList(this.constructor as any, nextOptions);\n  }\n\n  async *iterPages(): AsyncGenerator<this> {\n    let page: this = this;\n    yield page;\n    while (page.hasNextPage()) {\n      page = await page.getNextPage();\n      yield page;\n    }\n  }\n\n  async *[Symbol.asyncIterator](): AsyncGenerator<Item> {\n    for await (const page of this.iterPages()) {\n      for (const item of page.getPaginatedItems()) {\n        yield item;\n      }\n    }\n  }\n}\n\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise<\n    PageClass extends AbstractPage<Item>,\n    Item = ReturnType<PageClass['getPaginatedItems']>[number],\n  >\n  extends APIPromise<PageClass>\n  implements AsyncIterable<Item>\n{\n  constructor(\n    client: BaseAnthropic,\n    request: Promise<APIResponseProps>,\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n  ) {\n    super(\n      client,\n      request,\n      async (client, props) =>\n        new Page(\n          client,\n          props.response,\n          await defaultParseResponse(client, props),\n          props.options,\n        ) as WithRequestID<PageClass>,\n    );\n  }\n\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  async *[Symbol.asyncIterator](): AsyncGenerator<Item> {\n    const page = await this;\n    for await (const item of page) {\n      yield item;\n    }\n  }\n}\n\nexport interface PageResponse<Item> {\n  data: Array<Item>;\n\n  has_more: boolean;\n\n  first_id: string | null;\n\n  last_id: string | null;\n}\n\nexport interface PageParams {\n  /**\n   * Number of items per page.\n   */\n  limit?: number;\n\n  before_id?: string;\n\n  after_id?: string;\n}\n\nexport class Page<Item> extends AbstractPage<Item> implements PageResponse<Item> {\n  data: Array<Item>;\n\n  has_more: boolean;\n\n  first_id: string | null;\n\n  last_id: string | null;\n\n  constructor(\n    client: BaseAnthropic,\n    response: Response,\n    body: PageResponse<Item>,\n    options: FinalRequestOptions,\n  ) {\n    super(client, response, body, options);\n\n    this.data = body.data || [];\n    this.has_more = body.has_more || false;\n    this.first_id = body.first_id || null;\n    this.last_id = body.last_id || null;\n  }\n\n  getPaginatedItems(): Item[] {\n    return this.data ?? [];\n  }\n\n  override hasNextPage(): boolean {\n    if (this.has_more === false) {\n      return false;\n    }\n\n    return super.hasNextPage();\n  }\n\n  nextPageRequestOptions(): PageRequestOptions | null {\n    if ((this.options.query as Record<string, unknown>)?.['before_id']) {\n      // in reverse\n      const first_id = this.first_id;\n      if (!first_id) {\n        return null;\n      }\n\n      return {\n        ...this.options,\n        query: {\n          ...maybeObj(this.options.query),\n          before_id: first_id,\n        },\n      };\n    }\n\n    const cursor = this.last_id;\n    if (!cursor) {\n      return null;\n    }\n\n    return {\n      ...this.options,\n      query: {\n        ...maybeObj(this.options.query),\n        after_id: cursor,\n      },\n    };\n  }\n}\n\nexport interface TokenPageResponse<Item> {\n  data: Array<Item>;\n\n  has_more: boolean;\n\n  next_page: string | null;\n}\n\nexport interface TokenPageParams {\n  /**\n   * Number of items per page.\n   */\n  limit?: number;\n\n  page_token?: string;\n}\n\nexport class TokenPage<Item> extends AbstractPage<Item> implements TokenPageResponse<Item> {\n  data: Array<Item>;\n\n  has_more: boolean;\n\n  next_page: string | null;\n\n  constructor(\n    client: BaseAnthropic,\n    response: Response,\n    body: TokenPageResponse<Item>,\n    options: FinalRequestOptions,\n  ) {\n    super(client, response, body, options);\n\n    this.data = body.data || [];\n    this.has_more = body.has_more || false;\n    this.next_page = body.next_page || null;\n  }\n\n  getPaginatedItems(): Item[] {\n    return this.data ?? [];\n  }\n\n  override hasNextPage(): boolean {\n    if (this.has_more === false) {\n      return false;\n    }\n\n    return super.hasNextPage();\n  }\n\n  nextPageRequestOptions(): PageRequestOptions | null {\n    const cursor = this.next_page;\n    if (!cursor) {\n      return null;\n    }\n\n    return {\n      ...this.options,\n      query: {\n        ...maybeObj(this.options.query),\n        page_token: cursor,\n      },\n    };\n  }\n}\n\nexport interface PageCursorResponse<Item> {\n  data: Array<Item>;\n\n  has_more: boolean;\n\n  next_page: string | null;\n}\n\nexport interface PageCursorParams {\n  /**\n   * Number of items per page.\n   */\n  limit?: number;\n\n  page?: string | null;\n}\n\nexport class PageCursor<Item> extends AbstractPage<Item> implements PageCursorResponse<Item> {\n  data: Array<Item>;\n\n  has_more: boolean;\n\n  next_page: string | null;\n\n  constructor(\n    client: BaseAnthropic,\n    response: Response,\n    body: PageCursorResponse<Item>,\n    options: FinalRequestOptions,\n  ) {\n    super(client, response, body, options);\n\n    this.data = body.data || [];\n    this.has_more = body.has_more || false;\n    this.next_page = body.next_page || null;\n  }\n\n  getPaginatedItems(): Item[] {\n    return this.data ?? [];\n  }\n\n  override hasNextPage(): boolean {\n    if (this.has_more === false) {\n      return false;\n    }\n\n    return super.hasNextPage();\n  }\n\n  nextPageRequestOptions(): PageRequestOptions | null {\n    const cursor = this.next_page;\n    if (!cursor) {\n      return null;\n    }\n\n    return {\n      ...this.options,\n      query: {\n        ...maybeObj(this.options.query),\n        page: cursor,\n      },\n    };\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1485, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/internal/uploads.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/internal/uploads.ts"],"sourcesContent":["import { type RequestOptions } from './request-options';\nimport type { FilePropertyBag, Fetch } from './builtin-types';\nimport type { BaseAnthropic } from '../client';\nimport { ReadableStreamFrom } from './shims';\n\nexport type BlobPart = string | ArrayBuffer | ArrayBufferView | Blob | DataView;\ntype FsReadStream = AsyncIterable<Uint8Array> & { path: string | { toString(): string } };\n\n// https://github.com/oven-sh/bun/issues/5980\ninterface BunFile extends Blob {\n  readonly name?: string | undefined;\n}\n\nexport const checkFileSupport = () => {\n  if (typeof File === 'undefined') {\n    const { process } = globalThis as any;\n    const isOldNode =\n      typeof process?.versions?.node === 'string' && parseInt(process.versions.node.split('.')) < 20;\n    throw new Error(\n      '`File` is not defined as a global, which is required for file uploads.' +\n        (isOldNode ?\n          \" Update to Node 20 LTS or newer, or set `globalThis.File` to `import('node:buffer').File`.\"\n        : ''),\n    );\n  }\n};\n\n/**\n * Typically, this is a native \"File\" class.\n *\n * We provide the {@link toFile} utility to convert a variety of objects\n * into the File class.\n *\n * For convenience, you can also pass a fetch Response, or in Node,\n * the result of fs.createReadStream().\n */\nexport type Uploadable = File | Response | FsReadStream | BunFile;\n\n/**\n * Construct a `File` instance. This is used to ensure a helpful error is thrown\n * for environments that don't define a global `File` yet.\n */\nexport function makeFile(\n  fileBits: BlobPart[],\n  fileName: string | undefined,\n  options?: FilePropertyBag,\n): File {\n  checkFileSupport();\n  return new File(fileBits as any, fileName ?? 'unknown_file', options);\n}\n\nexport function getName(value: any): string | undefined {\n  return (\n    (\n      (typeof value === 'object' &&\n        value !== null &&\n        (('name' in value && value.name && String(value.name)) ||\n          ('url' in value && value.url && String(value.url)) ||\n          ('filename' in value && value.filename && String(value.filename)) ||\n          ('path' in value && value.path && String(value.path)))) ||\n      ''\n    )\n      .split(/[\\\\/]/)\n      .pop() || undefined\n  );\n}\n\nexport const isAsyncIterable = (value: any): value is AsyncIterable<any> =>\n  value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\n\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (\n  opts: RequestOptions,\n  fetch: BaseAnthropic | Fetch,\n): Promise<RequestOptions> => {\n  if (!hasUploadableValue(opts.body)) return opts;\n\n  return { ...opts, body: await createForm(opts.body, fetch) };\n};\n\ntype MultipartFormRequestOptions = Omit<RequestOptions, 'body'> & { body: unknown };\n\nexport const multipartFormRequestOptions = async (\n  opts: MultipartFormRequestOptions,\n  fetch: BaseAnthropic | Fetch,\n): Promise<RequestOptions> => {\n  return { ...opts, body: await createForm(opts.body, fetch) };\n};\n\nconst supportsFormDataMap = /* @__PURE__ */ new WeakMap<Fetch, Promise<boolean>>();\n\n/**\n * node-fetch doesn't support the global FormData object in recent node versions. Instead of sending\n * properly-encoded form data, it just stringifies the object, resulting in a request body of \"[object FormData]\".\n * This function detects if the fetch function provided supports the global FormData object to avoid\n * confusing error messages later on.\n */\nfunction supportsFormData(fetchObject: BaseAnthropic | Fetch): Promise<boolean> {\n  const fetch: Fetch = typeof fetchObject === 'function' ? fetchObject : (fetchObject as any).fetch;\n  const cached = supportsFormDataMap.get(fetch);\n  if (cached) return cached;\n  const promise = (async () => {\n    try {\n      const FetchResponse = (\n        'Response' in fetch ?\n          fetch.Response\n        : (await fetch('data:,')).constructor) as typeof Response;\n      const data = new FormData();\n      if (data.toString() === (await new FetchResponse(data).text())) {\n        return false;\n      }\n      return true;\n    } catch {\n      // avoid false negatives\n      return true;\n    }\n  })();\n  supportsFormDataMap.set(fetch, promise);\n  return promise;\n}\n\nexport const createForm = async <T = Record<string, unknown>>(\n  body: T | undefined,\n  fetch: BaseAnthropic | Fetch,\n): Promise<FormData> => {\n  if (!(await supportsFormData(fetch))) {\n    throw new TypeError(\n      'The provided fetch function does not support file uploads with the current global FormData class.',\n    );\n  }\n  const form = new FormData();\n  await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n  return form;\n};\n\n// We check for Blob not File because Bun.File doesn't inherit from File,\n// but they both inherit from Blob and have a `name` property at runtime.\nconst isNamedBlob = (value: unknown): value is Blob => value instanceof Blob && 'name' in value;\n\nconst isUploadable = (value: unknown) =>\n  typeof value === 'object' &&\n  value !== null &&\n  (value instanceof Response || isAsyncIterable(value) || isNamedBlob(value));\n\nconst hasUploadableValue = (value: unknown): boolean => {\n  if (isUploadable(value)) return true;\n  if (Array.isArray(value)) return value.some(hasUploadableValue);\n  if (value && typeof value === 'object') {\n    for (const k in value) {\n      if (hasUploadableValue((value as any)[k])) return true;\n    }\n  }\n  return false;\n};\n\nconst addFormValue = async (form: FormData, key: string, value: unknown): Promise<void> => {\n  if (value === undefined) return;\n  if (value == null) {\n    throw new TypeError(\n      `Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`,\n    );\n  }\n\n  // TODO: make nested formats configurable\n  if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n    form.append(key, String(value));\n  } else if (value instanceof Response) {\n    let options = {} as FilePropertyBag;\n    const contentType = value.headers.get('Content-Type');\n    if (contentType) {\n      options = { type: contentType };\n    }\n\n    form.append(key, makeFile([await value.blob()], getName(value), options));\n  } else if (isAsyncIterable(value)) {\n    form.append(key, makeFile([await new Response(ReadableStreamFrom(value)).blob()], getName(value)));\n  } else if (isNamedBlob(value)) {\n    form.append(key, makeFile([value], getName(value), { type: value.type }));\n  } else if (Array.isArray(value)) {\n    await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n  } else if (typeof value === 'object') {\n    await Promise.all(\n      Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)),\n    );\n  } else {\n    throw new TypeError(\n      `Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`,\n    );\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1620, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/internal/to-file.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/internal/to-file.ts"],"sourcesContent":["import { BlobPart, getName, makeFile, isAsyncIterable } from './uploads';\nimport type { FilePropertyBag } from './builtin-types';\nimport { checkFileSupport } from './uploads';\n\ntype BlobLikePart = string | ArrayBuffer | ArrayBufferView | BlobLike | DataView;\n\n/**\n * Intended to match DOM Blob, node-fetch Blob, node:buffer Blob, etc.\n * Don't add arrayBuffer here, node-fetch doesn't have it\n */\ninterface BlobLike {\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/size) */\n  readonly size: number;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/type) */\n  readonly type: string;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/text) */\n  text(): Promise<string>;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/slice) */\n  slice(start?: number, end?: number): BlobLike;\n}\n\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */\nconst isBlobLike = (value: any): value is BlobLike & { arrayBuffer(): Promise<ArrayBuffer> } =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.size === 'number' &&\n  typeof value.type === 'string' &&\n  typeof value.text === 'function' &&\n  typeof value.slice === 'function' &&\n  typeof value.arrayBuffer === 'function';\n\n/**\n * Intended to match DOM File, node:buffer File, undici File, etc.\n */\ninterface FileLike extends BlobLike {\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/lastModified) */\n  readonly lastModified: number;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/name) */\n  readonly name?: string | undefined;\n}\n\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */\nconst isFileLike = (value: any): value is FileLike & { arrayBuffer(): Promise<ArrayBuffer> } =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.name === 'string' &&\n  typeof value.lastModified === 'number' &&\n  isBlobLike(value);\n\n/**\n * Intended to match DOM Response, node-fetch Response, undici Response, etc.\n */\nexport interface ResponseLike {\n  url: string;\n  blob(): Promise<BlobLike>;\n}\n\nconst isResponseLike = (value: any): value is ResponseLike =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.url === 'string' &&\n  typeof value.blob === 'function';\n\nexport type ToFileInput =\n  | FileLike\n  | ResponseLike\n  | Exclude<BlobLikePart, string>\n  | AsyncIterable<BlobLikePart>;\n\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file. Can be an {@link Uploadable}, BlobLikePart, or AsyncIterable of BlobLikeParts\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(\n  value: ToFileInput | PromiseLike<ToFileInput>,\n  name?: string | null | undefined,\n  options?: FilePropertyBag | undefined,\n): Promise<File> {\n  checkFileSupport();\n\n  // If it's a promise, resolve it.\n  value = await value;\n\n  name ||= getName(value);\n\n  // If we've been given a `File` we don't need to do anything if the name / options\n  // have not been customised.\n  if (isFileLike(value)) {\n    if (value instanceof File && name == null && options == null) {\n      return value;\n    }\n    return makeFile([await value.arrayBuffer()], name ?? value.name, {\n      type: value.type,\n      lastModified: value.lastModified,\n      ...options,\n    });\n  }\n\n  if (isResponseLike(value)) {\n    const blob = await value.blob();\n    name ||= new URL(value.url).pathname.split(/[\\\\/]/).pop();\n\n    return makeFile(await getBytes(blob), name, options);\n  }\n\n  const parts = await getBytes(value);\n\n  if (!options?.type) {\n    const type = parts.find((part) => typeof part === 'object' && 'type' in part && part.type);\n    if (typeof type === 'string') {\n      options = { ...options, type };\n    }\n  }\n\n  return makeFile(parts, name, options);\n}\n\nasync function getBytes(value: BlobLikePart | AsyncIterable<BlobLikePart>): Promise<Array<BlobPart>> {\n  let parts: Array<BlobPart> = [];\n  if (\n    typeof value === 'string' ||\n    ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n    value instanceof ArrayBuffer\n  ) {\n    parts.push(value);\n  } else if (isBlobLike(value)) {\n    parts.push(value instanceof Blob ? value : await value.arrayBuffer());\n  } else if (\n    isAsyncIterable(value) // includes Readable, ReadableStream, etc.\n  ) {\n    for await (const chunk of value) {\n      parts.push(...(await getBytes(chunk as BlobLikePart))); // TODO, consider validating?\n    }\n  } else {\n    const constructor = value?.constructor?.name;\n    throw new Error(\n      `Unexpected data type: ${typeof value}${\n        constructor ? `; constructor: ${constructor}` : ''\n      }${propsForError(value)}`,\n    );\n  }\n\n  return parts;\n}\n\nfunction propsForError(value: unknown): string {\n  if (typeof value !== 'object' || value === null) return '';\n  const props = Object.getOwnPropertyNames(value);\n  return `; props: [${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1697, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/core/uploads.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/core/uploads.ts"],"sourcesContent":["export { type Uploadable } from '../internal/uploads';\nexport { toFile, type ToFileInput } from '../internal/to-file';\n"],"names":[],"mappings":";OACO,EAAE,MAAM,EAAoB","debugId":null}},
    {"offset": {"line": 1704, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/resources/shared.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/resources/shared.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nexport interface APIErrorObject {\n  message: string;\n\n  type: 'api_error';\n}\n\nexport interface AuthenticationError {\n  message: string;\n\n  type: 'authentication_error';\n}\n\nexport interface BillingError {\n  message: string;\n\n  type: 'billing_error';\n}\n\nexport type ErrorObject =\n  | InvalidRequestError\n  | AuthenticationError\n  | BillingError\n  | PermissionError\n  | NotFoundError\n  | RateLimitError\n  | GatewayTimeoutError\n  | APIErrorObject\n  | OverloadedError;\n\nexport interface ErrorResponse {\n  error: ErrorObject;\n\n  request_id: string | null;\n\n  type: 'error';\n}\n\nexport interface GatewayTimeoutError {\n  message: string;\n\n  type: 'timeout_error';\n}\n\nexport interface InvalidRequestError {\n  message: string;\n\n  type: 'invalid_request_error';\n}\n\nexport interface NotFoundError {\n  message: string;\n\n  type: 'not_found_error';\n}\n\nexport interface OverloadedError {\n  message: string;\n\n  type: 'overloaded_error';\n}\n\nexport interface PermissionError {\n  message: string;\n\n  type: 'permission_error';\n}\n\nexport interface RateLimitError {\n  message: string;\n\n  type: 'rate_limit_error';\n}\n"],"names":[],"mappings":"AAAA,sFAAsF","debugId":null}},
    {"offset": {"line": 1712, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/core/resource.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/core/resource.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { BaseAnthropic } from '../client';\n\nexport abstract class APIResource {\n  protected _client: BaseAnthropic;\n\n  constructor(client: BaseAnthropic) {\n    this._client = client;\n  }\n}\n"],"names":[],"mappings":"AAAA,sFAAsF;;;;;AAIhF,MAAgB,WAAW;IAG/B,YAAY,MAAqB,CAAA;QAC/B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;CACF","debugId":null}},
    {"offset": {"line": 1726, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/internal/headers.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/internal/headers.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { isReadonlyArray } from './utils/values';\n\ntype HeaderValue = string | undefined | null;\nexport type HeadersLike =\n  | Headers\n  | readonly HeaderValue[][]\n  | Record<string, HeaderValue | readonly HeaderValue[]>\n  | undefined\n  | null\n  | NullableHeaders;\n\nconst brand_privateNullableHeaders = Symbol.for('brand.privateNullableHeaders') as symbol & {\n  description: 'brand.privateNullableHeaders';\n};\n\n/**\n * @internal\n * Users can pass explicit nulls to unset default headers. When we parse them\n * into a standard headers type we need to preserve that information.\n */\nexport type NullableHeaders = {\n  /** Brand check, prevent users from creating a NullableHeaders. */\n  [_: typeof brand_privateNullableHeaders]: true;\n  /** Parsed headers. */\n  values: Headers;\n  /** Set of lowercase header names explicitly set to null. */\n  nulls: Set<string>;\n};\n\nfunction* iterateHeaders(headers: HeadersLike): IterableIterator<readonly [string, string | null]> {\n  if (!headers) return;\n\n  if (brand_privateNullableHeaders in headers) {\n    const { values, nulls } = headers as NullableHeaders;\n    yield* values.entries();\n    for (const name of nulls) {\n      yield [name, null];\n    }\n    return;\n  }\n\n  let shouldClear = false;\n  let iter: Iterable<readonly (HeaderValue | readonly HeaderValue[])[]>;\n  if (headers instanceof Headers) {\n    iter = headers.entries();\n  } else if (isReadonlyArray(headers)) {\n    iter = headers;\n  } else {\n    shouldClear = true;\n    iter = Object.entries(headers ?? {});\n  }\n  for (let row of iter) {\n    const name = row[0];\n    if (typeof name !== 'string') throw new TypeError('expected header name to be a string');\n    const values = isReadonlyArray(row[1]) ? row[1] : [row[1]];\n    let didClear = false;\n    for (const value of values) {\n      if (value === undefined) continue;\n\n      // Objects keys always overwrite older headers, they never append.\n      // Yield a null to clear the header before adding the new values.\n      if (shouldClear && !didClear) {\n        didClear = true;\n        yield [name, null];\n      }\n      yield [name, value];\n    }\n  }\n}\n\nexport const buildHeaders = (newHeaders: HeadersLike[]): NullableHeaders => {\n  const targetHeaders = new Headers();\n  const nullHeaders = new Set<string>();\n  for (const headers of newHeaders) {\n    const seenHeaders = new Set<string>();\n    for (const [name, value] of iterateHeaders(headers)) {\n      const lowerName = name.toLowerCase();\n      if (!seenHeaders.has(lowerName)) {\n        targetHeaders.delete(name);\n        seenHeaders.add(lowerName);\n      }\n      if (value === null) {\n        targetHeaders.delete(name);\n        nullHeaders.add(lowerName);\n      } else {\n        targetHeaders.append(name, value);\n        nullHeaders.delete(lowerName);\n      }\n    }\n  }\n  return { [brand_privateNullableHeaders]: true, values: targetHeaders, nulls: nullHeaders };\n};\n\nexport const isEmptyHeaders = (headers: HeadersLike) => {\n  for (const _ of iterateHeaders(headers)) return false;\n  return true;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1818, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/internal/utils/path.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/internal/utils/path.ts"],"sourcesContent":["import { AnthropicError } from '../../core/error';\n\n/**\n * Percent-encode everything that isn't safe to have in a path without encoding safe chars.\n *\n * Taken from https://datatracker.ietf.org/doc/html/rfc3986#section-3.3:\n * > unreserved  = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n * > sub-delims  = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * > pchar       = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n */\nexport function encodeURIPath(str: string) {\n  return str.replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]+/g, encodeURIComponent);\n}\n\nconst EMPTY = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.create(null));\n\nexport const createPathTagFunction = (pathEncoder = encodeURIPath) =>\n  function path(statics: readonly string[], ...params: readonly unknown[]): string {\n    // If there are no params, no processing is needed.\n    if (statics.length === 1) return statics[0]!;\n\n    let postPath = false;\n    const invalidSegments = [];\n    const path = statics.reduce((previousValue, currentValue, index) => {\n      if (/[?#]/.test(currentValue)) {\n        postPath = true;\n      }\n      const value = params[index];\n      let encoded = (postPath ? encodeURIComponent : pathEncoder)('' + value);\n      if (\n        index !== params.length &&\n        (value == null ||\n          (typeof value === 'object' &&\n            // handle values from other realms\n            value.toString ===\n              Object.getPrototypeOf(Object.getPrototypeOf((value as any).hasOwnProperty ?? EMPTY) ?? EMPTY)\n                ?.toString))\n      ) {\n        encoded = value + '';\n        invalidSegments.push({\n          start: previousValue.length + currentValue.length,\n          length: encoded.length,\n          error: `Value of type ${Object.prototype.toString\n            .call(value)\n            .slice(8, -1)} is not a valid path parameter`,\n        });\n      }\n      return previousValue + currentValue + (index === params.length ? '' : encoded);\n    }, '');\n\n    const pathOnly = path.split(/[?#]/, 1)[0]!;\n    const invalidSegmentPattern = /(?<=^|\\/)(?:\\.|%2e){1,2}(?=\\/|$)/gi;\n    let match;\n\n    // Find all invalid segments\n    while ((match = invalidSegmentPattern.exec(pathOnly)) !== null) {\n      invalidSegments.push({\n        start: match.index,\n        length: match[0].length,\n        error: `Value \"${match[0]}\" can\\'t be safely passed as a path parameter`,\n      });\n    }\n\n    invalidSegments.sort((a, b) => a.start - b.start);\n\n    if (invalidSegments.length > 0) {\n      let lastEnd = 0;\n      const underline = invalidSegments.reduce((acc, segment) => {\n        const spaces = ' '.repeat(segment.start - lastEnd);\n        const arrows = '^'.repeat(segment.length);\n        lastEnd = segment.start + segment.length;\n        return acc + spaces + arrows;\n      }, '');\n\n      throw new AnthropicError(\n        `Path parameters result in path with invalid segments:\\n${invalidSegments\n          .map((e) => e.error)\n          .join('\\n')}\\n${path}\\n${underline}`,\n      );\n    }\n\n    return path;\n  };\n\n/**\n * URI-encodes path params and ensures no unsafe /./ or /../ path segments are introduced.\n */\nexport const path = /* @__PURE__ */ createPathTagFunction(encodeURIPath);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1883, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/resources/beta/files.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/resources/beta/files.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as BetaAPI from './beta';\nimport { APIPromise } from '../../core/api-promise';\nimport { Page, type PageParams, PagePromise } from '../../core/pagination';\nimport { type Uploadable } from '../../core/uploads';\nimport { buildHeaders } from '../../internal/headers';\nimport { RequestOptions } from '../../internal/request-options';\nimport { multipartFormRequestOptions } from '../../internal/uploads';\nimport { path } from '../../internal/utils/path';\n\nexport class Files extends APIResource {\n  /**\n   * List Files\n   *\n   * @example\n   * ```ts\n   * // Automatically fetches more pages as needed.\n   * for await (const fileMetadata of client.beta.files.list()) {\n   *   // ...\n   * }\n   * ```\n   */\n  list(\n    params: FileListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<FileMetadataPage, FileMetadata> {\n    const { betas, ...query } = params ?? {};\n    return this._client.getAPIList('/v1/files', Page<FileMetadata>, {\n      query,\n      ...options,\n      headers: buildHeaders([\n        { 'anthropic-beta': [...(betas ?? []), 'files-api-2025-04-14'].toString() },\n        options?.headers,\n      ]),\n    });\n  }\n\n  /**\n   * Delete File\n   *\n   * @example\n   * ```ts\n   * const deletedFile = await client.beta.files.delete(\n   *   'file_id',\n   * );\n   * ```\n   */\n  delete(\n    fileID: string,\n    params: FileDeleteParams | null | undefined = {},\n    options?: RequestOptions,\n  ): APIPromise<DeletedFile> {\n    const { betas } = params ?? {};\n    return this._client.delete(path`/v1/files/${fileID}`, {\n      ...options,\n      headers: buildHeaders([\n        { 'anthropic-beta': [...(betas ?? []), 'files-api-2025-04-14'].toString() },\n        options?.headers,\n      ]),\n    });\n  }\n\n  /**\n   * Download File\n   *\n   * @example\n   * ```ts\n   * const response = await client.beta.files.download(\n   *   'file_id',\n   * );\n   *\n   * const content = await response.blob();\n   * console.log(content);\n   * ```\n   */\n  download(\n    fileID: string,\n    params: FileDownloadParams | null | undefined = {},\n    options?: RequestOptions,\n  ): APIPromise<Response> {\n    const { betas } = params ?? {};\n    return this._client.get(path`/v1/files/${fileID}/content`, {\n      ...options,\n      headers: buildHeaders([\n        {\n          'anthropic-beta': [...(betas ?? []), 'files-api-2025-04-14'].toString(),\n          Accept: 'application/binary',\n        },\n        options?.headers,\n      ]),\n      __binaryResponse: true,\n    });\n  }\n\n  /**\n   * Get File Metadata\n   *\n   * @example\n   * ```ts\n   * const fileMetadata =\n   *   await client.beta.files.retrieveMetadata('file_id');\n   * ```\n   */\n  retrieveMetadata(\n    fileID: string,\n    params: FileRetrieveMetadataParams | null | undefined = {},\n    options?: RequestOptions,\n  ): APIPromise<FileMetadata> {\n    const { betas } = params ?? {};\n    return this._client.get(path`/v1/files/${fileID}`, {\n      ...options,\n      headers: buildHeaders([\n        { 'anthropic-beta': [...(betas ?? []), 'files-api-2025-04-14'].toString() },\n        options?.headers,\n      ]),\n    });\n  }\n\n  /**\n   * Upload File\n   *\n   * @example\n   * ```ts\n   * const fileMetadata = await client.beta.files.upload({\n   *   file: fs.createReadStream('path/to/file'),\n   * });\n   * ```\n   */\n  upload(params: FileUploadParams, options?: RequestOptions): APIPromise<FileMetadata> {\n    const { betas, ...body } = params;\n    return this._client.post(\n      '/v1/files',\n      multipartFormRequestOptions(\n        {\n          body,\n          ...options,\n          headers: buildHeaders([\n            { 'anthropic-beta': [...(betas ?? []), 'files-api-2025-04-14'].toString() },\n            options?.headers,\n          ]),\n        },\n        this._client,\n      ),\n    );\n  }\n}\n\nexport type FileMetadataPage = Page<FileMetadata>;\n\nexport interface DeletedFile {\n  /**\n   * ID of the deleted file.\n   */\n  id: string;\n\n  /**\n   * Deleted object type.\n   *\n   * For file deletion, this is always `\"file_deleted\"`.\n   */\n  type?: 'file_deleted';\n}\n\nexport interface FileMetadata {\n  /**\n   * Unique object identifier.\n   *\n   * The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * RFC 3339 datetime string representing when the file was created.\n   */\n  created_at: string;\n\n  /**\n   * Original filename of the uploaded file.\n   */\n  filename: string;\n\n  /**\n   * MIME type of the file.\n   */\n  mime_type: string;\n\n  /**\n   * Size of the file in bytes.\n   */\n  size_bytes: number;\n\n  /**\n   * Object type.\n   *\n   * For files, this is always `\"file\"`.\n   */\n  type: 'file';\n\n  /**\n   * Whether the file can be downloaded.\n   */\n  downloadable?: boolean;\n}\n\nexport interface FileListParams extends PageParams {\n  /**\n   * Header param: Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport interface FileDeleteParams {\n  /**\n   * Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport interface FileDownloadParams {\n  /**\n   * Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport interface FileRetrieveMetadataParams {\n  /**\n   * Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport interface FileUploadParams {\n  /**\n   * Body param: The file to upload\n   */\n  file: Uploadable;\n\n  /**\n   * Header param: Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport declare namespace Files {\n  export {\n    type DeletedFile as DeletedFile,\n    type FileMetadata as FileMetadata,\n    type FileMetadataPage as FileMetadataPage,\n    type FileListParams as FileListParams,\n    type FileDeleteParams as FileDeleteParams,\n    type FileDownloadParams as FileDownloadParams,\n    type FileRetrieveMetadataParams as FileRetrieveMetadataParams,\n    type FileUploadParams as FileUploadParams,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2031, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/resources/beta/models.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/resources/beta/models.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as BetaAPI from './beta';\nimport { APIPromise } from '../../core/api-promise';\nimport { Page, type PageParams, PagePromise } from '../../core/pagination';\nimport { buildHeaders } from '../../internal/headers';\nimport { RequestOptions } from '../../internal/request-options';\nimport { path } from '../../internal/utils/path';\n\nexport class Models extends APIResource {\n  /**\n   * Get a specific model.\n   *\n   * The Models API response can be used to determine information about a specific\n   * model or resolve a model alias to a model ID.\n   *\n   * @example\n   * ```ts\n   * const betaModelInfo = await client.beta.models.retrieve(\n   *   'model_id',\n   * );\n   * ```\n   */\n  retrieve(\n    modelID: string,\n    params: ModelRetrieveParams | null | undefined = {},\n    options?: RequestOptions,\n  ): APIPromise<BetaModelInfo> {\n    const { betas } = params ?? {};\n    return this._client.get(path`/v1/models/${modelID}?beta=true`, {\n      ...options,\n      headers: buildHeaders([\n        { ...(betas?.toString() != null ? { 'anthropic-beta': betas?.toString() } : undefined) },\n        options?.headers,\n      ]),\n    });\n  }\n\n  /**\n   * List available models.\n   *\n   * The Models API response can be used to determine which models are available for\n   * use in the API. More recently released models are listed first.\n   *\n   * @example\n   * ```ts\n   * // Automatically fetches more pages as needed.\n   * for await (const betaModelInfo of client.beta.models.list()) {\n   *   // ...\n   * }\n   * ```\n   */\n  list(\n    params: ModelListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<BetaModelInfosPage, BetaModelInfo> {\n    const { betas, ...query } = params ?? {};\n    return this._client.getAPIList('/v1/models?beta=true', Page<BetaModelInfo>, {\n      query,\n      ...options,\n      headers: buildHeaders([\n        { ...(betas?.toString() != null ? { 'anthropic-beta': betas?.toString() } : undefined) },\n        options?.headers,\n      ]),\n    });\n  }\n}\n\nexport type BetaModelInfosPage = Page<BetaModelInfo>;\n\nexport interface BetaModelInfo {\n  /**\n   * Unique model identifier.\n   */\n  id: string;\n\n  /**\n   * RFC 3339 datetime string representing the time at which the model was released.\n   * May be set to an epoch value if the release date is unknown.\n   */\n  created_at: string;\n\n  /**\n   * A human-readable name for the model.\n   */\n  display_name: string;\n\n  /**\n   * Object type.\n   *\n   * For Models, this is always `\"model\"`.\n   */\n  type: 'model';\n}\n\nexport interface ModelRetrieveParams {\n  /**\n   * Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport interface ModelListParams extends PageParams {\n  /**\n   * Header param: Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport declare namespace Models {\n  export {\n    type BetaModelInfo as BetaModelInfo,\n    type BetaModelInfosPage as BetaModelInfosPage,\n    type ModelRetrieveParams as ModelRetrieveParams,\n    type ModelListParams as ModelListParams,\n  };\n}\n"],"names":[],"mappings":"AAAA,sFAAsF;;;;;OAE/E,EAAE,WAAW,EAAE;OAGf,EAAE,IAAI,EAAgC;OACtC,EAAE,YAAY,EAAE;OAEhB,EAAE,IAAI,EAAE;;;;;AAET,MAAO,MAAO,SAAQ,8KAAW;IACrC;;;;;;;;;;;;OAYG,CACH,QAAQ,CACN,OAAe,EACf,SAAiD,CAAA,CAAE,EACnD,OAAwB,EAAA;QAExB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAA,CAAE,CAAC;QAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,gLAAI,CAAA,WAAA,EAAc,OAAO,CAAA,UAAA,CAAY,EAAE;YAC7D,GAAG,OAAO;YACV,OAAO,MAAE,kLAAY,EAAC;gBACpB;oBAAE,GAAG,AAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;wBAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE;oBAAA,CAAE,CAAC,CAAC,CAAC,SAAS,CAAC;gBAAA,CAAE;gBACxF,OAAO,EAAE,OAAO;aACjB,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAED;;;;;;;;;;;;;OAaG,CACH,IAAI,CACF,SAA6C,CAAA,CAAE,EAC/C,OAAwB,EAAA;QAExB,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,MAAM,IAAI,CAAA,CAAE,CAAC;QACzC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,sBAAsB,EAAE,yKAAmB,CAAA,CAAE;YAC1E,KAAK;YACL,GAAG,OAAO;YACV,OAAO,MAAE,kLAAY,EAAC;gBACpB;oBAAE,GAAG,AAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;wBAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE;oBAAA,CAAE,CAAC,CAAC,CAAC,SAAS,CAAC;gBAAA,CAAE;gBACxF,OAAO,EAAE,OAAO;aACjB,CAAC;SACH,CAAC,CAAC;IACL,CAAC;CACF","debugId":null}},
    {"offset": {"line": 2104, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/internal/decoders/jsonl.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/internal/decoders/jsonl.ts"],"sourcesContent":["import { AnthropicError } from '../../core/error';\nimport { ReadableStreamToAsyncIterable } from '../shims';\nimport { LineDecoder, type Bytes } from './line';\n\nexport class JSONLDecoder<T> {\n  controller: AbortController;\n\n  constructor(\n    private iterator: AsyncIterableIterator<Bytes>,\n    controller: AbortController,\n  ) {\n    this.controller = controller;\n  }\n\n  private async *decoder(): AsyncIterator<T, any, undefined> {\n    const lineDecoder = new LineDecoder();\n    for await (const chunk of this.iterator) {\n      for (const line of lineDecoder.decode(chunk)) {\n        yield JSON.parse(line);\n      }\n    }\n\n    for (const line of lineDecoder.flush()) {\n      yield JSON.parse(line);\n    }\n  }\n\n  [Symbol.asyncIterator](): AsyncIterator<T> {\n    return this.decoder();\n  }\n\n  static fromResponse<T>(response: Response, controller: AbortController): JSONLDecoder<T> {\n    if (!response.body) {\n      controller.abort();\n      if (\n        typeof (globalThis as any).navigator !== 'undefined' &&\n        (globalThis as any).navigator.product === 'ReactNative'\n      ) {\n        throw new AnthropicError(\n          `The default react-native fetch implementation does not support streaming. Please use expo/fetch: https://docs.expo.dev/versions/latest/sdk/expo/#expofetch-api`,\n        );\n      }\n      throw new AnthropicError(`Attempted to iterate over a response with no body`);\n    }\n\n    return new JSONLDecoder(ReadableStreamToAsyncIterable<Bytes>(response.body), controller);\n  }\n}\n"],"names":[],"mappings":";;;;OAAO,EAAE,cAAc,EAAE;OAClB,EAAE,6BAA6B,EAAE;OACjC,EAAE,WAAW,EAAc;;;;AAE5B,MAAO,YAAY;IAGvB,YACU,QAAsC,EAC9C,UAA2B,CAAA;QADnB,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAA8B;QAG9C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAEO,KAAK,CAAC,CAAC,OAAO,GAAA;QACpB,MAAM,WAAW,GAAG,IAAI,0LAAW,EAAE,CAAC;QACtC,IAAI,KAAK,EAAE,MAAM,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAE,CAAC;YACxC,KAAK,MAAM,IAAI,IAAI,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAE,CAAC;gBAC7C,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACzB,CAAC;QACH,CAAC;QAED,KAAK,MAAM,IAAI,IAAI,WAAW,CAAC,KAAK,EAAE,CAAE,CAAC;YACvC,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC;IACH,CAAC;IAED,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;QACpB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IAED,MAAM,CAAC,YAAY,CAAI,QAAkB,EAAE,UAA2B,EAAA;QACpE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACnB,UAAU,CAAC,KAAK,EAAE,CAAC;YACnB,IACE,OAAQ,UAAkB,CAAC,SAAS,KAAK,WAAW,IACnD,UAAkB,CAAC,SAAS,CAAC,OAAO,KAAK,aAAa,EACvD,CAAC;gBACD,MAAM,IAAI,8KAAc,CACtB,CAAA,8JAAA,CAAgK,CACjK,CAAC;YACJ,CAAC;YACD,MAAM,IAAI,8KAAc,CAAC,CAAA,iDAAA,CAAmD,CAAC,CAAC;QAChF,CAAC;QAED,OAAO,IAAI,YAAY,KAAC,iMAA6B,EAAQ,QAAQ,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,CAAC;IAC3F,CAAC;CACF","debugId":null}},
    {"offset": {"line": 2148, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/error.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/error.ts"],"sourcesContent":["/** @deprecated Import from ./core/error instead */\nexport * from './core/error';\n"],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 2155, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/resources/beta/messages/batches.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/resources/beta/messages/batches.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport * as BetaAPI from '../beta';\nimport { APIPromise } from '../../../core/api-promise';\nimport * as BetaMessagesAPI from './messages';\nimport { Page, type PageParams, PagePromise } from '../../../core/pagination';\nimport { buildHeaders } from '../../../internal/headers';\nimport { RequestOptions } from '../../../internal/request-options';\nimport { JSONLDecoder } from '../../../internal/decoders/jsonl';\nimport { AnthropicError } from '../../../error';\nimport { path } from '../../../internal/utils/path';\n\nexport class Batches extends APIResource {\n  /**\n   * Send a batch of Message creation requests.\n   *\n   * The Message Batches API can be used to process multiple Messages API requests at\n   * once. Once a Message Batch is created, it begins processing immediately. Batches\n   * can take up to 24 hours to complete.\n   *\n   * Learn more about the Message Batches API in our\n   * [user guide](/en/docs/build-with-claude/batch-processing)\n   *\n   * @example\n   * ```ts\n   * const betaMessageBatch =\n   *   await client.beta.messages.batches.create({\n   *     requests: [\n   *       {\n   *         custom_id: 'my-custom-id-1',\n   *         params: {\n   *           max_tokens: 1024,\n   *           messages: [\n   *             { content: 'Hello, world', role: 'user' },\n   *           ],\n   *           model: 'claude-sonnet-4-5-20250929',\n   *         },\n   *       },\n   *     ],\n   *   });\n   * ```\n   */\n  create(params: BatchCreateParams, options?: RequestOptions): APIPromise<BetaMessageBatch> {\n    const { betas, ...body } = params;\n    return this._client.post('/v1/messages/batches?beta=true', {\n      body,\n      ...options,\n      headers: buildHeaders([\n        { 'anthropic-beta': [...(betas ?? []), 'message-batches-2024-09-24'].toString() },\n        options?.headers,\n      ]),\n    });\n  }\n\n  /**\n   * This endpoint is idempotent and can be used to poll for Message Batch\n   * completion. To access the results of a Message Batch, make a request to the\n   * `results_url` field in the response.\n   *\n   * Learn more about the Message Batches API in our\n   * [user guide](/en/docs/build-with-claude/batch-processing)\n   *\n   * @example\n   * ```ts\n   * const betaMessageBatch =\n   *   await client.beta.messages.batches.retrieve(\n   *     'message_batch_id',\n   *   );\n   * ```\n   */\n  retrieve(\n    messageBatchID: string,\n    params: BatchRetrieveParams | null | undefined = {},\n    options?: RequestOptions,\n  ): APIPromise<BetaMessageBatch> {\n    const { betas } = params ?? {};\n    return this._client.get(path`/v1/messages/batches/${messageBatchID}?beta=true`, {\n      ...options,\n      headers: buildHeaders([\n        { 'anthropic-beta': [...(betas ?? []), 'message-batches-2024-09-24'].toString() },\n        options?.headers,\n      ]),\n    });\n  }\n\n  /**\n   * List all Message Batches within a Workspace. Most recently created batches are\n   * returned first.\n   *\n   * Learn more about the Message Batches API in our\n   * [user guide](/en/docs/build-with-claude/batch-processing)\n   *\n   * @example\n   * ```ts\n   * // Automatically fetches more pages as needed.\n   * for await (const betaMessageBatch of client.beta.messages.batches.list()) {\n   *   // ...\n   * }\n   * ```\n   */\n  list(\n    params: BatchListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<BetaMessageBatchesPage, BetaMessageBatch> {\n    const { betas, ...query } = params ?? {};\n    return this._client.getAPIList('/v1/messages/batches?beta=true', Page<BetaMessageBatch>, {\n      query,\n      ...options,\n      headers: buildHeaders([\n        { 'anthropic-beta': [...(betas ?? []), 'message-batches-2024-09-24'].toString() },\n        options?.headers,\n      ]),\n    });\n  }\n\n  /**\n   * Delete a Message Batch.\n   *\n   * Message Batches can only be deleted once they've finished processing. If you'd\n   * like to delete an in-progress batch, you must first cancel it.\n   *\n   * Learn more about the Message Batches API in our\n   * [user guide](/en/docs/build-with-claude/batch-processing)\n   *\n   * @example\n   * ```ts\n   * const betaDeletedMessageBatch =\n   *   await client.beta.messages.batches.delete(\n   *     'message_batch_id',\n   *   );\n   * ```\n   */\n  delete(\n    messageBatchID: string,\n    params: BatchDeleteParams | null | undefined = {},\n    options?: RequestOptions,\n  ): APIPromise<BetaDeletedMessageBatch> {\n    const { betas } = params ?? {};\n    return this._client.delete(path`/v1/messages/batches/${messageBatchID}?beta=true`, {\n      ...options,\n      headers: buildHeaders([\n        { 'anthropic-beta': [...(betas ?? []), 'message-batches-2024-09-24'].toString() },\n        options?.headers,\n      ]),\n    });\n  }\n\n  /**\n   * Batches may be canceled any time before processing ends. Once cancellation is\n   * initiated, the batch enters a `canceling` state, at which time the system may\n   * complete any in-progress, non-interruptible requests before finalizing\n   * cancellation.\n   *\n   * The number of canceled requests is specified in `request_counts`. To determine\n   * which requests were canceled, check the individual results within the batch.\n   * Note that cancellation may not result in any canceled requests if they were\n   * non-interruptible.\n   *\n   * Learn more about the Message Batches API in our\n   * [user guide](/en/docs/build-with-claude/batch-processing)\n   *\n   * @example\n   * ```ts\n   * const betaMessageBatch =\n   *   await client.beta.messages.batches.cancel(\n   *     'message_batch_id',\n   *   );\n   * ```\n   */\n  cancel(\n    messageBatchID: string,\n    params: BatchCancelParams | null | undefined = {},\n    options?: RequestOptions,\n  ): APIPromise<BetaMessageBatch> {\n    const { betas } = params ?? {};\n    return this._client.post(path`/v1/messages/batches/${messageBatchID}/cancel?beta=true`, {\n      ...options,\n      headers: buildHeaders([\n        { 'anthropic-beta': [...(betas ?? []), 'message-batches-2024-09-24'].toString() },\n        options?.headers,\n      ]),\n    });\n  }\n\n  /**\n   * Streams the results of a Message Batch as a `.jsonl` file.\n   *\n   * Each line in the file is a JSON object containing the result of a single request\n   * in the Message Batch. Results are not guaranteed to be in the same order as\n   * requests. Use the `custom_id` field to match results to requests.\n   *\n   * Learn more about the Message Batches API in our\n   * [user guide](/en/docs/build-with-claude/batch-processing)\n   *\n   * @example\n   * ```ts\n   * const betaMessageBatchIndividualResponse =\n   *   await client.beta.messages.batches.results(\n   *     'message_batch_id',\n   *   );\n   * ```\n   */\n  async results(\n    messageBatchID: string,\n    params: BatchResultsParams | undefined = {},\n    options?: RequestOptions,\n  ): Promise<JSONLDecoder<BetaMessageBatchIndividualResponse>> {\n    const batch = await this.retrieve(messageBatchID);\n    if (!batch.results_url) {\n      throw new AnthropicError(\n        `No batch \\`results_url\\`; Has it finished processing? ${batch.processing_status} - ${batch.id}`,\n      );\n    }\n\n    const { betas } = params ?? {};\n    return this._client\n      .get(batch.results_url, {\n        ...options,\n        headers: buildHeaders([\n          {\n            'anthropic-beta': [...(betas ?? []), 'message-batches-2024-09-24'].toString(),\n            Accept: 'application/binary',\n          },\n          options?.headers,\n        ]),\n        stream: true,\n        __binaryResponse: true,\n      })\n      ._thenUnwrap((_, props) => JSONLDecoder.fromResponse(props.response, props.controller)) as APIPromise<\n      JSONLDecoder<BetaMessageBatchIndividualResponse>\n    >;\n  }\n}\n\nexport type BetaMessageBatchesPage = Page<BetaMessageBatch>;\n\nexport interface BetaDeletedMessageBatch {\n  /**\n   * ID of the Message Batch.\n   */\n  id: string;\n\n  /**\n   * Deleted object type.\n   *\n   * For Message Batches, this is always `\"message_batch_deleted\"`.\n   */\n  type: 'message_batch_deleted';\n}\n\nexport interface BetaMessageBatch {\n  /**\n   * Unique object identifier.\n   *\n   * The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * RFC 3339 datetime string representing the time at which the Message Batch was\n   * archived and its results became unavailable.\n   */\n  archived_at: string | null;\n\n  /**\n   * RFC 3339 datetime string representing the time at which cancellation was\n   * initiated for the Message Batch. Specified only if cancellation was initiated.\n   */\n  cancel_initiated_at: string | null;\n\n  /**\n   * RFC 3339 datetime string representing the time at which the Message Batch was\n   * created.\n   */\n  created_at: string;\n\n  /**\n   * RFC 3339 datetime string representing the time at which processing for the\n   * Message Batch ended. Specified only once processing ends.\n   *\n   * Processing ends when every request in a Message Batch has either succeeded,\n   * errored, canceled, or expired.\n   */\n  ended_at: string | null;\n\n  /**\n   * RFC 3339 datetime string representing the time at which the Message Batch will\n   * expire and end processing, which is 24 hours after creation.\n   */\n  expires_at: string;\n\n  /**\n   * Processing status of the Message Batch.\n   */\n  processing_status: 'in_progress' | 'canceling' | 'ended';\n\n  /**\n   * Tallies requests within the Message Batch, categorized by their status.\n   *\n   * Requests start as `processing` and move to one of the other statuses only once\n   * processing of the entire batch ends. The sum of all values always matches the\n   * total number of requests in the batch.\n   */\n  request_counts: BetaMessageBatchRequestCounts;\n\n  /**\n   * URL to a `.jsonl` file containing the results of the Message Batch requests.\n   * Specified only once processing ends.\n   *\n   * Results in the file are not guaranteed to be in the same order as requests. Use\n   * the `custom_id` field to match results to requests.\n   */\n  results_url: string | null;\n\n  /**\n   * Object type.\n   *\n   * For Message Batches, this is always `\"message_batch\"`.\n   */\n  type: 'message_batch';\n}\n\nexport interface BetaMessageBatchCanceledResult {\n  type: 'canceled';\n}\n\nexport interface BetaMessageBatchErroredResult {\n  error: BetaAPI.BetaErrorResponse;\n\n  type: 'errored';\n}\n\nexport interface BetaMessageBatchExpiredResult {\n  type: 'expired';\n}\n\n/**\n * This is a single line in the response `.jsonl` file and does not represent the\n * response as a whole.\n */\nexport interface BetaMessageBatchIndividualResponse {\n  /**\n   * Developer-provided ID created for each request in a Message Batch. Useful for\n   * matching results to requests, as results may be given out of request order.\n   *\n   * Must be unique for each request within the Message Batch.\n   */\n  custom_id: string;\n\n  /**\n   * Processing result for this request.\n   *\n   * Contains a Message output if processing was successful, an error response if\n   * processing failed, or the reason why processing was not attempted, such as\n   * cancellation or expiration.\n   */\n  result: BetaMessageBatchResult;\n}\n\nexport interface BetaMessageBatchRequestCounts {\n  /**\n   * Number of requests in the Message Batch that have been canceled.\n   *\n   * This is zero until processing of the entire Message Batch has ended.\n   */\n  canceled: number;\n\n  /**\n   * Number of requests in the Message Batch that encountered an error.\n   *\n   * This is zero until processing of the entire Message Batch has ended.\n   */\n  errored: number;\n\n  /**\n   * Number of requests in the Message Batch that have expired.\n   *\n   * This is zero until processing of the entire Message Batch has ended.\n   */\n  expired: number;\n\n  /**\n   * Number of requests in the Message Batch that are processing.\n   */\n  processing: number;\n\n  /**\n   * Number of requests in the Message Batch that have completed successfully.\n   *\n   * This is zero until processing of the entire Message Batch has ended.\n   */\n  succeeded: number;\n}\n\n/**\n * Processing result for this request.\n *\n * Contains a Message output if processing was successful, an error response if\n * processing failed, or the reason why processing was not attempted, such as\n * cancellation or expiration.\n */\nexport type BetaMessageBatchResult =\n  | BetaMessageBatchSucceededResult\n  | BetaMessageBatchErroredResult\n  | BetaMessageBatchCanceledResult\n  | BetaMessageBatchExpiredResult;\n\nexport interface BetaMessageBatchSucceededResult {\n  message: BetaMessagesAPI.BetaMessage;\n\n  type: 'succeeded';\n}\n\nexport interface BatchCreateParams {\n  /**\n   * Body param: List of requests for prompt completion. Each is an individual\n   * request to create a Message.\n   */\n  requests: Array<BatchCreateParams.Request>;\n\n  /**\n   * Header param: Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport namespace BatchCreateParams {\n  export interface Request {\n    /**\n     * Developer-provided ID created for each request in a Message Batch. Useful for\n     * matching results to requests, as results may be given out of request order.\n     *\n     * Must be unique for each request within the Message Batch.\n     */\n    custom_id: string;\n\n    /**\n     * Messages API creation parameters for the individual request.\n     *\n     * See the [Messages API reference](/en/api/messages) for full documentation on\n     * available parameters.\n     */\n    params: Omit<BetaMessagesAPI.MessageCreateParamsNonStreaming, 'betas'>;\n  }\n}\n\nexport interface BatchRetrieveParams {\n  /**\n   * Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport interface BatchListParams extends PageParams {\n  /**\n   * Header param: Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport interface BatchDeleteParams {\n  /**\n   * Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport interface BatchCancelParams {\n  /**\n   * Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport interface BatchResultsParams {\n  /**\n   * Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport declare namespace Batches {\n  export {\n    type BetaDeletedMessageBatch as BetaDeletedMessageBatch,\n    type BetaMessageBatch as BetaMessageBatch,\n    type BetaMessageBatchCanceledResult as BetaMessageBatchCanceledResult,\n    type BetaMessageBatchErroredResult as BetaMessageBatchErroredResult,\n    type BetaMessageBatchExpiredResult as BetaMessageBatchExpiredResult,\n    type BetaMessageBatchIndividualResponse as BetaMessageBatchIndividualResponse,\n    type BetaMessageBatchRequestCounts as BetaMessageBatchRequestCounts,\n    type BetaMessageBatchResult as BetaMessageBatchResult,\n    type BetaMessageBatchSucceededResult as BetaMessageBatchSucceededResult,\n    type BetaMessageBatchesPage as BetaMessageBatchesPage,\n    type BatchCreateParams as BatchCreateParams,\n    type BatchRetrieveParams as BatchRetrieveParams,\n    type BatchListParams as BatchListParams,\n    type BatchDeleteParams as BatchDeleteParams,\n    type BatchCancelParams as BatchCancelParams,\n    type BatchResultsParams as BatchResultsParams,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2389, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/streaming.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/streaming.ts"],"sourcesContent":["/** @deprecated Import from ./core/streaming instead */\nexport * from './core/streaming';\n"],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 2396, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/_vendor/partial-json-parser/parser.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/_vendor/partial-json-parser/parser.ts"],"sourcesContent":["type Token = {\n  type: string;\n  value: string;\n};\n\nconst tokenize = (input: string): Token[] => {\n    let current = 0;\n    let tokens: Token[] = [];\n\n    while (current < input.length) {\n      let char = input[current];\n\n      if (char === '\\\\') {\n        current++;\n        continue;\n      }\n\n      if (char === '{') {\n        tokens.push({\n          type: 'brace',\n          value: '{',\n        });\n\n        current++;\n        continue;\n      }\n\n      if (char === '}') {\n        tokens.push({\n          type: 'brace',\n          value: '}',\n        });\n\n        current++;\n        continue;\n      }\n\n      if (char === '[') {\n        tokens.push({\n          type: 'paren',\n          value: '[',\n        });\n\n        current++;\n        continue;\n      }\n\n      if (char === ']') {\n        tokens.push({\n          type: 'paren',\n          value: ']',\n        });\n\n        current++;\n        continue;\n      }\n\n      if (char === ':') {\n        tokens.push({\n          type: 'separator',\n          value: ':',\n        });\n\n        current++;\n        continue;\n      }\n\n      if (char === ',') {\n        tokens.push({\n          type: 'delimiter',\n          value: ',',\n        });\n\n        current++;\n        continue;\n      }\n\n      if (char === '\"') {\n        let value = '';\n        let danglingQuote = false;\n\n        char = input[++current];\n\n        while (char !== '\"') {\n          if (current === input.length) {\n            danglingQuote = true;\n            break;\n          }\n\n          if (char === '\\\\') {\n            current++;\n            if (current === input.length) {\n              danglingQuote = true;\n              break;\n            }\n            value += char + input[current];\n            char = input[++current];\n          } else {\n            value += char;\n            char = input[++current];\n          }\n        }\n\n        char = input[++current];\n\n        if (!danglingQuote) {\n          tokens.push({\n            type: 'string',\n            value,\n          });\n        }\n        continue;\n      }\n\n      let WHITESPACE = /\\s/;\n      if (char && WHITESPACE.test(char)) {\n        current++;\n        continue;\n      }\n\n      let NUMBERS = /[0-9]/;\n      if ((char && NUMBERS.test(char)) || char === '-' || char === '.') {\n        let value = '';\n\n        if (char === '-') {\n          value += char;\n          char = input[++current];\n        }\n\n        while ((char && NUMBERS.test(char)) || char === '.') {\n          value += char;\n          char = input[++current];\n        }\n\n        tokens.push({\n          type: 'number',\n          value,\n        });\n        continue;\n      }\n\n      let LETTERS = /[a-z]/i;\n      if (char && LETTERS.test(char)) {\n        let value = '';\n\n        while (char && LETTERS.test(char)) {\n          if (current === input.length) {\n            break;\n          }\n          value += char;\n          char = input[++current];\n        }\n\n        if (value == 'true' || value == 'false' || value === 'null') {\n          tokens.push({\n            type: 'name',\n            value,\n          });\n        } else {\n          // unknown token, e.g. `nul` which isn't quite `null`\n          current++;\n          continue;\n        }\n        continue;\n      }\n\n      current++;\n    }\n\n    return tokens;\n  },\n  strip = (tokens: Token[]): Token[] => {\n    if (tokens.length === 0) {\n      return tokens;\n    }\n\n    let lastToken = tokens[tokens.length - 1]!;\n\n    switch (lastToken.type) {\n      case 'separator':\n        tokens = tokens.slice(0, tokens.length - 1);\n        return strip(tokens);\n        break;\n      case 'number':\n        let lastCharacterOfLastToken = lastToken.value[lastToken.value.length - 1];\n        if (lastCharacterOfLastToken === '.' || lastCharacterOfLastToken === '-') {\n          tokens = tokens.slice(0, tokens.length - 1);\n          return strip(tokens);\n        }\n      case 'string':\n        let tokenBeforeTheLastToken = tokens[tokens.length - 2];\n        if (tokenBeforeTheLastToken?.type === 'delimiter') {\n          tokens = tokens.slice(0, tokens.length - 1);\n          return strip(tokens);\n        } else if (tokenBeforeTheLastToken?.type === 'brace' && tokenBeforeTheLastToken.value === '{') {\n          tokens = tokens.slice(0, tokens.length - 1);\n          return strip(tokens);\n        }\n        break;\n      case 'delimiter':\n        tokens = tokens.slice(0, tokens.length - 1);\n        return strip(tokens);\n        break;\n    }\n\n    return tokens;\n  },\n  unstrip = (tokens: Token[]): Token[] => {\n    let tail: string[] = [];\n\n    tokens.map((token) => {\n      if (token.type === 'brace') {\n        if (token.value === '{') {\n          tail.push('}');\n        } else {\n          tail.splice(tail.lastIndexOf('}'), 1);\n        }\n      }\n      if (token.type === 'paren') {\n        if (token.value === '[') {\n          tail.push(']');\n        } else {\n          tail.splice(tail.lastIndexOf(']'), 1);\n        }\n      }\n    });\n\n    if (tail.length > 0) {\n      tail.reverse().map((item) => {\n        if (item === '}') {\n          tokens.push({\n            type: 'brace',\n            value: '}',\n          });\n        } else if (item === ']') {\n          tokens.push({\n            type: 'paren',\n            value: ']',\n          });\n        }\n      });\n    }\n\n    return tokens;\n  },\n  generate = (tokens: Token[]): string => {\n    let output = '';\n\n    tokens.map((token) => {\n      switch (token.type) {\n        case 'string':\n          output += '\"' + token.value + '\"';\n          break;\n        default:\n          output += token.value;\n          break;\n      }\n    });\n\n    return output;\n  },\n  partialParse = (input: string): unknown => JSON.parse(generate(unstrip(strip(tokenize(input)))));\n\nexport { partialParse };\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2623, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/lib/BetaMessageStream.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/lib/BetaMessageStream.ts"],"sourcesContent":["import { isAbortError } from '../internal/errors';\nimport { AnthropicError, APIUserAbortError } from '../error';\nimport {\n  type BetaContentBlock,\n  Messages as BetaMessages,\n  type BetaMessage,\n  type BetaRawMessageStreamEvent as BetaMessageStreamEvent,\n  type BetaMessageParam,\n  type MessageCreateParams as BetaMessageCreateParams,\n  type MessageCreateParamsBase as BetaMessageCreateParamsBase,\n  type BetaTextBlock,\n  type BetaTextCitation,\n  type BetaToolUseBlock,\n  type BetaServerToolUseBlock,\n  type BetaMCPToolUseBlock,\n} from '../resources/beta/messages/messages';\nimport { Stream } from '../streaming';\nimport { partialParse } from '../_vendor/partial-json-parser/parser';\nimport { type RequestOptions } from '../internal/request-options';\n\nexport interface MessageStreamEvents {\n  connect: () => void;\n  streamEvent: (event: BetaMessageStreamEvent, snapshot: BetaMessage) => void;\n  text: (textDelta: string, textSnapshot: string) => void;\n  citation: (citation: BetaTextCitation, citationsSnapshot: BetaTextCitation[]) => void;\n  inputJson: (partialJson: string, jsonSnapshot: unknown) => void;\n  thinking: (thinkingDelta: string, thinkingSnapshot: string) => void;\n  signature: (signature: string) => void;\n  message: (message: BetaMessage) => void;\n  contentBlock: (content: BetaContentBlock) => void;\n  finalMessage: (message: BetaMessage) => void;\n  error: (error: AnthropicError) => void;\n  abort: (error: APIUserAbortError) => void;\n  end: () => void;\n}\n\ntype MessageStreamEventListeners<Event extends keyof MessageStreamEvents> = {\n  listener: MessageStreamEvents[Event];\n  once?: boolean;\n}[];\n\nconst JSON_BUF_PROPERTY = '__json_buf';\n\nexport type TracksToolInput = BetaToolUseBlock | BetaServerToolUseBlock | BetaMCPToolUseBlock;\n\nfunction tracksToolInput(content: BetaContentBlock): content is TracksToolInput {\n  return content.type === 'tool_use' || content.type === 'server_tool_use' || content.type === 'mcp_tool_use';\n}\n\nexport class BetaMessageStream implements AsyncIterable<BetaMessageStreamEvent> {\n  messages: BetaMessageParam[] = [];\n  receivedMessages: BetaMessage[] = [];\n  #currentMessageSnapshot: BetaMessage | undefined;\n\n  controller: AbortController = new AbortController();\n\n  #connectedPromise: Promise<Response | null>;\n  #resolveConnectedPromise: (response: Response | null) => void = () => {};\n  #rejectConnectedPromise: (error: AnthropicError) => void = () => {};\n\n  #endPromise: Promise<void>;\n  #resolveEndPromise: () => void = () => {};\n  #rejectEndPromise: (error: AnthropicError) => void = () => {};\n\n  #listeners: { [Event in keyof MessageStreamEvents]?: MessageStreamEventListeners<Event> } = {};\n\n  #ended = false;\n  #errored = false;\n  #aborted = false;\n  #catchingPromiseCreated = false;\n  #response: Response | null | undefined;\n  #request_id: string | null | undefined;\n\n  constructor() {\n    this.#connectedPromise = new Promise<Response | null>((resolve, reject) => {\n      this.#resolveConnectedPromise = resolve;\n      this.#rejectConnectedPromise = reject;\n    });\n\n    this.#endPromise = new Promise<void>((resolve, reject) => {\n      this.#resolveEndPromise = resolve;\n      this.#rejectEndPromise = reject;\n    });\n\n    // Don't let these promises cause unhandled rejection errors.\n    // we will manually cause an unhandled rejection error later\n    // if the user hasn't registered any error listener or called\n    // any promise-returning method.\n    this.#connectedPromise.catch(() => {});\n    this.#endPromise.catch(() => {});\n  }\n\n  get response(): Response | null | undefined {\n    return this.#response;\n  }\n\n  get request_id(): string | null | undefined {\n    return this.#request_id;\n  }\n\n  /**\n   * Returns the `MessageStream` data, the raw `Response` instance and the ID of the request,\n   * returned vie the `request-id` header which is useful for debugging requests and resporting\n   * issues to Anthropic.\n   *\n   * This is the same as the `APIPromise.withResponse()` method.\n   *\n   * This method will raise an error if you created the stream using `MessageStream.fromReadableStream`\n   * as no `Response` is available.\n   */\n  async withResponse(): Promise<{\n    data: BetaMessageStream;\n    response: Response;\n    request_id: string | null | undefined;\n  }> {\n    const response = await this.#connectedPromise;\n    if (!response) {\n      throw new Error('Could not resolve a `Response` object');\n    }\n\n    return {\n      data: this,\n      response,\n      request_id: response.headers.get('request-id'),\n    };\n  }\n\n  /**\n   * Intended for use on the frontend, consuming a stream produced with\n   * `.toReadableStream()` on the backend.\n   *\n   * Note that messages sent to the model do not appear in `.on('message')`\n   * in this context.\n   */\n  static fromReadableStream(stream: ReadableStream): BetaMessageStream {\n    const runner = new BetaMessageStream();\n    runner._run(() => runner._fromReadableStream(stream));\n    return runner;\n  }\n\n  static createMessage(\n    messages: BetaMessages,\n    params: BetaMessageCreateParamsBase,\n    options?: RequestOptions,\n  ): BetaMessageStream {\n    const runner = new BetaMessageStream();\n    for (const message of params.messages) {\n      runner._addMessageParam(message);\n    }\n    runner._run(() =>\n      runner._createMessage(\n        messages,\n        { ...params, stream: true },\n        { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } },\n      ),\n    );\n    return runner;\n  }\n\n  protected _run(executor: () => Promise<any>) {\n    executor().then(() => {\n      this._emitFinal();\n      this._emit('end');\n    }, this.#handleError);\n  }\n\n  protected _addMessageParam(message: BetaMessageParam) {\n    this.messages.push(message);\n  }\n\n  protected _addMessage(message: BetaMessage, emit = true) {\n    this.receivedMessages.push(message);\n    if (emit) {\n      this._emit('message', message);\n    }\n  }\n\n  protected async _createMessage(\n    messages: BetaMessages,\n    params: BetaMessageCreateParams,\n    options?: RequestOptions,\n  ): Promise<void> {\n    const signal = options?.signal;\n    let abortHandler: (() => void) | undefined;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      abortHandler = this.controller.abort.bind(this.controller);\n      signal.addEventListener('abort', abortHandler);\n    }\n    try {\n      this.#beginRequest();\n      const { response, data: stream } = await messages\n        .create({ ...params, stream: true }, { ...options, signal: this.controller.signal })\n        .withResponse();\n      this._connected(response);\n      for await (const event of stream) {\n        this.#addStreamEvent(event);\n      }\n      if (stream.controller.signal?.aborted) {\n        throw new APIUserAbortError();\n      }\n      this.#endRequest();\n    } finally {\n      if (signal && abortHandler) {\n        signal.removeEventListener('abort', abortHandler);\n      }\n    }\n  }\n\n  protected _connected(response: Response | null) {\n    if (this.ended) return;\n    this.#response = response;\n    this.#request_id = response?.headers.get('request-id');\n    this.#resolveConnectedPromise(response);\n    this._emit('connect');\n  }\n\n  get ended(): boolean {\n    return this.#ended;\n  }\n\n  get errored(): boolean {\n    return this.#errored;\n  }\n\n  get aborted(): boolean {\n    return this.#aborted;\n  }\n\n  abort() {\n    this.controller.abort();\n  }\n\n  /**\n   * Adds the listener function to the end of the listeners array for the event.\n   * No checks are made to see if the listener has already been added. Multiple calls passing\n   * the same combination of event and listener will result in the listener being added, and\n   * called, multiple times.\n   * @returns this MessageStream, so that calls can be chained\n   */\n  on<Event extends keyof MessageStreamEvents>(event: Event, listener: MessageStreamEvents[Event]): this {\n    const listeners: MessageStreamEventListeners<Event> =\n      this.#listeners[event] || (this.#listeners[event] = []);\n    listeners.push({ listener });\n    return this;\n  }\n\n  /**\n   * Removes the specified listener from the listener array for the event.\n   * off() will remove, at most, one instance of a listener from the listener array. If any single\n   * listener has been added multiple times to the listener array for the specified event, then\n   * off() must be called multiple times to remove each instance.\n   * @returns this MessageStream, so that calls can be chained\n   */\n  off<Event extends keyof MessageStreamEvents>(event: Event, listener: MessageStreamEvents[Event]): this {\n    const listeners = this.#listeners[event];\n    if (!listeners) return this;\n    const index = listeners.findIndex((l) => l.listener === listener);\n    if (index >= 0) listeners.splice(index, 1);\n    return this;\n  }\n\n  /**\n   * Adds a one-time listener function for the event. The next time the event is triggered,\n   * this listener is removed and then invoked.\n   * @returns this MessageStream, so that calls can be chained\n   */\n  once<Event extends keyof MessageStreamEvents>(event: Event, listener: MessageStreamEvents[Event]): this {\n    const listeners: MessageStreamEventListeners<Event> =\n      this.#listeners[event] || (this.#listeners[event] = []);\n    listeners.push({ listener, once: true });\n    return this;\n  }\n\n  /**\n   * This is similar to `.once()`, but returns a Promise that resolves the next time\n   * the event is triggered, instead of calling a listener callback.\n   * @returns a Promise that resolves the next time given event is triggered,\n   * or rejects if an error is emitted.  (If you request the 'error' event,\n   * returns a promise that resolves with the error).\n   *\n   * Example:\n   *\n   *   const message = await stream.emitted('message') // rejects if the stream errors\n   */\n  emitted<Event extends keyof MessageStreamEvents>(\n    event: Event,\n  ): Promise<\n    Parameters<MessageStreamEvents[Event]> extends [infer Param] ? Param\n    : Parameters<MessageStreamEvents[Event]> extends [] ? void\n    : Parameters<MessageStreamEvents[Event]>\n  > {\n    return new Promise((resolve, reject) => {\n      this.#catchingPromiseCreated = true;\n      if (event !== 'error') this.once('error', reject);\n      this.once(event, resolve as any);\n    });\n  }\n\n  async done(): Promise<void> {\n    this.#catchingPromiseCreated = true;\n    await this.#endPromise;\n  }\n\n  get currentMessage(): BetaMessage | undefined {\n    return this.#currentMessageSnapshot;\n  }\n\n  #getFinalMessage(): BetaMessage {\n    if (this.receivedMessages.length === 0) {\n      throw new AnthropicError('stream ended without producing a Message with role=assistant');\n    }\n    return this.receivedMessages.at(-1)!;\n  }\n\n  /**\n   * @returns a promise that resolves with the the final assistant Message response,\n   * or rejects if an error occurred or the stream ended prematurely without producing a Message.\n   */\n  async finalMessage(): Promise<BetaMessage> {\n    await this.done();\n    return this.#getFinalMessage();\n  }\n\n  #getFinalText(): string {\n    if (this.receivedMessages.length === 0) {\n      throw new AnthropicError('stream ended without producing a Message with role=assistant');\n    }\n    const textBlocks = this.receivedMessages\n      .at(-1)!\n      .content.filter((block): block is BetaTextBlock => block.type === 'text')\n      .map((block) => block.text);\n    if (textBlocks.length === 0) {\n      throw new AnthropicError('stream ended without producing a content block with type=text');\n    }\n    return textBlocks.join(' ');\n  }\n\n  /**\n   * @returns a promise that resolves with the the final assistant Message's text response, concatenated\n   * together if there are more than one text blocks.\n   * Rejects if an error occurred or the stream ended prematurely without producing a Message.\n   */\n  async finalText(): Promise<string> {\n    await this.done();\n    return this.#getFinalText();\n  }\n\n  #handleError = (error: unknown) => {\n    this.#errored = true;\n    if (isAbortError(error)) {\n      error = new APIUserAbortError();\n    }\n    if (error instanceof APIUserAbortError) {\n      this.#aborted = true;\n      return this._emit('abort', error);\n    }\n    if (error instanceof AnthropicError) {\n      return this._emit('error', error);\n    }\n    if (error instanceof Error) {\n      const anthropicError: AnthropicError = new AnthropicError(error.message);\n      // @ts-ignore\n      anthropicError.cause = error;\n      return this._emit('error', anthropicError);\n    }\n    return this._emit('error', new AnthropicError(String(error)));\n  };\n\n  protected _emit<Event extends keyof MessageStreamEvents>(\n    event: Event,\n    ...args: Parameters<MessageStreamEvents[Event]>\n  ) {\n    // make sure we don't emit any MessageStreamEvents after end\n    if (this.#ended) return;\n\n    if (event === 'end') {\n      this.#ended = true;\n      this.#resolveEndPromise();\n    }\n\n    const listeners: MessageStreamEventListeners<Event> | undefined = this.#listeners[event];\n    if (listeners) {\n      this.#listeners[event] = listeners.filter((l) => !l.once) as any;\n      listeners.forEach(({ listener }: any) => listener(...args));\n    }\n\n    if (event === 'abort') {\n      const error = args[0] as APIUserAbortError;\n      if (!this.#catchingPromiseCreated && !listeners?.length) {\n        Promise.reject(error);\n      }\n      this.#rejectConnectedPromise(error);\n      this.#rejectEndPromise(error);\n      this._emit('end');\n      return;\n    }\n\n    if (event === 'error') {\n      // NOTE: _emit('error', error) should only be called from #handleError().\n\n      const error = args[0] as AnthropicError;\n      if (!this.#catchingPromiseCreated && !listeners?.length) {\n        // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n        // If you are seeing stack traces here, make sure to handle errors via either:\n        // - runner.on('error', () => ...)\n        // - await runner.done()\n        // - await runner.final...()\n        // - etc.\n        Promise.reject(error);\n      }\n      this.#rejectConnectedPromise(error);\n      this.#rejectEndPromise(error);\n      this._emit('end');\n    }\n  }\n\n  protected _emitFinal() {\n    const finalMessage = this.receivedMessages.at(-1);\n    if (finalMessage) {\n      this._emit('finalMessage', this.#getFinalMessage());\n    }\n  }\n\n  #beginRequest() {\n    if (this.ended) return;\n    this.#currentMessageSnapshot = undefined;\n  }\n  #addStreamEvent(event: BetaMessageStreamEvent) {\n    if (this.ended) return;\n    const messageSnapshot = this.#accumulateMessage(event);\n    this._emit('streamEvent', event, messageSnapshot);\n\n    switch (event.type) {\n      case 'content_block_delta': {\n        const content = messageSnapshot.content.at(-1)!;\n        switch (event.delta.type) {\n          case 'text_delta': {\n            if (content.type === 'text') {\n              this._emit('text', event.delta.text, content.text || '');\n            }\n            break;\n          }\n          case 'citations_delta': {\n            if (content.type === 'text') {\n              this._emit('citation', event.delta.citation, content.citations ?? []);\n            }\n            break;\n          }\n          case 'input_json_delta': {\n            if (tracksToolInput(content) && content.input) {\n              this._emit('inputJson', event.delta.partial_json, content.input);\n            }\n            break;\n          }\n          case 'thinking_delta': {\n            if (content.type === 'thinking') {\n              this._emit('thinking', event.delta.thinking, content.thinking);\n            }\n            break;\n          }\n          case 'signature_delta': {\n            if (content.type === 'thinking') {\n              this._emit('signature', content.signature);\n            }\n            break;\n          }\n          default:\n            checkNever(event.delta);\n        }\n        break;\n      }\n      case 'message_stop': {\n        this._addMessageParam(messageSnapshot);\n        this._addMessage(messageSnapshot, true);\n        break;\n      }\n      case 'content_block_stop': {\n        this._emit('contentBlock', messageSnapshot.content.at(-1)!);\n        break;\n      }\n      case 'message_start': {\n        this.#currentMessageSnapshot = messageSnapshot;\n        break;\n      }\n      case 'content_block_start':\n      case 'message_delta':\n        break;\n    }\n  }\n  #endRequest(): BetaMessage {\n    if (this.ended) {\n      throw new AnthropicError(`stream has ended, this shouldn't happen`);\n    }\n    const snapshot = this.#currentMessageSnapshot;\n    if (!snapshot) {\n      throw new AnthropicError(`request ended without sending any chunks`);\n    }\n    this.#currentMessageSnapshot = undefined;\n    return snapshot;\n  }\n\n  protected async _fromReadableStream(\n    readableStream: ReadableStream,\n    options?: RequestOptions,\n  ): Promise<void> {\n    const signal = options?.signal;\n    let abortHandler: (() => void) | undefined;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      abortHandler = this.controller.abort.bind(this.controller);\n      signal.addEventListener('abort', abortHandler);\n    }\n    try {\n      this.#beginRequest();\n      this._connected(null);\n      const stream = Stream.fromReadableStream<BetaMessageStreamEvent>(readableStream, this.controller);\n      for await (const event of stream) {\n        this.#addStreamEvent(event);\n      }\n      if (stream.controller.signal?.aborted) {\n        throw new APIUserAbortError();\n      }\n      this.#endRequest();\n    } finally {\n      if (signal && abortHandler) {\n        signal.removeEventListener('abort', abortHandler);\n      }\n    }\n  }\n\n  /**\n   * Mutates this.#currentMessage with the current event. Handling the accumulation of multiple messages\n   * will be needed to be handled by the caller, this method will throw if you try to accumulate for multiple\n   * messages.\n   */\n  #accumulateMessage(event: BetaMessageStreamEvent): BetaMessage {\n    let snapshot = this.#currentMessageSnapshot;\n\n    if (event.type === 'message_start') {\n      if (snapshot) {\n        throw new AnthropicError(`Unexpected event order, got ${event.type} before receiving \"message_stop\"`);\n      }\n      return event.message;\n    }\n\n    if (!snapshot) {\n      throw new AnthropicError(`Unexpected event order, got ${event.type} before \"message_start\"`);\n    }\n\n    switch (event.type) {\n      case 'message_stop':\n        return snapshot;\n      case 'message_delta':\n        snapshot.container = event.delta.container;\n        snapshot.stop_reason = event.delta.stop_reason;\n        snapshot.stop_sequence = event.delta.stop_sequence;\n        snapshot.usage.output_tokens = event.usage.output_tokens;\n        snapshot.context_management = event.context_management;\n\n        if (event.usage.input_tokens != null) {\n          snapshot.usage.input_tokens = event.usage.input_tokens;\n        }\n\n        if (event.usage.cache_creation_input_tokens != null) {\n          snapshot.usage.cache_creation_input_tokens = event.usage.cache_creation_input_tokens;\n        }\n\n        if (event.usage.cache_read_input_tokens != null) {\n          snapshot.usage.cache_read_input_tokens = event.usage.cache_read_input_tokens;\n        }\n\n        if (event.usage.server_tool_use != null) {\n          snapshot.usage.server_tool_use = event.usage.server_tool_use;\n        }\n\n        return snapshot;\n      case 'content_block_start':\n        snapshot.content.push(event.content_block);\n        return snapshot;\n      case 'content_block_delta': {\n        const snapshotContent = snapshot.content.at(event.index);\n\n        switch (event.delta.type) {\n          case 'text_delta': {\n            if (snapshotContent?.type === 'text') {\n              snapshot.content[event.index] = {\n                ...snapshotContent,\n                text: (snapshotContent.text || '') + event.delta.text,\n              };\n            }\n            break;\n          }\n          case 'citations_delta': {\n            if (snapshotContent?.type === 'text') {\n              snapshot.content[event.index] = {\n                ...snapshotContent,\n                citations: [...(snapshotContent.citations ?? []), event.delta.citation],\n              };\n            }\n            break;\n          }\n          case 'input_json_delta': {\n            if (snapshotContent && tracksToolInput(snapshotContent)) {\n              // we need to keep track of the raw JSON string as well so that we can\n              // re-parse it for each delta, for now we just store it as an untyped\n              // non-enumerable property on the snapshot\n              let jsonBuf = (snapshotContent as any)[JSON_BUF_PROPERTY] || '';\n              jsonBuf += event.delta.partial_json;\n\n              const newContent = { ...snapshotContent };\n              Object.defineProperty(newContent, JSON_BUF_PROPERTY, {\n                value: jsonBuf,\n                enumerable: false,\n                writable: true,\n              });\n\n              if (jsonBuf) {\n                try {\n                  newContent.input = partialParse(jsonBuf);\n                } catch (err) {\n                  const error = new AnthropicError(\n                    `Unable to parse tool parameter JSON from model. Please retry your request or adjust your prompt. Error: ${err}. JSON: ${jsonBuf}`,\n                  );\n                  this.#handleError(error);\n                }\n              }\n              snapshot.content[event.index] = newContent;\n            }\n            break;\n          }\n          case 'thinking_delta': {\n            if (snapshotContent?.type === 'thinking') {\n              snapshot.content[event.index] = {\n                ...snapshotContent,\n                thinking: snapshotContent.thinking + event.delta.thinking,\n              };\n            }\n            break;\n          }\n          case 'signature_delta': {\n            if (snapshotContent?.type === 'thinking') {\n              snapshot.content[event.index] = {\n                ...snapshotContent,\n                signature: event.delta.signature,\n              };\n            }\n            break;\n          }\n          default:\n            checkNever(event.delta);\n        }\n        return snapshot;\n      }\n      case 'content_block_stop':\n        return snapshot;\n    }\n  }\n\n  [Symbol.asyncIterator](): AsyncIterator<BetaMessageStreamEvent> {\n    const pushQueue: BetaMessageStreamEvent[] = [];\n    const readQueue: {\n      resolve: (chunk: BetaMessageStreamEvent | undefined) => void;\n      reject: (error: unknown) => void;\n    }[] = [];\n    let done = false;\n\n    this.on('streamEvent', (event) => {\n      const reader = readQueue.shift();\n      if (reader) {\n        reader.resolve(event);\n      } else {\n        pushQueue.push(event);\n      }\n    });\n\n    this.on('end', () => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.resolve(undefined);\n      }\n      readQueue.length = 0;\n    });\n\n    this.on('abort', (err) => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.reject(err);\n      }\n      readQueue.length = 0;\n    });\n\n    this.on('error', (err) => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.reject(err);\n      }\n      readQueue.length = 0;\n    });\n\n    return {\n      next: async (): Promise<IteratorResult<BetaMessageStreamEvent>> => {\n        if (!pushQueue.length) {\n          if (done) {\n            return { value: undefined, done: true };\n          }\n          return new Promise<BetaMessageStreamEvent | undefined>((resolve, reject) =>\n            readQueue.push({ resolve, reject }),\n          ).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n        }\n        const chunk = pushQueue.shift()!;\n        return { value: chunk, done: false };\n      },\n      return: async () => {\n        this.abort();\n        return { value: undefined, done: true };\n      },\n    };\n  }\n\n  toReadableStream(): ReadableStream {\n    const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n    return stream.toReadableStream();\n  }\n}\n\n// used to ensure exhaustive case matching without throwing a runtime error\nfunction checkNever(x: never) {}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3259, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/internal/constants.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/internal/constants.ts"],"sourcesContent":["// File containing shared constants\n\n/**\n * Model-specific timeout constraints for non-streaming requests\n */\nexport const MODEL_NONSTREAMING_TOKENS: Record<string, number> = {\n  'claude-opus-4-20250514': 8192,\n  'claude-opus-4-0': 8192,\n  'claude-4-opus-20250514': 8192,\n  'anthropic.claude-opus-4-20250514-v1:0': 8192,\n  'claude-opus-4@20250514': 8192,\n  'claude-opus-4-1-20250805': 8192,\n  'anthropic.claude-opus-4-1-20250805-v1:0': 8192,\n  'claude-opus-4-1@20250805': 8192,\n};\n"],"names":[],"mappings":"AAAA,mCAAmC;AAEnC;;GAEG;;;;AACI,MAAM,yBAAyB,GAA2B;IAC/D,wBAAwB,EAAE,IAAI;IAC9B,iBAAiB,EAAE,IAAI;IACvB,wBAAwB,EAAE,IAAI;IAC9B,uCAAuC,EAAE,IAAI;IAC7C,wBAAwB,EAAE,IAAI;IAC9B,0BAA0B,EAAE,IAAI;IAChC,yCAAyC,EAAE,IAAI;IAC/C,0BAA0B,EAAE,IAAI;CACjC,CAAC","debugId":null}},
    {"offset": {"line": 3280, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/lib/tools/BetaToolRunner.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/lib/tools/BetaToolRunner.ts"],"sourcesContent":["import { BetaRunnableTool } from './BetaRunnableTool';\nimport { Anthropic } from '../..';\nimport { AnthropicError } from '../../core/error';\nimport { BetaMessage, BetaMessageParam, BetaToolUnion, MessageCreateParams } from '../../resources/beta';\nimport { BetaMessageStream } from '../BetaMessageStream';\nimport { RequestOptions } from '../../internal/request-options';\nimport { buildHeaders } from '../../internal/headers';\n\n/**\n * Just Promise.withResolvers(), which is not available in all environments.\n */\nfunction promiseWithResolvers<T>(): {\n  promise: Promise<T>;\n  resolve: (value: T) => void;\n  reject: (reason?: any) => void;\n} {\n  let resolve: (value: T) => void;\n  let reject: (reason?: any) => void;\n  const promise = new Promise<T>((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n  return { promise, resolve: resolve!, reject: reject! };\n}\n\n/**\n * A ToolRunner handles the automatic conversation loop between the assistant and tools.\n *\n * A ToolRunner is an async iterable that yields either BetaMessage or BetaMessageStream objects\n * depending on the streaming configuration.\n */\nexport class BetaToolRunner<Stream extends boolean> {\n  /** Whether the async iterator has been consumed */\n  #consumed = false;\n  /** Whether parameters have been mutated since the last API call */\n  #mutated = false;\n  /** Current state containing the request parameters */\n  #state: { params: BetaToolRunnerParams };\n  #options: BetaToolRunnerRequestOptions;\n  /** Promise for the last message received from the assistant */\n  #message?: Promise<BetaMessage> | undefined;\n  /** Cached tool response to avoid redundant executions */\n  #toolResponse?: Promise<BetaMessageParam | null> | undefined;\n  /** Promise resolvers for waiting on completion */\n  #completion: {\n    promise: Promise<BetaMessage>;\n    resolve: (value: BetaMessage) => void;\n    reject: (reason?: any) => void;\n  };\n  /** Number of iterations (API requests) made so far */\n  #iterationCount = 0;\n\n  constructor(\n    private client: Anthropic,\n    params: BetaToolRunnerParams,\n    options?: BetaToolRunnerRequestOptions,\n  ) {\n    this.#state = {\n      params: {\n        // You can't clone the entire params since there are functions as handlers.\n        // You also don't really need to clone params.messages, but it probably will prevent a foot gun\n        // somewhere.\n        ...params,\n        messages: structuredClone(params.messages),\n      },\n    };\n\n    this.#options = {\n      ...options,\n      headers: buildHeaders([{ 'x-stainless-helper': 'BetaToolRunner' }, options?.headers]),\n    };\n    this.#completion = promiseWithResolvers();\n  }\n\n  async *[Symbol.asyncIterator](): AsyncIterator<\n    Stream extends true ? BetaMessageStream\n    : Stream extends false ? BetaMessage\n    : BetaMessage | BetaMessageStream\n  > {\n    if (this.#consumed) {\n      throw new AnthropicError('Cannot iterate over a consumed stream');\n    }\n\n    this.#consumed = true;\n    this.#mutated = true;\n    this.#toolResponse = undefined;\n\n    try {\n      while (true) {\n        let stream;\n        try {\n          if (\n            this.#state.params.max_iterations &&\n            this.#iterationCount >= this.#state.params.max_iterations\n          ) {\n            break;\n          }\n\n          this.#mutated = false;\n          this.#message = undefined;\n          this.#toolResponse = undefined;\n          this.#iterationCount++;\n\n          const { max_iterations, ...params } = this.#state.params;\n          if (params.stream) {\n            stream = this.client.beta.messages.stream({ ...params }, this.#options);\n            this.#message = stream.finalMessage();\n            // Make sure that this promise doesn't throw before we get the option to do something about it.\n            // Error will be caught when we call await this.#message ultimately\n            this.#message.catch(() => {});\n            yield stream as any;\n          } else {\n            this.#message = this.client.beta.messages.create({ ...params, stream: false }, this.#options);\n            yield this.#message as any;\n          }\n\n          if (!this.#mutated) {\n            const { role, content } = await this.#message;\n            this.#state.params.messages.push({ role, content });\n          }\n\n          const toolMessage = await this.#generateToolResponse(this.#state.params.messages.at(-1)!);\n          if (toolMessage) {\n            this.#state.params.messages.push(toolMessage);\n          }\n\n          if (!toolMessage && !this.#mutated) {\n            break;\n          }\n        } finally {\n          if (stream) {\n            stream.abort();\n          }\n        }\n      }\n\n      if (!this.#message) {\n        throw new AnthropicError('ToolRunner concluded without a message from the server');\n      }\n\n      this.#completion.resolve(await this.#message);\n    } catch (error) {\n      this.#consumed = false;\n      // Silence unhandled promise errors\n      this.#completion.promise.catch(() => {});\n      this.#completion.reject(error);\n      this.#completion = promiseWithResolvers();\n      throw error;\n    }\n  }\n\n  /**\n   * Update the parameters for the next API call. This invalidates any cached tool responses.\n   *\n   * @param paramsOrMutator - Either new parameters or a function to mutate existing parameters\n   *\n   * @example\n   * // Direct parameter update\n   * runner.setMessagesParams({\n   *   model: 'claude-3-5-haiku-latest',\n   *   max_tokens: 500,\n   * });\n   *\n   * @example\n   * // Using a mutator function\n   * runner.setMessagesParams((params) => ({\n   *   ...params,\n   *   max_tokens: 100,\n   * }));\n   */\n  setMessagesParams(params: BetaToolRunnerParams): void;\n  setMessagesParams(mutator: (prevParams: BetaToolRunnerParams) => BetaToolRunnerParams): void;\n  setMessagesParams(\n    paramsOrMutator: BetaToolRunnerParams | ((prevParams: BetaToolRunnerParams) => BetaToolRunnerParams),\n  ) {\n    if (typeof paramsOrMutator === 'function') {\n      this.#state.params = paramsOrMutator(this.#state.params);\n    } else {\n      this.#state.params = paramsOrMutator;\n    }\n    this.#mutated = true;\n    // Invalidate cached tool response since parameters changed\n    this.#toolResponse = undefined;\n  }\n\n  /**\n   * Get the tool response for the last message from the assistant.\n   * Avoids redundant tool executions by caching results.\n   *\n   * @returns A promise that resolves to a BetaMessageParam containing tool results, or null if no tools need to be executed\n   *\n   * @example\n   * const toolResponse = await runner.generateToolResponse();\n   * if (toolResponse) {\n   *   console.log('Tool results:', toolResponse.content);\n   * }\n   */\n  async generateToolResponse() {\n    const message = (await this.#message) ?? this.params.messages.at(-1);\n    if (!message) {\n      return null;\n    }\n    return this.#generateToolResponse(message);\n  }\n\n  async #generateToolResponse(lastMessage: BetaMessageParam) {\n    if (this.#toolResponse !== undefined) {\n      return this.#toolResponse;\n    }\n    this.#toolResponse = generateToolResponse(this.#state.params, lastMessage);\n    return this.#toolResponse;\n  }\n\n  /**\n   * Wait for the async iterator to complete. This works even if the async iterator hasn't yet started, and\n   * will wait for an instance to start and go to completion.\n   *\n   * @returns A promise that resolves to the final BetaMessage when the iterator completes\n   *\n   * @example\n   * // Start consuming the iterator\n   * for await (const message of runner) {\n   *   console.log('Message:', message.content);\n   * }\n   *\n   * // Meanwhile, wait for completion from another part of the code\n   * const finalMessage = await runner.done();\n   * console.log('Final response:', finalMessage.content);\n   */\n  done(): Promise<BetaMessage> {\n    return this.#completion.promise;\n  }\n\n  /**\n   * Returns a promise indicating that the stream is done. Unlike .done(), this will eagerly read the stream:\n   * * If the iterator has not been consumed, consume the entire iterator and return the final message from the\n   * assistant.\n   * * If the iterator has been consumed, waits for it to complete and returns the final message.\n   *\n   * @returns A promise that resolves to the final BetaMessage from the conversation\n   * @throws {AnthropicError} If no messages were processed during the conversation\n   *\n   * @example\n   * const finalMessage = await runner.runUntilDone();\n   * console.log('Final response:', finalMessage.content);\n   */\n  async runUntilDone(): Promise<BetaMessage> {\n    // If not yet consumed, start consuming and wait for completion\n    if (!this.#consumed) {\n      for await (const _ of this) {\n        // Iterator naturally populates this.#message\n      }\n    }\n\n    // If consumed but not completed, wait for completion\n    return this.done();\n  }\n\n  /**\n   * Get the current parameters being used by the ToolRunner.\n   *\n   * @returns A readonly view of the current ToolRunnerParams\n   *\n   * @example\n   * const currentParams = runner.params;\n   * console.log('Current model:', currentParams.model);\n   * console.log('Message count:', currentParams.messages.length);\n   */\n  get params(): Readonly<BetaToolRunnerParams> {\n    return this.#state.params as Readonly<BetaToolRunnerParams>;\n  }\n\n  /**\n   * Add one or more messages to the conversation history.\n   *\n   * @param messages - One or more BetaMessageParam objects to add to the conversation\n   *\n   * @example\n   * runner.pushMessages(\n   *   { role: 'user', content: 'Also, what about the weather in NYC?' }\n   * );\n   *\n   * @example\n   * // Adding multiple messages\n   * runner.pushMessages(\n   *   { role: 'user', content: 'What about NYC?' },\n   *   { role: 'user', content: 'And Boston?' }\n   * );\n   */\n  pushMessages(...messages: BetaMessageParam[]) {\n    this.setMessagesParams((params) => ({\n      ...params,\n      messages: [...params.messages, ...messages],\n    }));\n  }\n\n  /**\n   * Makes the ToolRunner directly awaitable, equivalent to calling .runUntilDone()\n   * This allows using `await runner` instead of `await runner.runUntilDone()`\n   */\n  then<TResult1 = BetaMessage, TResult2 = never>(\n    onfulfilled?: ((value: BetaMessage) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n  ): Promise<TResult1 | TResult2> {\n    return this.runUntilDone().then(onfulfilled, onrejected);\n  }\n}\n\nasync function generateToolResponse(\n  params: BetaToolRunnerParams,\n  lastMessage = params.messages.at(-1),\n): Promise<BetaMessageParam | null> {\n  // Only process if the last message is from the assistant and has tool use blocks\n  if (\n    !lastMessage ||\n    lastMessage.role !== 'assistant' ||\n    !lastMessage.content ||\n    typeof lastMessage.content === 'string'\n  ) {\n    return null;\n  }\n\n  const toolUseBlocks = lastMessage.content.filter((content) => content.type === 'tool_use');\n  if (toolUseBlocks.length === 0) {\n    return null;\n  }\n\n  const toolResults = await Promise.all(\n    toolUseBlocks.map(async (toolUse) => {\n      const tool = params.tools.find((t) => t.name === toolUse.name);\n      if (!tool || !('run' in tool)) {\n        return {\n          type: 'tool_result' as const,\n          tool_use_id: toolUse.id,\n          content: `Error: Tool '${toolUse.name}' not found`,\n          is_error: true,\n        };\n      }\n\n      try {\n        let input = toolUse.input;\n        if ('parse' in tool && tool.parse) {\n          input = tool.parse(input);\n        }\n\n        const result = await tool.run(input);\n        return {\n          type: 'tool_result' as const,\n          tool_use_id: toolUse.id,\n          content: result,\n        };\n      } catch (error) {\n        return {\n          type: 'tool_result' as const,\n          tool_use_id: toolUse.id,\n          content: `Error: ${error instanceof Error ? error.message : String(error)}`,\n          is_error: true,\n        };\n      }\n    }),\n  );\n\n  return {\n    role: 'user' as const,\n    content: toolResults,\n  };\n}\n\n// vendored from typefest just to make things look a bit nicer on hover\ntype Simplify<T> = { [KeyType in keyof T]: T[KeyType] } & {};\n\n/**\n * Parameters for creating a ToolRunner, extending MessageCreateParams with runnable tools.\n */\nexport type BetaToolRunnerParams = Simplify<\n  Omit<MessageCreateParams, 'tools'> & {\n    tools: (BetaToolUnion | BetaRunnableTool<any>)[];\n    /**\n     * Maximum number of iterations (API requests) to make in the tool execution loop.\n     * Each iteration consists of: assistant response → tool execution → tool results.\n     * When exceeded, the loop will terminate even if tools are still being requested.\n     */\n    max_iterations?: number;\n  }\n>;\n\nexport type BetaToolRunnerRequestOptions = Pick<RequestOptions, 'headers'>;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3574, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/resources/beta/messages/messages.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/resources/beta/messages/messages.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport * as MessagesMessagesAPI from './messages';\nimport * as BetaAPI from '../beta';\nimport * as MessagesAPI from '../../messages/messages';\nimport * as BatchesAPI from './batches';\nimport {\n  BatchCancelParams,\n  BatchCreateParams,\n  BatchDeleteParams,\n  BatchListParams,\n  BatchResultsParams,\n  BatchRetrieveParams,\n  Batches,\n  BetaDeletedMessageBatch,\n  BetaMessageBatch,\n  BetaMessageBatchCanceledResult,\n  BetaMessageBatchErroredResult,\n  BetaMessageBatchExpiredResult,\n  BetaMessageBatchIndividualResponse,\n  BetaMessageBatchRequestCounts,\n  BetaMessageBatchResult,\n  BetaMessageBatchSucceededResult,\n  BetaMessageBatchesPage,\n} from './batches';\nimport { APIPromise } from '../../../core/api-promise';\nimport { Stream } from '../../../core/streaming';\nimport { buildHeaders } from '../../../internal/headers';\nimport { RequestOptions } from '../../../internal/request-options';\nimport type { Model } from '../../messages/messages';\nimport { BetaMessageStream } from '../../../lib/BetaMessageStream';\nimport { MODEL_NONSTREAMING_TOKENS } from '../../../internal/constants';\nimport {\n  BetaToolRunner,\n  BetaToolRunnerParams,\n  BetaToolRunnerRequestOptions,\n} from '../../../lib/tools/BetaToolRunner';\nimport { Anthropic } from '../../../client';\n\nconst DEPRECATED_MODELS: {\n  [K in Model]?: string;\n} = {\n  'claude-1.3': 'November 6th, 2024',\n  'claude-1.3-100k': 'November 6th, 2024',\n  'claude-instant-1.1': 'November 6th, 2024',\n  'claude-instant-1.1-100k': 'November 6th, 2024',\n  'claude-instant-1.2': 'November 6th, 2024',\n  'claude-3-sonnet-20240229': 'July 21st, 2025',\n  'claude-3-opus-20240229': 'January 5th, 2026',\n  'claude-2.1': 'July 21st, 2025',\n  'claude-2.0': 'July 21st, 2025',\n  'claude-3-7-sonnet-latest': 'February 19th, 2026',\n  'claude-3-7-sonnet-20250219': 'February 19th, 2026',\n};\n\nexport class Messages extends APIResource {\n  batches: BatchesAPI.Batches = new BatchesAPI.Batches(this._client);\n\n  /**\n   * Send a structured list of input messages with text and/or image content, and the\n   * model will generate the next message in the conversation.\n   *\n   * The Messages API can be used for either single queries or stateless multi-turn\n   * conversations.\n   *\n   * Learn more about the Messages API in our [user guide](/en/docs/initial-setup)\n   *\n   * @example\n   * ```ts\n   * const betaMessage = await client.beta.messages.create({\n   *   max_tokens: 1024,\n   *   messages: [{ content: 'Hello, world', role: 'user' }],\n   *   model: 'claude-sonnet-4-5-20250929',\n   * });\n   * ```\n   */\n  create(params: MessageCreateParamsNonStreaming, options?: RequestOptions): APIPromise<BetaMessage>;\n  create(\n    params: MessageCreateParamsStreaming,\n    options?: RequestOptions,\n  ): APIPromise<Stream<BetaRawMessageStreamEvent>>;\n  create(\n    params: MessageCreateParamsBase,\n    options?: RequestOptions,\n  ): APIPromise<Stream<BetaRawMessageStreamEvent> | BetaMessage>;\n  create(\n    params: MessageCreateParams,\n    options?: RequestOptions,\n  ): APIPromise<BetaMessage> | APIPromise<Stream<BetaRawMessageStreamEvent>> {\n    const { betas, ...body } = params;\n\n    if (body.model in DEPRECATED_MODELS) {\n      console.warn(\n        `The model '${body.model}' is deprecated and will reach end-of-life on ${\n          DEPRECATED_MODELS[body.model]\n        }\\nPlease migrate to a newer model. Visit https://docs.anthropic.com/en/docs/resources/model-deprecations for more information.`,\n      );\n    }\n\n    let timeout = (this._client as any)._options.timeout as number | null;\n    if (!body.stream && timeout == null) {\n      const maxNonstreamingTokens = MODEL_NONSTREAMING_TOKENS[body.model] ?? undefined;\n      timeout = this._client.calculateNonstreamingTimeout(body.max_tokens, maxNonstreamingTokens);\n    }\n    return this._client.post('/v1/messages?beta=true', {\n      body,\n      timeout: timeout ?? 600000,\n      ...options,\n      headers: buildHeaders([\n        { ...(betas?.toString() != null ? { 'anthropic-beta': betas?.toString() } : undefined) },\n        options?.headers,\n      ]),\n      stream: params.stream ?? false,\n    }) as APIPromise<BetaMessage> | APIPromise<Stream<BetaRawMessageStreamEvent>>;\n  }\n\n  /**\n   * Create a Message stream\n   */\n  stream(body: BetaMessageStreamParams, options?: RequestOptions): BetaMessageStream {\n    return BetaMessageStream.createMessage(this, body, options);\n  }\n\n  /**\n   * Count the number of tokens in a Message.\n   *\n   * The Token Count API can be used to count the number of tokens in a Message,\n   * including tools, images, and documents, without creating it.\n   *\n   * Learn more about token counting in our\n   * [user guide](/en/docs/build-with-claude/token-counting)\n   *\n   * @example\n   * ```ts\n   * const betaMessageTokensCount =\n   *   await client.beta.messages.countTokens({\n   *     messages: [{ content: 'string', role: 'user' }],\n   *     model: 'claude-sonnet-4-5',\n   *   });\n   * ```\n   */\n  countTokens(\n    params: MessageCountTokensParams,\n    options?: RequestOptions,\n  ): APIPromise<BetaMessageTokensCount> {\n    const { betas, ...body } = params;\n    return this._client.post('/v1/messages/count_tokens?beta=true', {\n      body,\n      ...options,\n      headers: buildHeaders([\n        { 'anthropic-beta': [...(betas ?? []), 'token-counting-2024-11-01'].toString() },\n        options?.headers,\n      ]),\n    });\n  }\n\n  toolRunner(\n    body: BetaToolRunnerParams & { stream?: false },\n    options?: BetaToolRunnerRequestOptions,\n  ): BetaToolRunner<false>;\n  toolRunner(\n    body: BetaToolRunnerParams & { stream: true },\n    options?: BetaToolRunnerRequestOptions,\n  ): BetaToolRunner<true>;\n  toolRunner(body: BetaToolRunnerParams, options?: BetaToolRunnerRequestOptions): BetaToolRunner<boolean>;\n  toolRunner(body: BetaToolRunnerParams, options?: BetaToolRunnerRequestOptions): BetaToolRunner<boolean> {\n    return new BetaToolRunner(this._client as Anthropic, body, options);\n  }\n}\n\nexport interface BetaAllThinkingTurns {\n  type: 'all';\n}\n\nexport type BetaMessageStreamParams = MessageCreateParamsBase;\n\nexport interface BetaBase64ImageSource {\n  data: string;\n\n  media_type: 'image/jpeg' | 'image/png' | 'image/gif' | 'image/webp';\n\n  type: 'base64';\n}\n\nexport interface BetaBase64PDFSource {\n  data: string;\n\n  media_type: 'application/pdf';\n\n  type: 'base64';\n}\n\nexport interface BetaBashCodeExecutionOutputBlock {\n  file_id: string;\n\n  type: 'bash_code_execution_output';\n}\n\nexport interface BetaBashCodeExecutionOutputBlockParam {\n  file_id: string;\n\n  type: 'bash_code_execution_output';\n}\n\nexport interface BetaBashCodeExecutionResultBlock {\n  content: Array<BetaBashCodeExecutionOutputBlock>;\n\n  return_code: number;\n\n  stderr: string;\n\n  stdout: string;\n\n  type: 'bash_code_execution_result';\n}\n\nexport interface BetaBashCodeExecutionResultBlockParam {\n  content: Array<BetaBashCodeExecutionOutputBlockParam>;\n\n  return_code: number;\n\n  stderr: string;\n\n  stdout: string;\n\n  type: 'bash_code_execution_result';\n}\n\nexport interface BetaBashCodeExecutionToolResultBlock {\n  content: BetaBashCodeExecutionToolResultError | BetaBashCodeExecutionResultBlock;\n\n  tool_use_id: string;\n\n  type: 'bash_code_execution_tool_result';\n}\n\nexport interface BetaBashCodeExecutionToolResultBlockParam {\n  content: BetaBashCodeExecutionToolResultErrorParam | BetaBashCodeExecutionResultBlockParam;\n\n  tool_use_id: string;\n\n  type: 'bash_code_execution_tool_result';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n}\n\nexport interface BetaBashCodeExecutionToolResultError {\n  error_code:\n    | 'invalid_tool_input'\n    | 'unavailable'\n    | 'too_many_requests'\n    | 'execution_time_exceeded'\n    | 'output_file_too_large';\n\n  type: 'bash_code_execution_tool_result_error';\n}\n\nexport interface BetaBashCodeExecutionToolResultErrorParam {\n  error_code:\n    | 'invalid_tool_input'\n    | 'unavailable'\n    | 'too_many_requests'\n    | 'execution_time_exceeded'\n    | 'output_file_too_large';\n\n  type: 'bash_code_execution_tool_result_error';\n}\n\nexport interface BetaCacheControlEphemeral {\n  type: 'ephemeral';\n\n  /**\n   * The time-to-live for the cache control breakpoint.\n   *\n   * This may be one the following values:\n   *\n   * - `5m`: 5 minutes\n   * - `1h`: 1 hour\n   *\n   * Defaults to `5m`.\n   */\n  ttl?: '5m' | '1h';\n}\n\nexport interface BetaCacheCreation {\n  /**\n   * The number of input tokens used to create the 1 hour cache entry.\n   */\n  ephemeral_1h_input_tokens: number;\n\n  /**\n   * The number of input tokens used to create the 5 minute cache entry.\n   */\n  ephemeral_5m_input_tokens: number;\n}\n\nexport interface BetaCitationCharLocation {\n  cited_text: string;\n\n  document_index: number;\n\n  document_title: string | null;\n\n  end_char_index: number;\n\n  file_id: string | null;\n\n  start_char_index: number;\n\n  type: 'char_location';\n}\n\nexport interface BetaCitationCharLocationParam {\n  cited_text: string;\n\n  document_index: number;\n\n  document_title: string | null;\n\n  end_char_index: number;\n\n  start_char_index: number;\n\n  type: 'char_location';\n}\n\nexport interface BetaCitationConfig {\n  enabled: boolean;\n}\n\nexport interface BetaCitationContentBlockLocation {\n  cited_text: string;\n\n  document_index: number;\n\n  document_title: string | null;\n\n  end_block_index: number;\n\n  file_id: string | null;\n\n  start_block_index: number;\n\n  type: 'content_block_location';\n}\n\nexport interface BetaCitationContentBlockLocationParam {\n  cited_text: string;\n\n  document_index: number;\n\n  document_title: string | null;\n\n  end_block_index: number;\n\n  start_block_index: number;\n\n  type: 'content_block_location';\n}\n\nexport interface BetaCitationPageLocation {\n  cited_text: string;\n\n  document_index: number;\n\n  document_title: string | null;\n\n  end_page_number: number;\n\n  file_id: string | null;\n\n  start_page_number: number;\n\n  type: 'page_location';\n}\n\nexport interface BetaCitationPageLocationParam {\n  cited_text: string;\n\n  document_index: number;\n\n  document_title: string | null;\n\n  end_page_number: number;\n\n  start_page_number: number;\n\n  type: 'page_location';\n}\n\nexport interface BetaCitationSearchResultLocation {\n  cited_text: string;\n\n  end_block_index: number;\n\n  search_result_index: number;\n\n  source: string;\n\n  start_block_index: number;\n\n  title: string | null;\n\n  type: 'search_result_location';\n}\n\nexport interface BetaCitationSearchResultLocationParam {\n  cited_text: string;\n\n  end_block_index: number;\n\n  search_result_index: number;\n\n  source: string;\n\n  start_block_index: number;\n\n  title: string | null;\n\n  type: 'search_result_location';\n}\n\nexport interface BetaCitationWebSearchResultLocationParam {\n  cited_text: string;\n\n  encrypted_index: string;\n\n  title: string | null;\n\n  type: 'web_search_result_location';\n\n  url: string;\n}\n\nexport interface BetaCitationsConfigParam {\n  enabled?: boolean;\n}\n\nexport interface BetaCitationsDelta {\n  citation:\n    | BetaCitationCharLocation\n    | BetaCitationPageLocation\n    | BetaCitationContentBlockLocation\n    | BetaCitationsWebSearchResultLocation\n    | BetaCitationSearchResultLocation;\n\n  type: 'citations_delta';\n}\n\nexport interface BetaCitationsWebSearchResultLocation {\n  cited_text: string;\n\n  encrypted_index: string;\n\n  title: string | null;\n\n  type: 'web_search_result_location';\n\n  url: string;\n}\n\nexport interface BetaClearThinking20251015Edit {\n  type: 'clear_thinking_20251015';\n\n  /**\n   * Number of most recent assistant turns to keep thinking blocks for. Older turns\n   * will have their thinking blocks removed.\n   */\n  keep?: BetaThinkingTurns | BetaAllThinkingTurns | 'all';\n}\n\nexport interface BetaClearThinking20251015EditResponse {\n  /**\n   * Number of input tokens cleared by this edit.\n   */\n  cleared_input_tokens: number;\n\n  /**\n   * Number of thinking turns that were cleared.\n   */\n  cleared_thinking_turns: number;\n\n  /**\n   * The type of context management edit applied.\n   */\n  type: 'clear_thinking_20251015';\n}\n\nexport interface BetaClearToolUses20250919Edit {\n  type: 'clear_tool_uses_20250919';\n\n  /**\n   * Minimum number of tokens that must be cleared when triggered. Context will only\n   * be modified if at least this many tokens can be removed.\n   */\n  clear_at_least?: BetaInputTokensClearAtLeast | null;\n\n  /**\n   * Whether to clear all tool inputs (bool) or specific tool inputs to clear (list)\n   */\n  clear_tool_inputs?: boolean | Array<string> | null;\n\n  /**\n   * Tool names whose uses are preserved from clearing\n   */\n  exclude_tools?: Array<string> | null;\n\n  /**\n   * Number of tool uses to retain in the conversation\n   */\n  keep?: BetaToolUsesKeep;\n\n  /**\n   * Condition that triggers the context management strategy\n   */\n  trigger?: BetaInputTokensTrigger | BetaToolUsesTrigger;\n}\n\nexport interface BetaClearToolUses20250919EditResponse {\n  /**\n   * Number of input tokens cleared by this edit.\n   */\n  cleared_input_tokens: number;\n\n  /**\n   * Number of tool uses that were cleared.\n   */\n  cleared_tool_uses: number;\n\n  /**\n   * The type of context management edit applied.\n   */\n  type: 'clear_tool_uses_20250919';\n}\n\nexport interface BetaCodeExecutionOutputBlock {\n  file_id: string;\n\n  type: 'code_execution_output';\n}\n\nexport interface BetaCodeExecutionOutputBlockParam {\n  file_id: string;\n\n  type: 'code_execution_output';\n}\n\nexport interface BetaCodeExecutionResultBlock {\n  content: Array<BetaCodeExecutionOutputBlock>;\n\n  return_code: number;\n\n  stderr: string;\n\n  stdout: string;\n\n  type: 'code_execution_result';\n}\n\nexport interface BetaCodeExecutionResultBlockParam {\n  content: Array<BetaCodeExecutionOutputBlockParam>;\n\n  return_code: number;\n\n  stderr: string;\n\n  stdout: string;\n\n  type: 'code_execution_result';\n}\n\nexport interface BetaCodeExecutionTool20250522 {\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: 'code_execution';\n\n  type: 'code_execution_20250522';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n}\n\nexport interface BetaCodeExecutionTool20250825 {\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: 'code_execution';\n\n  type: 'code_execution_20250825';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n}\n\nexport interface BetaCodeExecutionToolResultBlock {\n  content: BetaCodeExecutionToolResultBlockContent;\n\n  tool_use_id: string;\n\n  type: 'code_execution_tool_result';\n}\n\nexport type BetaCodeExecutionToolResultBlockContent =\n  | BetaCodeExecutionToolResultError\n  | BetaCodeExecutionResultBlock;\n\nexport interface BetaCodeExecutionToolResultBlockParam {\n  content: BetaCodeExecutionToolResultBlockParamContent;\n\n  tool_use_id: string;\n\n  type: 'code_execution_tool_result';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n}\n\nexport type BetaCodeExecutionToolResultBlockParamContent =\n  | BetaCodeExecutionToolResultErrorParam\n  | BetaCodeExecutionResultBlockParam;\n\nexport interface BetaCodeExecutionToolResultError {\n  error_code: BetaCodeExecutionToolResultErrorCode;\n\n  type: 'code_execution_tool_result_error';\n}\n\nexport type BetaCodeExecutionToolResultErrorCode =\n  | 'invalid_tool_input'\n  | 'unavailable'\n  | 'too_many_requests'\n  | 'execution_time_exceeded';\n\nexport interface BetaCodeExecutionToolResultErrorParam {\n  error_code: BetaCodeExecutionToolResultErrorCode;\n\n  type: 'code_execution_tool_result_error';\n}\n\n/**\n * Information about the container used in the request (for the code execution\n * tool)\n */\nexport interface BetaContainer {\n  /**\n   * Identifier for the container used in this request\n   */\n  id: string;\n\n  /**\n   * The time at which the container will expire.\n   */\n  expires_at: string;\n\n  /**\n   * Skills loaded in the container\n   */\n  skills: Array<BetaSkill> | null;\n}\n\n/**\n * Container parameters with skills to be loaded.\n */\nexport interface BetaContainerParams {\n  /**\n   * Container id\n   */\n  id?: string | null;\n\n  /**\n   * List of skills to load in the container\n   */\n  skills?: Array<BetaSkillParams> | null;\n}\n\n/**\n * Response model for a file uploaded to the container.\n */\nexport interface BetaContainerUploadBlock {\n  file_id: string;\n\n  type: 'container_upload';\n}\n\n/**\n * A content block that represents a file to be uploaded to the container Files\n * uploaded via this block will be available in the container's input directory.\n */\nexport interface BetaContainerUploadBlockParam {\n  file_id: string;\n\n  type: 'container_upload';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n}\n\n/**\n * Response model for a file uploaded to the container.\n */\nexport type BetaContentBlock =\n  | BetaTextBlock\n  | BetaThinkingBlock\n  | BetaRedactedThinkingBlock\n  | BetaToolUseBlock\n  | BetaServerToolUseBlock\n  | BetaWebSearchToolResultBlock\n  | BetaWebFetchToolResultBlock\n  | BetaCodeExecutionToolResultBlock\n  | BetaBashCodeExecutionToolResultBlock\n  | BetaTextEditorCodeExecutionToolResultBlock\n  | BetaMCPToolUseBlock\n  | BetaMCPToolResultBlock\n  | BetaContainerUploadBlock;\n\n/**\n * Regular text content.\n */\nexport type BetaContentBlockParam =\n  | BetaTextBlockParam\n  | BetaImageBlockParam\n  | BetaRequestDocumentBlock\n  | BetaSearchResultBlockParam\n  | BetaThinkingBlockParam\n  | BetaRedactedThinkingBlockParam\n  | BetaToolUseBlockParam\n  | BetaToolResultBlockParam\n  | BetaServerToolUseBlockParam\n  | BetaWebSearchToolResultBlockParam\n  | BetaWebFetchToolResultBlockParam\n  | BetaCodeExecutionToolResultBlockParam\n  | BetaBashCodeExecutionToolResultBlockParam\n  | BetaTextEditorCodeExecutionToolResultBlockParam\n  | BetaMCPToolUseBlockParam\n  | BetaRequestMCPToolResultBlockParam\n  | BetaContainerUploadBlockParam;\n\nexport interface BetaContentBlockSource {\n  content: string | Array<BetaContentBlockSourceContent>;\n\n  type: 'content';\n}\n\nexport type BetaContentBlockSourceContent = BetaTextBlockParam | BetaImageBlockParam;\n\nexport interface BetaContextManagementConfig {\n  /**\n   * List of context management edits to apply\n   */\n  edits?: Array<BetaClearToolUses20250919Edit | BetaClearThinking20251015Edit>;\n}\n\nexport interface BetaContextManagementResponse {\n  /**\n   * List of context management edits that were applied.\n   */\n  applied_edits: Array<BetaClearToolUses20250919EditResponse | BetaClearThinking20251015EditResponse>;\n}\n\nexport interface BetaCountTokensContextManagementResponse {\n  /**\n   * The original token count before context management was applied\n   */\n  original_input_tokens: number;\n}\n\nexport interface BetaDocumentBlock {\n  /**\n   * Citation configuration for the document\n   */\n  citations: BetaCitationConfig | null;\n\n  source: BetaBase64PDFSource | BetaPlainTextSource;\n\n  /**\n   * The title of the document\n   */\n  title: string | null;\n\n  type: 'document';\n}\n\nexport interface BetaFileDocumentSource {\n  file_id: string;\n\n  type: 'file';\n}\n\nexport interface BetaFileImageSource {\n  file_id: string;\n\n  type: 'file';\n}\n\nexport interface BetaImageBlockParam {\n  source: BetaBase64ImageSource | BetaURLImageSource | BetaFileImageSource;\n\n  type: 'image';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n}\n\nexport interface BetaInputJSONDelta {\n  partial_json: string;\n\n  type: 'input_json_delta';\n}\n\nexport interface BetaInputTokensClearAtLeast {\n  type: 'input_tokens';\n\n  value: number;\n}\n\nexport interface BetaInputTokensTrigger {\n  type: 'input_tokens';\n\n  value: number;\n}\n\nexport interface BetaMCPToolResultBlock {\n  content: string | Array<BetaTextBlock>;\n\n  is_error: boolean;\n\n  tool_use_id: string;\n\n  type: 'mcp_tool_result';\n}\n\nexport interface BetaMCPToolUseBlock {\n  id: string;\n\n  input: unknown;\n\n  /**\n   * The name of the MCP tool\n   */\n  name: string;\n\n  /**\n   * The name of the MCP server\n   */\n  server_name: string;\n\n  type: 'mcp_tool_use';\n}\n\nexport interface BetaMCPToolUseBlockParam {\n  id: string;\n\n  input: unknown;\n\n  name: string;\n\n  /**\n   * The name of the MCP server\n   */\n  server_name: string;\n\n  type: 'mcp_tool_use';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n}\n\nexport interface BetaMemoryTool20250818 {\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: 'memory';\n\n  type: 'memory_20250818';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n}\n\nexport type BetaMemoryTool20250818Command =\n  | BetaMemoryTool20250818ViewCommand\n  | BetaMemoryTool20250818CreateCommand\n  | BetaMemoryTool20250818StrReplaceCommand\n  | BetaMemoryTool20250818InsertCommand\n  | BetaMemoryTool20250818DeleteCommand\n  | BetaMemoryTool20250818RenameCommand;\n\nexport interface BetaMemoryTool20250818CreateCommand {\n  /**\n   * Command type identifier\n   */\n  command: 'create';\n\n  /**\n   * Content to write to the file\n   */\n  file_text: string;\n\n  /**\n   * Path where the file should be created\n   */\n  path: string;\n}\n\nexport interface BetaMemoryTool20250818DeleteCommand {\n  /**\n   * Command type identifier\n   */\n  command: 'delete';\n\n  /**\n   * Path to the file or directory to delete\n   */\n  path: string;\n}\n\nexport interface BetaMemoryTool20250818InsertCommand {\n  /**\n   * Command type identifier\n   */\n  command: 'insert';\n\n  /**\n   * Line number where text should be inserted\n   */\n  insert_line: number;\n\n  /**\n   * Text to insert at the specified line\n   */\n  insert_text: string;\n\n  /**\n   * Path to the file where text should be inserted\n   */\n  path: string;\n}\n\nexport interface BetaMemoryTool20250818RenameCommand {\n  /**\n   * Command type identifier\n   */\n  command: 'rename';\n\n  /**\n   * New path for the file or directory\n   */\n  new_path: string;\n\n  /**\n   * Current path of the file or directory\n   */\n  old_path: string;\n}\n\nexport interface BetaMemoryTool20250818StrReplaceCommand {\n  /**\n   * Command type identifier\n   */\n  command: 'str_replace';\n\n  /**\n   * Text to replace with\n   */\n  new_str: string;\n\n  /**\n   * Text to search for and replace\n   */\n  old_str: string;\n\n  /**\n   * Path to the file where text should be replaced\n   */\n  path: string;\n}\n\nexport interface BetaMemoryTool20250818ViewCommand {\n  /**\n   * Command type identifier\n   */\n  command: 'view';\n\n  /**\n   * Path to directory or file to view\n   */\n  path: string;\n\n  /**\n   * Optional line range for viewing specific lines\n   */\n  view_range?: Array<number>;\n}\n\nexport interface BetaMessage {\n  /**\n   * Unique object identifier.\n   *\n   * The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * Information about the container used in the request (for the code execution\n   * tool)\n   */\n  container: BetaContainer | null;\n\n  /**\n   * Content generated by the model.\n   *\n   * This is an array of content blocks, each of which has a `type` that determines\n   * its shape.\n   *\n   * Example:\n   *\n   * ```json\n   * [{ \"type\": \"text\", \"text\": \"Hi, I'm Claude.\" }]\n   * ```\n   *\n   * If the request input `messages` ended with an `assistant` turn, then the\n   * response `content` will continue directly from that last turn. You can use this\n   * to constrain the model's output.\n   *\n   * For example, if the input `messages` were:\n   *\n   * ```json\n   * [\n   *   {\n   *     \"role\": \"user\",\n   *     \"content\": \"What's the Greek name for Sun? (A) Sol (B) Helios (C) Sun\"\n   *   },\n   *   { \"role\": \"assistant\", \"content\": \"The best answer is (\" }\n   * ]\n   * ```\n   *\n   * Then the response `content` might be:\n   *\n   * ```json\n   * [{ \"type\": \"text\", \"text\": \"B)\" }]\n   * ```\n   */\n  content: Array<BetaContentBlock>;\n\n  /**\n   * Context management response.\n   *\n   * Information about context management strategies applied during the request.\n   */\n  context_management: BetaContextManagementResponse | null;\n\n  /**\n   * The model that will complete your prompt.\\n\\nSee\n   * [models](https://docs.anthropic.com/en/docs/models-overview) for additional\n   * details and options.\n   */\n  model: MessagesAPI.Model;\n\n  /**\n   * Conversational role of the generated message.\n   *\n   * This will always be `\"assistant\"`.\n   */\n  role: 'assistant';\n\n  /**\n   * The reason that we stopped.\n   *\n   * This may be one the following values:\n   *\n   * - `\"end_turn\"`: the model reached a natural stopping point\n   * - `\"max_tokens\"`: we exceeded the requested `max_tokens` or the model's maximum\n   * - `\"stop_sequence\"`: one of your provided custom `stop_sequences` was generated\n   * - `\"tool_use\"`: the model invoked one or more tools\n   * - `\"pause_turn\"`: we paused a long-running turn. You may provide the response\n   *   back as-is in a subsequent request to let the model continue.\n   * - `\"refusal\"`: when streaming classifiers intervene to handle potential policy\n   *   violations\n   *\n   * In non-streaming mode this value is always non-null. In streaming mode, it is\n   * null in the `message_start` event and non-null otherwise.\n   */\n  stop_reason: BetaStopReason | null;\n\n  /**\n   * Which custom stop sequence was generated, if any.\n   *\n   * This value will be a non-null string if one of your custom stop sequences was\n   * generated.\n   */\n  stop_sequence: string | null;\n\n  /**\n   * Object type.\n   *\n   * For Messages, this is always `\"message\"`.\n   */\n  type: 'message';\n\n  /**\n   * Billing and rate-limit usage.\n   *\n   * Anthropic's API bills and rate-limits by token counts, as tokens represent the\n   * underlying cost to our systems.\n   *\n   * Under the hood, the API transforms requests into a format suitable for the\n   * model. The model's output then goes through a parsing stage before becoming an\n   * API response. As a result, the token counts in `usage` will not match one-to-one\n   * with the exact visible content of an API request or response.\n   *\n   * For example, `output_tokens` will be non-zero, even for an empty string response\n   * from Claude.\n   *\n   * Total input tokens in a request is the summation of `input_tokens`,\n   * `cache_creation_input_tokens`, and `cache_read_input_tokens`.\n   */\n  usage: BetaUsage;\n}\n\nexport interface BetaMessageDeltaUsage {\n  /**\n   * The cumulative number of input tokens used to create the cache entry.\n   */\n  cache_creation_input_tokens: number | null;\n\n  /**\n   * The cumulative number of input tokens read from the cache.\n   */\n  cache_read_input_tokens: number | null;\n\n  /**\n   * The cumulative number of input tokens which were used.\n   */\n  input_tokens: number | null;\n\n  /**\n   * The cumulative number of output tokens which were used.\n   */\n  output_tokens: number;\n\n  /**\n   * The number of server tool requests.\n   */\n  server_tool_use: BetaServerToolUsage | null;\n}\n\nexport interface BetaMessageParam {\n  content: string | Array<BetaContentBlockParam>;\n\n  role: 'user' | 'assistant';\n}\n\nexport interface BetaMessageTokensCount {\n  /**\n   * Information about context management applied to the message.\n   */\n  context_management: BetaCountTokensContextManagementResponse | null;\n\n  /**\n   * The total number of tokens across the provided list of messages, system prompt,\n   * and tools.\n   */\n  input_tokens: number;\n}\n\nexport interface BetaMetadata {\n  /**\n   * An external identifier for the user who is associated with the request.\n   *\n   * This should be a uuid, hash value, or other opaque identifier. Anthropic may use\n   * this id to help detect abuse. Do not include any identifying information such as\n   * name, email address, or phone number.\n   */\n  user_id?: string | null;\n}\n\nexport interface BetaPlainTextSource {\n  data: string;\n\n  media_type: 'text/plain';\n\n  type: 'text';\n}\n\nexport type BetaRawContentBlockDelta =\n  | BetaTextDelta\n  | BetaInputJSONDelta\n  | BetaCitationsDelta\n  | BetaThinkingDelta\n  | BetaSignatureDelta;\n\nexport interface BetaRawContentBlockDeltaEvent {\n  delta: BetaRawContentBlockDelta;\n\n  index: number;\n\n  type: 'content_block_delta';\n}\n\nexport interface BetaRawContentBlockStartEvent {\n  /**\n   * Response model for a file uploaded to the container.\n   */\n  content_block:\n    | BetaTextBlock\n    | BetaThinkingBlock\n    | BetaRedactedThinkingBlock\n    | BetaToolUseBlock\n    | BetaServerToolUseBlock\n    | BetaWebSearchToolResultBlock\n    | BetaWebFetchToolResultBlock\n    | BetaCodeExecutionToolResultBlock\n    | BetaBashCodeExecutionToolResultBlock\n    | BetaTextEditorCodeExecutionToolResultBlock\n    | BetaMCPToolUseBlock\n    | BetaMCPToolResultBlock\n    | BetaContainerUploadBlock;\n\n  index: number;\n\n  type: 'content_block_start';\n}\n\nexport interface BetaRawContentBlockStopEvent {\n  index: number;\n\n  type: 'content_block_stop';\n}\n\nexport interface BetaRawMessageDeltaEvent {\n  /**\n   * Information about context management strategies applied during the request\n   */\n  context_management: BetaContextManagementResponse | null;\n\n  delta: BetaRawMessageDeltaEvent.Delta;\n\n  type: 'message_delta';\n\n  /**\n   * Billing and rate-limit usage.\n   *\n   * Anthropic's API bills and rate-limits by token counts, as tokens represent the\n   * underlying cost to our systems.\n   *\n   * Under the hood, the API transforms requests into a format suitable for the\n   * model. The model's output then goes through a parsing stage before becoming an\n   * API response. As a result, the token counts in `usage` will not match one-to-one\n   * with the exact visible content of an API request or response.\n   *\n   * For example, `output_tokens` will be non-zero, even for an empty string response\n   * from Claude.\n   *\n   * Total input tokens in a request is the summation of `input_tokens`,\n   * `cache_creation_input_tokens`, and `cache_read_input_tokens`.\n   */\n  usage: BetaMessageDeltaUsage;\n}\n\nexport namespace BetaRawMessageDeltaEvent {\n  export interface Delta {\n    /**\n     * Information about the container used in the request (for the code execution\n     * tool)\n     */\n    container: MessagesMessagesAPI.BetaContainer | null;\n\n    stop_reason: MessagesMessagesAPI.BetaStopReason | null;\n\n    stop_sequence: string | null;\n  }\n}\n\nexport interface BetaRawMessageStartEvent {\n  message: BetaMessage;\n\n  type: 'message_start';\n}\n\nexport interface BetaRawMessageStopEvent {\n  type: 'message_stop';\n}\n\nexport type BetaRawMessageStreamEvent =\n  | BetaRawMessageStartEvent\n  | BetaRawMessageDeltaEvent\n  | BetaRawMessageStopEvent\n  | BetaRawContentBlockStartEvent\n  | BetaRawContentBlockDeltaEvent\n  | BetaRawContentBlockStopEvent;\n\nexport interface BetaRedactedThinkingBlock {\n  data: string;\n\n  type: 'redacted_thinking';\n}\n\nexport interface BetaRedactedThinkingBlockParam {\n  data: string;\n\n  type: 'redacted_thinking';\n}\n\nexport interface BetaRequestDocumentBlock {\n  source:\n    | BetaBase64PDFSource\n    | BetaPlainTextSource\n    | BetaContentBlockSource\n    | BetaURLPDFSource\n    | BetaFileDocumentSource;\n\n  type: 'document';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n\n  citations?: BetaCitationsConfigParam | null;\n\n  context?: string | null;\n\n  title?: string | null;\n}\n\nexport interface BetaRequestMCPServerToolConfiguration {\n  allowed_tools?: Array<string> | null;\n\n  enabled?: boolean | null;\n}\n\nexport interface BetaRequestMCPServerURLDefinition {\n  name: string;\n\n  type: 'url';\n\n  url: string;\n\n  authorization_token?: string | null;\n\n  tool_configuration?: BetaRequestMCPServerToolConfiguration | null;\n}\n\nexport interface BetaRequestMCPToolResultBlockParam {\n  tool_use_id: string;\n\n  type: 'mcp_tool_result';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n\n  content?: string | Array<BetaTextBlockParam>;\n\n  is_error?: boolean;\n}\n\nexport interface BetaSearchResultBlockParam {\n  content: Array<BetaTextBlockParam>;\n\n  source: string;\n\n  title: string;\n\n  type: 'search_result';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n\n  citations?: BetaCitationsConfigParam;\n}\n\nexport interface BetaServerToolUsage {\n  /**\n   * The number of web fetch tool requests.\n   */\n  web_fetch_requests: number;\n\n  /**\n   * The number of web search tool requests.\n   */\n  web_search_requests: number;\n}\n\nexport interface BetaServerToolUseBlock {\n  id: string;\n\n  input: unknown;\n\n  name: 'web_search' | 'web_fetch' | 'code_execution' | 'bash_code_execution' | 'text_editor_code_execution';\n\n  type: 'server_tool_use';\n}\n\nexport interface BetaServerToolUseBlockParam {\n  id: string;\n\n  input: unknown;\n\n  name: 'web_search' | 'web_fetch' | 'code_execution' | 'bash_code_execution' | 'text_editor_code_execution';\n\n  type: 'server_tool_use';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n}\n\nexport interface BetaSignatureDelta {\n  signature: string;\n\n  type: 'signature_delta';\n}\n\n/**\n * A skill that was loaded in a container (response model).\n */\nexport interface BetaSkill {\n  /**\n   * Skill ID\n   */\n  skill_id: string;\n\n  /**\n   * Type of skill - either 'anthropic' (built-in) or 'custom' (user-defined)\n   */\n  type: 'anthropic' | 'custom';\n\n  /**\n   * Skill version or 'latest' for most recent version\n   */\n  version: string;\n}\n\n/**\n * Specification for a skill to be loaded in a container (request model).\n */\nexport interface BetaSkillParams {\n  /**\n   * Skill ID\n   */\n  skill_id: string;\n\n  /**\n   * Type of skill - either 'anthropic' (built-in) or 'custom' (user-defined)\n   */\n  type: 'anthropic' | 'custom';\n\n  /**\n   * Skill version or 'latest' for most recent version\n   */\n  version?: string;\n}\n\nexport type BetaStopReason =\n  | 'end_turn'\n  | 'max_tokens'\n  | 'stop_sequence'\n  | 'tool_use'\n  | 'pause_turn'\n  | 'refusal'\n  | 'model_context_window_exceeded';\n\nexport interface BetaTextBlock {\n  /**\n   * Citations supporting the text block.\n   *\n   * The type of citation returned will depend on the type of document being cited.\n   * Citing a PDF results in `page_location`, plain text results in `char_location`,\n   * and content document results in `content_block_location`.\n   */\n  citations: Array<BetaTextCitation> | null;\n\n  text: string;\n\n  type: 'text';\n}\n\nexport interface BetaTextBlockParam {\n  text: string;\n\n  type: 'text';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n\n  citations?: Array<BetaTextCitationParam> | null;\n}\n\nexport type BetaTextCitation =\n  | BetaCitationCharLocation\n  | BetaCitationPageLocation\n  | BetaCitationContentBlockLocation\n  | BetaCitationsWebSearchResultLocation\n  | BetaCitationSearchResultLocation;\n\nexport type BetaTextCitationParam =\n  | BetaCitationCharLocationParam\n  | BetaCitationPageLocationParam\n  | BetaCitationContentBlockLocationParam\n  | BetaCitationWebSearchResultLocationParam\n  | BetaCitationSearchResultLocationParam;\n\nexport interface BetaTextDelta {\n  text: string;\n\n  type: 'text_delta';\n}\n\nexport interface BetaTextEditorCodeExecutionCreateResultBlock {\n  is_file_update: boolean;\n\n  type: 'text_editor_code_execution_create_result';\n}\n\nexport interface BetaTextEditorCodeExecutionCreateResultBlockParam {\n  is_file_update: boolean;\n\n  type: 'text_editor_code_execution_create_result';\n}\n\nexport interface BetaTextEditorCodeExecutionStrReplaceResultBlock {\n  lines: Array<string> | null;\n\n  new_lines: number | null;\n\n  new_start: number | null;\n\n  old_lines: number | null;\n\n  old_start: number | null;\n\n  type: 'text_editor_code_execution_str_replace_result';\n}\n\nexport interface BetaTextEditorCodeExecutionStrReplaceResultBlockParam {\n  type: 'text_editor_code_execution_str_replace_result';\n\n  lines?: Array<string> | null;\n\n  new_lines?: number | null;\n\n  new_start?: number | null;\n\n  old_lines?: number | null;\n\n  old_start?: number | null;\n}\n\nexport interface BetaTextEditorCodeExecutionToolResultBlock {\n  content:\n    | BetaTextEditorCodeExecutionToolResultError\n    | BetaTextEditorCodeExecutionViewResultBlock\n    | BetaTextEditorCodeExecutionCreateResultBlock\n    | BetaTextEditorCodeExecutionStrReplaceResultBlock;\n\n  tool_use_id: string;\n\n  type: 'text_editor_code_execution_tool_result';\n}\n\nexport interface BetaTextEditorCodeExecutionToolResultBlockParam {\n  content:\n    | BetaTextEditorCodeExecutionToolResultErrorParam\n    | BetaTextEditorCodeExecutionViewResultBlockParam\n    | BetaTextEditorCodeExecutionCreateResultBlockParam\n    | BetaTextEditorCodeExecutionStrReplaceResultBlockParam;\n\n  tool_use_id: string;\n\n  type: 'text_editor_code_execution_tool_result';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n}\n\nexport interface BetaTextEditorCodeExecutionToolResultError {\n  error_code:\n    | 'invalid_tool_input'\n    | 'unavailable'\n    | 'too_many_requests'\n    | 'execution_time_exceeded'\n    | 'file_not_found';\n\n  error_message: string | null;\n\n  type: 'text_editor_code_execution_tool_result_error';\n}\n\nexport interface BetaTextEditorCodeExecutionToolResultErrorParam {\n  error_code:\n    | 'invalid_tool_input'\n    | 'unavailable'\n    | 'too_many_requests'\n    | 'execution_time_exceeded'\n    | 'file_not_found';\n\n  type: 'text_editor_code_execution_tool_result_error';\n\n  error_message?: string | null;\n}\n\nexport interface BetaTextEditorCodeExecutionViewResultBlock {\n  content: string;\n\n  file_type: 'text' | 'image' | 'pdf';\n\n  num_lines: number | null;\n\n  start_line: number | null;\n\n  total_lines: number | null;\n\n  type: 'text_editor_code_execution_view_result';\n}\n\nexport interface BetaTextEditorCodeExecutionViewResultBlockParam {\n  content: string;\n\n  file_type: 'text' | 'image' | 'pdf';\n\n  type: 'text_editor_code_execution_view_result';\n\n  num_lines?: number | null;\n\n  start_line?: number | null;\n\n  total_lines?: number | null;\n}\n\nexport interface BetaThinkingBlock {\n  signature: string;\n\n  thinking: string;\n\n  type: 'thinking';\n}\n\nexport interface BetaThinkingBlockParam {\n  signature: string;\n\n  thinking: string;\n\n  type: 'thinking';\n}\n\nexport interface BetaThinkingConfigDisabled {\n  type: 'disabled';\n}\n\nexport interface BetaThinkingConfigEnabled {\n  /**\n   * Determines how many tokens Claude can use for its internal reasoning process.\n   * Larger budgets can enable more thorough analysis for complex problems, improving\n   * response quality.\n   *\n   * Must be ≥1024 and less than `max_tokens`.\n   *\n   * See\n   * [extended thinking](https://docs.claude.com/en/docs/build-with-claude/extended-thinking)\n   * for details.\n   */\n  budget_tokens: number;\n\n  type: 'enabled';\n}\n\n/**\n * Configuration for enabling Claude's extended thinking.\n *\n * When enabled, responses include `thinking` content blocks showing Claude's\n * thinking process before the final answer. Requires a minimum budget of 1,024\n * tokens and counts towards your `max_tokens` limit.\n *\n * See\n * [extended thinking](https://docs.claude.com/en/docs/build-with-claude/extended-thinking)\n * for details.\n */\nexport type BetaThinkingConfigParam = BetaThinkingConfigEnabled | BetaThinkingConfigDisabled;\n\nexport interface BetaThinkingDelta {\n  thinking: string;\n\n  type: 'thinking_delta';\n}\n\nexport interface BetaThinkingTurns {\n  type: 'thinking_turns';\n\n  value: number;\n}\n\nexport interface BetaTool {\n  /**\n   * [JSON schema](https://json-schema.org/draft/2020-12) for this tool's input.\n   *\n   * This defines the shape of the `input` that your tool accepts and that the model\n   * will produce.\n   */\n  input_schema: BetaTool.InputSchema;\n\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: string;\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n\n  /**\n   * Description of what this tool does.\n   *\n   * Tool descriptions should be as detailed as possible. The more information that\n   * the model has about what the tool is and how to use it, the better it will\n   * perform. You can use natural language descriptions to reinforce important\n   * aspects of the tool input JSON schema.\n   */\n  description?: string;\n\n  type?: 'custom' | null;\n}\n\nexport namespace BetaTool {\n  /**\n   * [JSON schema](https://json-schema.org/draft/2020-12) for this tool's input.\n   *\n   * This defines the shape of the `input` that your tool accepts and that the model\n   * will produce.\n   */\n  export interface InputSchema {\n    type: 'object';\n\n    properties?: unknown | null;\n\n    required?: string[] | readonly string[] | null;\n\n    [k: string]: unknown;\n  }\n}\n\nexport interface BetaToolBash20241022 {\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: 'bash';\n\n  type: 'bash_20241022';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n}\n\nexport interface BetaToolBash20250124 {\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: 'bash';\n\n  type: 'bash_20250124';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n}\n\n/**\n * How the model should use the provided tools. The model can use a specific tool,\n * any available tool, decide by itself, or not use tools at all.\n */\nexport type BetaToolChoice = BetaToolChoiceAuto | BetaToolChoiceAny | BetaToolChoiceTool | BetaToolChoiceNone;\n\n/**\n * The model will use any available tools.\n */\nexport interface BetaToolChoiceAny {\n  type: 'any';\n\n  /**\n   * Whether to disable parallel tool use.\n   *\n   * Defaults to `false`. If set to `true`, the model will output exactly one tool\n   * use.\n   */\n  disable_parallel_tool_use?: boolean;\n}\n\n/**\n * The model will automatically decide whether to use tools.\n */\nexport interface BetaToolChoiceAuto {\n  type: 'auto';\n\n  /**\n   * Whether to disable parallel tool use.\n   *\n   * Defaults to `false`. If set to `true`, the model will output at most one tool\n   * use.\n   */\n  disable_parallel_tool_use?: boolean;\n}\n\n/**\n * The model will not be allowed to use tools.\n */\nexport interface BetaToolChoiceNone {\n  type: 'none';\n}\n\n/**\n * The model will use the specified tool with `tool_choice.name`.\n */\nexport interface BetaToolChoiceTool {\n  /**\n   * The name of the tool to use.\n   */\n  name: string;\n\n  type: 'tool';\n\n  /**\n   * Whether to disable parallel tool use.\n   *\n   * Defaults to `false`. If set to `true`, the model will output exactly one tool\n   * use.\n   */\n  disable_parallel_tool_use?: boolean;\n}\n\nexport interface BetaToolComputerUse20241022 {\n  /**\n   * The height of the display in pixels.\n   */\n  display_height_px: number;\n\n  /**\n   * The width of the display in pixels.\n   */\n  display_width_px: number;\n\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: 'computer';\n\n  type: 'computer_20241022';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n\n  /**\n   * The X11 display number (e.g. 0, 1) for the display.\n   */\n  display_number?: number | null;\n}\n\nexport interface BetaToolComputerUse20250124 {\n  /**\n   * The height of the display in pixels.\n   */\n  display_height_px: number;\n\n  /**\n   * The width of the display in pixels.\n   */\n  display_width_px: number;\n\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: 'computer';\n\n  type: 'computer_20250124';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n\n  /**\n   * The X11 display number (e.g. 0, 1) for the display.\n   */\n  display_number?: number | null;\n}\n\nexport interface BetaToolResultBlockParam {\n  tool_use_id: string;\n\n  type: 'tool_result';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n\n  content?:\n    | string\n    | Array<BetaTextBlockParam | BetaImageBlockParam | BetaSearchResultBlockParam | BetaRequestDocumentBlock>;\n\n  is_error?: boolean;\n}\n\nexport type BetaToolResultContentBlockParam = Extract<BetaToolResultBlockParam['content'], any[]>[number];\n\nexport interface BetaToolTextEditor20241022 {\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: 'str_replace_editor';\n\n  type: 'text_editor_20241022';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n}\n\nexport interface BetaToolTextEditor20250124 {\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: 'str_replace_editor';\n\n  type: 'text_editor_20250124';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n}\n\nexport interface BetaToolTextEditor20250429 {\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: 'str_replace_based_edit_tool';\n\n  type: 'text_editor_20250429';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n}\n\nexport interface BetaToolTextEditor20250728 {\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: 'str_replace_based_edit_tool';\n\n  type: 'text_editor_20250728';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n\n  /**\n   * Maximum number of characters to display when viewing a file. If not specified,\n   * defaults to displaying the full file.\n   */\n  max_characters?: number | null;\n}\n\nexport type BetaToolUnion =\n  | BetaTool\n  | BetaToolBash20241022\n  | BetaToolBash20250124\n  | BetaCodeExecutionTool20250522\n  | BetaCodeExecutionTool20250825\n  | BetaToolComputerUse20241022\n  | BetaMemoryTool20250818\n  | BetaToolComputerUse20250124\n  | BetaToolTextEditor20241022\n  | BetaToolTextEditor20250124\n  | BetaToolTextEditor20250429\n  | BetaToolTextEditor20250728\n  | BetaWebSearchTool20250305\n  | BetaWebFetchTool20250910;\n\nexport interface BetaToolUseBlock {\n  id: string;\n\n  input: unknown;\n\n  name: string;\n\n  type: 'tool_use';\n}\n\nexport interface BetaToolUseBlockParam {\n  id: string;\n\n  input: unknown;\n\n  name: string;\n\n  type: 'tool_use';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n}\n\nexport interface BetaToolUsesKeep {\n  type: 'tool_uses';\n\n  value: number;\n}\n\nexport interface BetaToolUsesTrigger {\n  type: 'tool_uses';\n\n  value: number;\n}\n\nexport interface BetaURLImageSource {\n  type: 'url';\n\n  url: string;\n}\n\nexport interface BetaURLPDFSource {\n  type: 'url';\n\n  url: string;\n}\n\nexport interface BetaUsage {\n  /**\n   * Breakdown of cached tokens by TTL\n   */\n  cache_creation: BetaCacheCreation | null;\n\n  /**\n   * The number of input tokens used to create the cache entry.\n   */\n  cache_creation_input_tokens: number | null;\n\n  /**\n   * The number of input tokens read from the cache.\n   */\n  cache_read_input_tokens: number | null;\n\n  /**\n   * The number of input tokens which were used.\n   */\n  input_tokens: number;\n\n  /**\n   * The number of output tokens which were used.\n   */\n  output_tokens: number;\n\n  /**\n   * The number of server tool requests.\n   */\n  server_tool_use: BetaServerToolUsage | null;\n\n  /**\n   * If the request used the priority, standard, or batch tier.\n   */\n  service_tier: 'standard' | 'priority' | 'batch' | null;\n}\n\nexport interface BetaWebFetchBlock {\n  content: BetaDocumentBlock;\n\n  /**\n   * ISO 8601 timestamp when the content was retrieved\n   */\n  retrieved_at: string | null;\n\n  type: 'web_fetch_result';\n\n  /**\n   * Fetched content URL\n   */\n  url: string;\n}\n\nexport interface BetaWebFetchBlockParam {\n  content: BetaRequestDocumentBlock;\n\n  type: 'web_fetch_result';\n\n  /**\n   * Fetched content URL\n   */\n  url: string;\n\n  /**\n   * ISO 8601 timestamp when the content was retrieved\n   */\n  retrieved_at?: string | null;\n}\n\nexport interface BetaWebFetchTool20250910 {\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: 'web_fetch';\n\n  type: 'web_fetch_20250910';\n\n  /**\n   * List of domains to allow fetching from\n   */\n  allowed_domains?: Array<string> | null;\n\n  /**\n   * List of domains to block fetching from\n   */\n  blocked_domains?: Array<string> | null;\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n\n  /**\n   * Citations configuration for fetched documents. Citations are disabled by\n   * default.\n   */\n  citations?: BetaCitationsConfigParam | null;\n\n  /**\n   * Maximum number of tokens used by including web page text content in the context.\n   * The limit is approximate and does not apply to binary content such as PDFs.\n   */\n  max_content_tokens?: number | null;\n\n  /**\n   * Maximum number of times the tool can be used in the API request.\n   */\n  max_uses?: number | null;\n}\n\nexport interface BetaWebFetchToolResultBlock {\n  content: BetaWebFetchToolResultErrorBlock | BetaWebFetchBlock;\n\n  tool_use_id: string;\n\n  type: 'web_fetch_tool_result';\n}\n\nexport interface BetaWebFetchToolResultBlockParam {\n  content: BetaWebFetchToolResultErrorBlockParam | BetaWebFetchBlockParam;\n\n  tool_use_id: string;\n\n  type: 'web_fetch_tool_result';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n}\n\nexport interface BetaWebFetchToolResultErrorBlock {\n  error_code: BetaWebFetchToolResultErrorCode;\n\n  type: 'web_fetch_tool_result_error';\n}\n\nexport interface BetaWebFetchToolResultErrorBlockParam {\n  error_code: BetaWebFetchToolResultErrorCode;\n\n  type: 'web_fetch_tool_result_error';\n}\n\nexport type BetaWebFetchToolResultErrorCode =\n  | 'invalid_tool_input'\n  | 'url_too_long'\n  | 'url_not_allowed'\n  | 'url_not_accessible'\n  | 'unsupported_content_type'\n  | 'too_many_requests'\n  | 'max_uses_exceeded'\n  | 'unavailable';\n\nexport interface BetaWebSearchResultBlock {\n  encrypted_content: string;\n\n  page_age: string | null;\n\n  title: string;\n\n  type: 'web_search_result';\n\n  url: string;\n}\n\nexport interface BetaWebSearchResultBlockParam {\n  encrypted_content: string;\n\n  title: string;\n\n  type: 'web_search_result';\n\n  url: string;\n\n  page_age?: string | null;\n}\n\nexport interface BetaWebSearchTool20250305 {\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: 'web_search';\n\n  type: 'web_search_20250305';\n\n  /**\n   * If provided, only these domains will be included in results. Cannot be used\n   * alongside `blocked_domains`.\n   */\n  allowed_domains?: Array<string> | null;\n\n  /**\n   * If provided, these domains will never appear in results. Cannot be used\n   * alongside `allowed_domains`.\n   */\n  blocked_domains?: Array<string> | null;\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n\n  /**\n   * Maximum number of times the tool can be used in the API request.\n   */\n  max_uses?: number | null;\n\n  /**\n   * Parameters for the user's location. Used to provide more relevant search\n   * results.\n   */\n  user_location?: BetaWebSearchTool20250305.UserLocation | null;\n}\n\nexport namespace BetaWebSearchTool20250305 {\n  /**\n   * Parameters for the user's location. Used to provide more relevant search\n   * results.\n   */\n  export interface UserLocation {\n    type: 'approximate';\n\n    /**\n     * The city of the user.\n     */\n    city?: string | null;\n\n    /**\n     * The two letter\n     * [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the\n     * user.\n     */\n    country?: string | null;\n\n    /**\n     * The region of the user.\n     */\n    region?: string | null;\n\n    /**\n     * The [IANA timezone](https://nodatime.org/TimeZones) of the user.\n     */\n    timezone?: string | null;\n  }\n}\n\nexport interface BetaWebSearchToolRequestError {\n  error_code: BetaWebSearchToolResultErrorCode;\n\n  type: 'web_search_tool_result_error';\n}\n\nexport interface BetaWebSearchToolResultBlock {\n  content: BetaWebSearchToolResultBlockContent;\n\n  tool_use_id: string;\n\n  type: 'web_search_tool_result';\n}\n\nexport type BetaWebSearchToolResultBlockContent =\n  | BetaWebSearchToolResultError\n  | Array<BetaWebSearchResultBlock>;\n\nexport interface BetaWebSearchToolResultBlockParam {\n  content: BetaWebSearchToolResultBlockParamContent;\n\n  tool_use_id: string;\n\n  type: 'web_search_tool_result';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: BetaCacheControlEphemeral | null;\n}\n\nexport type BetaWebSearchToolResultBlockParamContent =\n  | Array<BetaWebSearchResultBlockParam>\n  | BetaWebSearchToolRequestError;\n\nexport interface BetaWebSearchToolResultError {\n  error_code: BetaWebSearchToolResultErrorCode;\n\n  type: 'web_search_tool_result_error';\n}\n\nexport type BetaWebSearchToolResultErrorCode =\n  | 'invalid_tool_input'\n  | 'unavailable'\n  | 'max_uses_exceeded'\n  | 'too_many_requests'\n  | 'query_too_long';\n\n/**\n * @deprecated BetaRequestDocumentBlock should be used insated\n */\nexport type BetaBase64PDFBlock = BetaRequestDocumentBlock;\n\nexport type MessageCreateParams = MessageCreateParamsNonStreaming | MessageCreateParamsStreaming;\n\nexport interface MessageCreateParamsBase {\n  /**\n   * Body param: The maximum number of tokens to generate before stopping.\n   *\n   * Note that our models may stop _before_ reaching this maximum. This parameter\n   * only specifies the absolute maximum number of tokens to generate.\n   *\n   * Different models have different maximum values for this parameter. See\n   * [models](https://docs.claude.com/en/docs/models-overview) for details.\n   */\n  max_tokens: number;\n\n  /**\n   * Body param: Input messages.\n   *\n   * Our models are trained to operate on alternating `user` and `assistant`\n   * conversational turns. When creating a new `Message`, you specify the prior\n   * conversational turns with the `messages` parameter, and the model then generates\n   * the next `Message` in the conversation. Consecutive `user` or `assistant` turns\n   * in your request will be combined into a single turn.\n   *\n   * Each input message must be an object with a `role` and `content`. You can\n   * specify a single `user`-role message, or you can include multiple `user` and\n   * `assistant` messages.\n   *\n   * If the final message uses the `assistant` role, the response content will\n   * continue immediately from the content in that message. This can be used to\n   * constrain part of the model's response.\n   *\n   * Example with a single `user` message:\n   *\n   * ```json\n   * [{ \"role\": \"user\", \"content\": \"Hello, Claude\" }]\n   * ```\n   *\n   * Example with multiple conversational turns:\n   *\n   * ```json\n   * [\n   *   { \"role\": \"user\", \"content\": \"Hello there.\" },\n   *   { \"role\": \"assistant\", \"content\": \"Hi, I'm Claude. How can I help you?\" },\n   *   { \"role\": \"user\", \"content\": \"Can you explain LLMs in plain English?\" }\n   * ]\n   * ```\n   *\n   * Example with a partially-filled response from Claude:\n   *\n   * ```json\n   * [\n   *   {\n   *     \"role\": \"user\",\n   *     \"content\": \"What's the Greek name for Sun? (A) Sol (B) Helios (C) Sun\"\n   *   },\n   *   { \"role\": \"assistant\", \"content\": \"The best answer is (\" }\n   * ]\n   * ```\n   *\n   * Each input message `content` may be either a single `string` or an array of\n   * content blocks, where each block has a specific `type`. Using a `string` for\n   * `content` is shorthand for an array of one content block of type `\"text\"`. The\n   * following input messages are equivalent:\n   *\n   * ```json\n   * { \"role\": \"user\", \"content\": \"Hello, Claude\" }\n   * ```\n   *\n   * ```json\n   * { \"role\": \"user\", \"content\": [{ \"type\": \"text\", \"text\": \"Hello, Claude\" }] }\n   * ```\n   *\n   * See [input examples](https://docs.claude.com/en/api/messages-examples).\n   *\n   * Note that if you want to include a\n   * [system prompt](https://docs.claude.com/en/docs/system-prompts), you can use the\n   * top-level `system` parameter — there is no `\"system\"` role for input messages in\n   * the Messages API.\n   *\n   * There is a limit of 100,000 messages in a single request.\n   */\n  messages: Array<BetaMessageParam>;\n\n  /**\n   * Body param: The model that will complete your prompt.\\n\\nSee\n   * [models](https://docs.anthropic.com/en/docs/models-overview) for additional\n   * details and options.\n   */\n  model: MessagesAPI.Model;\n\n  /**\n   * Body param: Container identifier for reuse across requests.\n   */\n  container?: BetaContainerParams | string | null;\n\n  /**\n   * Body param: Context management configuration.\n   *\n   * This allows you to control how Claude manages context across multiple requests,\n   * such as whether to clear function results or not.\n   */\n  context_management?: BetaContextManagementConfig | null;\n\n  /**\n   * Body param: MCP servers to be utilized in this request\n   */\n  mcp_servers?: Array<BetaRequestMCPServerURLDefinition>;\n\n  /**\n   * Body param: An object describing metadata about the request.\n   */\n  metadata?: BetaMetadata;\n\n  /**\n   * Body param: Determines whether to use priority capacity (if available) or\n   * standard capacity for this request.\n   *\n   * Anthropic offers different levels of service for your API requests. See\n   * [service-tiers](https://docs.claude.com/en/api/service-tiers) for details.\n   */\n  service_tier?: 'auto' | 'standard_only';\n\n  /**\n   * Body param: Custom text sequences that will cause the model to stop generating.\n   *\n   * Our models will normally stop when they have naturally completed their turn,\n   * which will result in a response `stop_reason` of `\"end_turn\"`.\n   *\n   * If you want the model to stop generating when it encounters custom strings of\n   * text, you can use the `stop_sequences` parameter. If the model encounters one of\n   * the custom sequences, the response `stop_reason` value will be `\"stop_sequence\"`\n   * and the response `stop_sequence` value will contain the matched stop sequence.\n   */\n  stop_sequences?: Array<string>;\n\n  /**\n   * Body param: Whether to incrementally stream the response using server-sent\n   * events.\n   *\n   * See [streaming](https://docs.claude.com/en/api/messages-streaming) for details.\n   */\n  stream?: boolean;\n\n  /**\n   * Body param: System prompt.\n   *\n   * A system prompt is a way of providing context and instructions to Claude, such\n   * as specifying a particular goal or role. See our\n   * [guide to system prompts](https://docs.claude.com/en/docs/system-prompts).\n   */\n  system?: string | Array<BetaTextBlockParam>;\n\n  /**\n   * Body param: Amount of randomness injected into the response.\n   *\n   * Defaults to `1.0`. Ranges from `0.0` to `1.0`. Use `temperature` closer to `0.0`\n   * for analytical / multiple choice, and closer to `1.0` for creative and\n   * generative tasks.\n   *\n   * Note that even with `temperature` of `0.0`, the results will not be fully\n   * deterministic.\n   */\n  temperature?: number;\n\n  /**\n   * Body param: Configuration for enabling Claude's extended thinking.\n   *\n   * When enabled, responses include `thinking` content blocks showing Claude's\n   * thinking process before the final answer. Requires a minimum budget of 1,024\n   * tokens and counts towards your `max_tokens` limit.\n   *\n   * See\n   * [extended thinking](https://docs.claude.com/en/docs/build-with-claude/extended-thinking)\n   * for details.\n   */\n  thinking?: BetaThinkingConfigParam;\n\n  /**\n   * Body param: How the model should use the provided tools. The model can use a\n   * specific tool, any available tool, decide by itself, or not use tools at all.\n   */\n  tool_choice?: BetaToolChoice;\n\n  /**\n   * Body param: Definitions of tools that the model may use.\n   *\n   * If you include `tools` in your API request, the model may return `tool_use`\n   * content blocks that represent the model's use of those tools. You can then run\n   * those tools using the tool input generated by the model and then optionally\n   * return results back to the model using `tool_result` content blocks.\n   *\n   * There are two types of tools: **client tools** and **server tools**. The\n   * behavior described below applies to client tools. For\n   * [server tools](https://docs.claude.com/en/docs/agents-and-tools/tool-use/overview#server-tools),\n   * see their individual documentation as each has its own behavior (e.g., the\n   * [web search tool](https://docs.claude.com/en/docs/agents-and-tools/tool-use/web-search-tool)).\n   *\n   * Each tool definition includes:\n   *\n   * - `name`: Name of the tool.\n   * - `description`: Optional, but strongly-recommended description of the tool.\n   * - `input_schema`: [JSON schema](https://json-schema.org/draft/2020-12) for the\n   *   tool `input` shape that the model will produce in `tool_use` output content\n   *   blocks.\n   *\n   * For example, if you defined `tools` as:\n   *\n   * ```json\n   * [\n   *   {\n   *     \"name\": \"get_stock_price\",\n   *     \"description\": \"Get the current stock price for a given ticker symbol.\",\n   *     \"input_schema\": {\n   *       \"type\": \"object\",\n   *       \"properties\": {\n   *         \"ticker\": {\n   *           \"type\": \"string\",\n   *           \"description\": \"The stock ticker symbol, e.g. AAPL for Apple Inc.\"\n   *         }\n   *       },\n   *       \"required\": [\"ticker\"]\n   *     }\n   *   }\n   * ]\n   * ```\n   *\n   * And then asked the model \"What's the S&P 500 at today?\", the model might produce\n   * `tool_use` content blocks in the response like this:\n   *\n   * ```json\n   * [\n   *   {\n   *     \"type\": \"tool_use\",\n   *     \"id\": \"toolu_01D7FLrfh4GYq7yT1ULFeyMV\",\n   *     \"name\": \"get_stock_price\",\n   *     \"input\": { \"ticker\": \"^GSPC\" }\n   *   }\n   * ]\n   * ```\n   *\n   * You might then run your `get_stock_price` tool with `{\"ticker\": \"^GSPC\"}` as an\n   * input, and return the following back to the model in a subsequent `user`\n   * message:\n   *\n   * ```json\n   * [\n   *   {\n   *     \"type\": \"tool_result\",\n   *     \"tool_use_id\": \"toolu_01D7FLrfh4GYq7yT1ULFeyMV\",\n   *     \"content\": \"259.75 USD\"\n   *   }\n   * ]\n   * ```\n   *\n   * Tools can be used for workflows that include running client-side tools and\n   * functions, or more generally whenever you want the model to produce a particular\n   * JSON structure of output.\n   *\n   * See our [guide](https://docs.claude.com/en/docs/tool-use) for more details.\n   */\n  tools?: Array<BetaToolUnion>;\n\n  /**\n   * Body param: Only sample from the top K options for each subsequent token.\n   *\n   * Used to remove \"long tail\" low probability responses.\n   * [Learn more technical details here](https://towardsdatascience.com/how-to-sample-from-language-models-682bceb97277).\n   *\n   * Recommended for advanced use cases only. You usually only need to use\n   * `temperature`.\n   */\n  top_k?: number;\n\n  /**\n   * Body param: Use nucleus sampling.\n   *\n   * In nucleus sampling, we compute the cumulative distribution over all the options\n   * for each subsequent token in decreasing probability order and cut it off once it\n   * reaches a particular probability specified by `top_p`. You should either alter\n   * `temperature` or `top_p`, but not both.\n   *\n   * Recommended for advanced use cases only. You usually only need to use\n   * `temperature`.\n   */\n  top_p?: number;\n\n  /**\n   * Header param: Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport namespace MessageCreateParams {\n  export type MessageCreateParamsNonStreaming = MessagesMessagesAPI.MessageCreateParamsNonStreaming;\n  export type MessageCreateParamsStreaming = MessagesMessagesAPI.MessageCreateParamsStreaming;\n}\n\nexport interface MessageCreateParamsNonStreaming extends MessageCreateParamsBase {\n  /**\n   * Body param: Whether to incrementally stream the response using server-sent\n   * events.\n   *\n   * See [streaming](https://docs.claude.com/en/api/messages-streaming) for details.\n   */\n  stream?: false;\n}\n\nexport interface MessageCreateParamsStreaming extends MessageCreateParamsBase {\n  /**\n   * Body param: Whether to incrementally stream the response using server-sent\n   * events.\n   *\n   * See [streaming](https://docs.claude.com/en/api/messages-streaming) for details.\n   */\n  stream: true;\n}\n\nexport interface MessageCountTokensParams {\n  /**\n   * Body param: Input messages.\n   *\n   * Our models are trained to operate on alternating `user` and `assistant`\n   * conversational turns. When creating a new `Message`, you specify the prior\n   * conversational turns with the `messages` parameter, and the model then generates\n   * the next `Message` in the conversation. Consecutive `user` or `assistant` turns\n   * in your request will be combined into a single turn.\n   *\n   * Each input message must be an object with a `role` and `content`. You can\n   * specify a single `user`-role message, or you can include multiple `user` and\n   * `assistant` messages.\n   *\n   * If the final message uses the `assistant` role, the response content will\n   * continue immediately from the content in that message. This can be used to\n   * constrain part of the model's response.\n   *\n   * Example with a single `user` message:\n   *\n   * ```json\n   * [{ \"role\": \"user\", \"content\": \"Hello, Claude\" }]\n   * ```\n   *\n   * Example with multiple conversational turns:\n   *\n   * ```json\n   * [\n   *   { \"role\": \"user\", \"content\": \"Hello there.\" },\n   *   { \"role\": \"assistant\", \"content\": \"Hi, I'm Claude. How can I help you?\" },\n   *   { \"role\": \"user\", \"content\": \"Can you explain LLMs in plain English?\" }\n   * ]\n   * ```\n   *\n   * Example with a partially-filled response from Claude:\n   *\n   * ```json\n   * [\n   *   {\n   *     \"role\": \"user\",\n   *     \"content\": \"What's the Greek name for Sun? (A) Sol (B) Helios (C) Sun\"\n   *   },\n   *   { \"role\": \"assistant\", \"content\": \"The best answer is (\" }\n   * ]\n   * ```\n   *\n   * Each input message `content` may be either a single `string` or an array of\n   * content blocks, where each block has a specific `type`. Using a `string` for\n   * `content` is shorthand for an array of one content block of type `\"text\"`. The\n   * following input messages are equivalent:\n   *\n   * ```json\n   * { \"role\": \"user\", \"content\": \"Hello, Claude\" }\n   * ```\n   *\n   * ```json\n   * { \"role\": \"user\", \"content\": [{ \"type\": \"text\", \"text\": \"Hello, Claude\" }] }\n   * ```\n   *\n   * See [input examples](https://docs.claude.com/en/api/messages-examples).\n   *\n   * Note that if you want to include a\n   * [system prompt](https://docs.claude.com/en/docs/system-prompts), you can use the\n   * top-level `system` parameter — there is no `\"system\"` role for input messages in\n   * the Messages API.\n   *\n   * There is a limit of 100,000 messages in a single request.\n   */\n  messages: Array<BetaMessageParam>;\n\n  /**\n   * Body param: The model that will complete your prompt.\\n\\nSee\n   * [models](https://docs.anthropic.com/en/docs/models-overview) for additional\n   * details and options.\n   */\n  model: MessagesAPI.Model;\n\n  /**\n   * Body param: Context management configuration.\n   *\n   * This allows you to control how Claude manages context across multiple requests,\n   * such as whether to clear function results or not.\n   */\n  context_management?: BetaContextManagementConfig | null;\n\n  /**\n   * Body param: MCP servers to be utilized in this request\n   */\n  mcp_servers?: Array<BetaRequestMCPServerURLDefinition>;\n\n  /**\n   * Body param: System prompt.\n   *\n   * A system prompt is a way of providing context and instructions to Claude, such\n   * as specifying a particular goal or role. See our\n   * [guide to system prompts](https://docs.claude.com/en/docs/system-prompts).\n   */\n  system?: string | Array<BetaTextBlockParam>;\n\n  /**\n   * Body param: Configuration for enabling Claude's extended thinking.\n   *\n   * When enabled, responses include `thinking` content blocks showing Claude's\n   * thinking process before the final answer. Requires a minimum budget of 1,024\n   * tokens and counts towards your `max_tokens` limit.\n   *\n   * See\n   * [extended thinking](https://docs.claude.com/en/docs/build-with-claude/extended-thinking)\n   * for details.\n   */\n  thinking?: BetaThinkingConfigParam;\n\n  /**\n   * Body param: How the model should use the provided tools. The model can use a\n   * specific tool, any available tool, decide by itself, or not use tools at all.\n   */\n  tool_choice?: BetaToolChoice;\n\n  /**\n   * Body param: Definitions of tools that the model may use.\n   *\n   * If you include `tools` in your API request, the model may return `tool_use`\n   * content blocks that represent the model's use of those tools. You can then run\n   * those tools using the tool input generated by the model and then optionally\n   * return results back to the model using `tool_result` content blocks.\n   *\n   * There are two types of tools: **client tools** and **server tools**. The\n   * behavior described below applies to client tools. For\n   * [server tools](https://docs.claude.com/en/docs/agents-and-tools/tool-use/overview#server-tools),\n   * see their individual documentation as each has its own behavior (e.g., the\n   * [web search tool](https://docs.claude.com/en/docs/agents-and-tools/tool-use/web-search-tool)).\n   *\n   * Each tool definition includes:\n   *\n   * - `name`: Name of the tool.\n   * - `description`: Optional, but strongly-recommended description of the tool.\n   * - `input_schema`: [JSON schema](https://json-schema.org/draft/2020-12) for the\n   *   tool `input` shape that the model will produce in `tool_use` output content\n   *   blocks.\n   *\n   * For example, if you defined `tools` as:\n   *\n   * ```json\n   * [\n   *   {\n   *     \"name\": \"get_stock_price\",\n   *     \"description\": \"Get the current stock price for a given ticker symbol.\",\n   *     \"input_schema\": {\n   *       \"type\": \"object\",\n   *       \"properties\": {\n   *         \"ticker\": {\n   *           \"type\": \"string\",\n   *           \"description\": \"The stock ticker symbol, e.g. AAPL for Apple Inc.\"\n   *         }\n   *       },\n   *       \"required\": [\"ticker\"]\n   *     }\n   *   }\n   * ]\n   * ```\n   *\n   * And then asked the model \"What's the S&P 500 at today?\", the model might produce\n   * `tool_use` content blocks in the response like this:\n   *\n   * ```json\n   * [\n   *   {\n   *     \"type\": \"tool_use\",\n   *     \"id\": \"toolu_01D7FLrfh4GYq7yT1ULFeyMV\",\n   *     \"name\": \"get_stock_price\",\n   *     \"input\": { \"ticker\": \"^GSPC\" }\n   *   }\n   * ]\n   * ```\n   *\n   * You might then run your `get_stock_price` tool with `{\"ticker\": \"^GSPC\"}` as an\n   * input, and return the following back to the model in a subsequent `user`\n   * message:\n   *\n   * ```json\n   * [\n   *   {\n   *     \"type\": \"tool_result\",\n   *     \"tool_use_id\": \"toolu_01D7FLrfh4GYq7yT1ULFeyMV\",\n   *     \"content\": \"259.75 USD\"\n   *   }\n   * ]\n   * ```\n   *\n   * Tools can be used for workflows that include running client-side tools and\n   * functions, or more generally whenever you want the model to produce a particular\n   * JSON structure of output.\n   *\n   * See our [guide](https://docs.claude.com/en/docs/tool-use) for more details.\n   */\n  tools?: Array<\n    | BetaTool\n    | BetaToolBash20241022\n    | BetaToolBash20250124\n    | BetaCodeExecutionTool20250522\n    | BetaCodeExecutionTool20250825\n    | BetaToolComputerUse20241022\n    | BetaMemoryTool20250818\n    | BetaToolComputerUse20250124\n    | BetaToolTextEditor20241022\n    | BetaToolTextEditor20250124\n    | BetaToolTextEditor20250429\n    | BetaToolTextEditor20250728\n    | BetaWebSearchTool20250305\n    | BetaWebFetchTool20250910\n  >;\n\n  /**\n   * Header param: Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport { BetaToolRunner, type BetaToolRunnerParams } from '../../../lib/tools/BetaToolRunner';\n\nMessages.Batches = Batches;\n\nMessages.BetaToolRunner = BetaToolRunner;\n\nexport declare namespace Messages {\n  export {\n    type BetaAllThinkingTurns as BetaAllThinkingTurns,\n    type BetaBase64ImageSource as BetaBase64ImageSource,\n    type BetaBase64PDFSource as BetaBase64PDFSource,\n    type BetaBashCodeExecutionOutputBlock as BetaBashCodeExecutionOutputBlock,\n    type BetaBashCodeExecutionOutputBlockParam as BetaBashCodeExecutionOutputBlockParam,\n    type BetaBashCodeExecutionResultBlock as BetaBashCodeExecutionResultBlock,\n    type BetaBashCodeExecutionResultBlockParam as BetaBashCodeExecutionResultBlockParam,\n    type BetaBashCodeExecutionToolResultBlock as BetaBashCodeExecutionToolResultBlock,\n    type BetaBashCodeExecutionToolResultBlockParam as BetaBashCodeExecutionToolResultBlockParam,\n    type BetaBashCodeExecutionToolResultError as BetaBashCodeExecutionToolResultError,\n    type BetaBashCodeExecutionToolResultErrorParam as BetaBashCodeExecutionToolResultErrorParam,\n    type BetaCacheControlEphemeral as BetaCacheControlEphemeral,\n    type BetaCacheCreation as BetaCacheCreation,\n    type BetaCitationCharLocation as BetaCitationCharLocation,\n    type BetaCitationCharLocationParam as BetaCitationCharLocationParam,\n    type BetaCitationConfig as BetaCitationConfig,\n    type BetaCitationContentBlockLocation as BetaCitationContentBlockLocation,\n    type BetaCitationContentBlockLocationParam as BetaCitationContentBlockLocationParam,\n    type BetaCitationPageLocation as BetaCitationPageLocation,\n    type BetaCitationPageLocationParam as BetaCitationPageLocationParam,\n    type BetaCitationSearchResultLocation as BetaCitationSearchResultLocation,\n    type BetaCitationSearchResultLocationParam as BetaCitationSearchResultLocationParam,\n    type BetaCitationWebSearchResultLocationParam as BetaCitationWebSearchResultLocationParam,\n    type BetaCitationsConfigParam as BetaCitationsConfigParam,\n    type BetaCitationsDelta as BetaCitationsDelta,\n    type BetaCitationsWebSearchResultLocation as BetaCitationsWebSearchResultLocation,\n    type BetaClearThinking20251015Edit as BetaClearThinking20251015Edit,\n    type BetaClearThinking20251015EditResponse as BetaClearThinking20251015EditResponse,\n    type BetaClearToolUses20250919Edit as BetaClearToolUses20250919Edit,\n    type BetaClearToolUses20250919EditResponse as BetaClearToolUses20250919EditResponse,\n    type BetaCodeExecutionOutputBlock as BetaCodeExecutionOutputBlock,\n    type BetaCodeExecutionOutputBlockParam as BetaCodeExecutionOutputBlockParam,\n    type BetaCodeExecutionResultBlock as BetaCodeExecutionResultBlock,\n    type BetaCodeExecutionResultBlockParam as BetaCodeExecutionResultBlockParam,\n    type BetaCodeExecutionTool20250522 as BetaCodeExecutionTool20250522,\n    type BetaCodeExecutionTool20250825 as BetaCodeExecutionTool20250825,\n    type BetaCodeExecutionToolResultBlock as BetaCodeExecutionToolResultBlock,\n    type BetaCodeExecutionToolResultBlockContent as BetaCodeExecutionToolResultBlockContent,\n    type BetaCodeExecutionToolResultBlockParam as BetaCodeExecutionToolResultBlockParam,\n    type BetaCodeExecutionToolResultBlockParamContent as BetaCodeExecutionToolResultBlockParamContent,\n    type BetaCodeExecutionToolResultError as BetaCodeExecutionToolResultError,\n    type BetaCodeExecutionToolResultErrorCode as BetaCodeExecutionToolResultErrorCode,\n    type BetaCodeExecutionToolResultErrorParam as BetaCodeExecutionToolResultErrorParam,\n    type BetaContainer as BetaContainer,\n    type BetaContainerParams as BetaContainerParams,\n    type BetaContainerUploadBlock as BetaContainerUploadBlock,\n    type BetaContainerUploadBlockParam as BetaContainerUploadBlockParam,\n    type BetaContentBlock as BetaContentBlock,\n    type BetaContentBlockParam as BetaContentBlockParam,\n    type BetaContentBlockSource as BetaContentBlockSource,\n    type BetaContentBlockSourceContent as BetaContentBlockSourceContent,\n    type BetaContextManagementConfig as BetaContextManagementConfig,\n    type BetaContextManagementResponse as BetaContextManagementResponse,\n    type BetaCountTokensContextManagementResponse as BetaCountTokensContextManagementResponse,\n    type BetaDocumentBlock as BetaDocumentBlock,\n    type BetaFileDocumentSource as BetaFileDocumentSource,\n    type BetaFileImageSource as BetaFileImageSource,\n    type BetaImageBlockParam as BetaImageBlockParam,\n    type BetaInputJSONDelta as BetaInputJSONDelta,\n    type BetaInputTokensClearAtLeast as BetaInputTokensClearAtLeast,\n    type BetaInputTokensTrigger as BetaInputTokensTrigger,\n    type BetaMCPToolResultBlock as BetaMCPToolResultBlock,\n    type BetaMCPToolUseBlock as BetaMCPToolUseBlock,\n    type BetaMCPToolUseBlockParam as BetaMCPToolUseBlockParam,\n    type BetaMemoryTool20250818 as BetaMemoryTool20250818,\n    type BetaMemoryTool20250818Command as BetaMemoryTool20250818Command,\n    type BetaMemoryTool20250818CreateCommand as BetaMemoryTool20250818CreateCommand,\n    type BetaMemoryTool20250818DeleteCommand as BetaMemoryTool20250818DeleteCommand,\n    type BetaMemoryTool20250818InsertCommand as BetaMemoryTool20250818InsertCommand,\n    type BetaMemoryTool20250818RenameCommand as BetaMemoryTool20250818RenameCommand,\n    type BetaMemoryTool20250818StrReplaceCommand as BetaMemoryTool20250818StrReplaceCommand,\n    type BetaMemoryTool20250818ViewCommand as BetaMemoryTool20250818ViewCommand,\n    type BetaMessage as BetaMessage,\n    type BetaMessageDeltaUsage as BetaMessageDeltaUsage,\n    type BetaMessageParam as BetaMessageParam,\n    type BetaMessageTokensCount as BetaMessageTokensCount,\n    type BetaMetadata as BetaMetadata,\n    type BetaPlainTextSource as BetaPlainTextSource,\n    type BetaRawContentBlockDelta as BetaRawContentBlockDelta,\n    type BetaRawContentBlockDeltaEvent as BetaRawContentBlockDeltaEvent,\n    type BetaRawContentBlockStartEvent as BetaRawContentBlockStartEvent,\n    type BetaRawContentBlockStopEvent as BetaRawContentBlockStopEvent,\n    type BetaRawMessageDeltaEvent as BetaRawMessageDeltaEvent,\n    type BetaRawMessageStartEvent as BetaRawMessageStartEvent,\n    type BetaRawMessageStopEvent as BetaRawMessageStopEvent,\n    type BetaRawMessageStreamEvent as BetaRawMessageStreamEvent,\n    type BetaRedactedThinkingBlock as BetaRedactedThinkingBlock,\n    type BetaRedactedThinkingBlockParam as BetaRedactedThinkingBlockParam,\n    type BetaRequestDocumentBlock as BetaRequestDocumentBlock,\n    type BetaRequestMCPServerToolConfiguration as BetaRequestMCPServerToolConfiguration,\n    type BetaRequestMCPServerURLDefinition as BetaRequestMCPServerURLDefinition,\n    type BetaRequestMCPToolResultBlockParam as BetaRequestMCPToolResultBlockParam,\n    type BetaSearchResultBlockParam as BetaSearchResultBlockParam,\n    type BetaServerToolUsage as BetaServerToolUsage,\n    type BetaServerToolUseBlock as BetaServerToolUseBlock,\n    type BetaServerToolUseBlockParam as BetaServerToolUseBlockParam,\n    type BetaSignatureDelta as BetaSignatureDelta,\n    type BetaSkill as BetaSkill,\n    type BetaSkillParams as BetaSkillParams,\n    type BetaStopReason as BetaStopReason,\n    type BetaTextBlock as BetaTextBlock,\n    type BetaTextBlockParam as BetaTextBlockParam,\n    type BetaTextCitation as BetaTextCitation,\n    type BetaTextCitationParam as BetaTextCitationParam,\n    type BetaTextDelta as BetaTextDelta,\n    type BetaTextEditorCodeExecutionCreateResultBlock as BetaTextEditorCodeExecutionCreateResultBlock,\n    type BetaTextEditorCodeExecutionCreateResultBlockParam as BetaTextEditorCodeExecutionCreateResultBlockParam,\n    type BetaTextEditorCodeExecutionStrReplaceResultBlock as BetaTextEditorCodeExecutionStrReplaceResultBlock,\n    type BetaTextEditorCodeExecutionStrReplaceResultBlockParam as BetaTextEditorCodeExecutionStrReplaceResultBlockParam,\n    type BetaTextEditorCodeExecutionToolResultBlock as BetaTextEditorCodeExecutionToolResultBlock,\n    type BetaTextEditorCodeExecutionToolResultBlockParam as BetaTextEditorCodeExecutionToolResultBlockParam,\n    type BetaTextEditorCodeExecutionToolResultError as BetaTextEditorCodeExecutionToolResultError,\n    type BetaTextEditorCodeExecutionToolResultErrorParam as BetaTextEditorCodeExecutionToolResultErrorParam,\n    type BetaTextEditorCodeExecutionViewResultBlock as BetaTextEditorCodeExecutionViewResultBlock,\n    type BetaTextEditorCodeExecutionViewResultBlockParam as BetaTextEditorCodeExecutionViewResultBlockParam,\n    type BetaThinkingBlock as BetaThinkingBlock,\n    type BetaThinkingBlockParam as BetaThinkingBlockParam,\n    type BetaThinkingConfigDisabled as BetaThinkingConfigDisabled,\n    type BetaThinkingConfigEnabled as BetaThinkingConfigEnabled,\n    type BetaThinkingConfigParam as BetaThinkingConfigParam,\n    type BetaThinkingDelta as BetaThinkingDelta,\n    type BetaThinkingTurns as BetaThinkingTurns,\n    type BetaTool as BetaTool,\n    type BetaToolBash20241022 as BetaToolBash20241022,\n    type BetaToolBash20250124 as BetaToolBash20250124,\n    type BetaToolChoice as BetaToolChoice,\n    type BetaToolChoiceAny as BetaToolChoiceAny,\n    type BetaToolChoiceAuto as BetaToolChoiceAuto,\n    type BetaToolChoiceNone as BetaToolChoiceNone,\n    type BetaToolChoiceTool as BetaToolChoiceTool,\n    type BetaToolComputerUse20241022 as BetaToolComputerUse20241022,\n    type BetaToolComputerUse20250124 as BetaToolComputerUse20250124,\n    type BetaToolResultBlockParam as BetaToolResultBlockParam,\n    type BetaToolResultContentBlockParam as BetaToolResultContentBlockParam,\n    type BetaToolTextEditor20241022 as BetaToolTextEditor20241022,\n    type BetaToolTextEditor20250124 as BetaToolTextEditor20250124,\n    type BetaToolTextEditor20250429 as BetaToolTextEditor20250429,\n    type BetaToolTextEditor20250728 as BetaToolTextEditor20250728,\n    type BetaToolUnion as BetaToolUnion,\n    type BetaToolUseBlock as BetaToolUseBlock,\n    type BetaToolUseBlockParam as BetaToolUseBlockParam,\n    type BetaToolUsesKeep as BetaToolUsesKeep,\n    type BetaToolUsesTrigger as BetaToolUsesTrigger,\n    type BetaURLImageSource as BetaURLImageSource,\n    type BetaURLPDFSource as BetaURLPDFSource,\n    type BetaUsage as BetaUsage,\n    type BetaWebFetchBlock as BetaWebFetchBlock,\n    type BetaWebFetchBlockParam as BetaWebFetchBlockParam,\n    type BetaWebFetchTool20250910 as BetaWebFetchTool20250910,\n    type BetaWebFetchToolResultBlock as BetaWebFetchToolResultBlock,\n    type BetaWebFetchToolResultBlockParam as BetaWebFetchToolResultBlockParam,\n    type BetaWebFetchToolResultErrorBlock as BetaWebFetchToolResultErrorBlock,\n    type BetaWebFetchToolResultErrorBlockParam as BetaWebFetchToolResultErrorBlockParam,\n    type BetaWebFetchToolResultErrorCode as BetaWebFetchToolResultErrorCode,\n    type BetaWebSearchResultBlock as BetaWebSearchResultBlock,\n    type BetaWebSearchResultBlockParam as BetaWebSearchResultBlockParam,\n    type BetaWebSearchTool20250305 as BetaWebSearchTool20250305,\n    type BetaWebSearchToolRequestError as BetaWebSearchToolRequestError,\n    type BetaWebSearchToolResultBlock as BetaWebSearchToolResultBlock,\n    type BetaWebSearchToolResultBlockContent as BetaWebSearchToolResultBlockContent,\n    type BetaWebSearchToolResultBlockParam as BetaWebSearchToolResultBlockParam,\n    type BetaWebSearchToolResultBlockParamContent as BetaWebSearchToolResultBlockParamContent,\n    type BetaWebSearchToolResultError as BetaWebSearchToolResultError,\n    type BetaWebSearchToolResultErrorCode as BetaWebSearchToolResultErrorCode,\n    type BetaBase64PDFBlock as BetaBase64PDFBlock,\n    type MessageCreateParams as MessageCreateParams,\n    type MessageCreateParamsNonStreaming as MessageCreateParamsNonStreaming,\n    type MessageCreateParamsStreaming as MessageCreateParamsStreaming,\n    type MessageCountTokensParams as MessageCountTokensParams,\n  };\n\n  export { type BetaToolRunnerParams, BetaToolRunner };\n\n  export {\n    Batches as Batches,\n    type BetaDeletedMessageBatch as BetaDeletedMessageBatch,\n    type BetaMessageBatch as BetaMessageBatch,\n    type BetaMessageBatchCanceledResult as BetaMessageBatchCanceledResult,\n    type BetaMessageBatchErroredResult as BetaMessageBatchErroredResult,\n    type BetaMessageBatchExpiredResult as BetaMessageBatchExpiredResult,\n    type BetaMessageBatchIndividualResponse as BetaMessageBatchIndividualResponse,\n    type BetaMessageBatchRequestCounts as BetaMessageBatchRequestCounts,\n    type BetaMessageBatchResult as BetaMessageBatchResult,\n    type BetaMessageBatchSucceededResult as BetaMessageBatchSucceededResult,\n    type BetaMessageBatchesPage as BetaMessageBatchesPage,\n    type BatchCreateParams as BatchCreateParams,\n    type BatchRetrieveParams as BatchRetrieveParams,\n    type BatchListParams as BatchListParams,\n    type BatchDeleteParams as BatchDeleteParams,\n    type BatchCancelParams as BatchCancelParams,\n    type BatchResultsParams as BatchResultsParams,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3684, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/resources/beta/skills/versions.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/resources/beta/skills/versions.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport * as BetaAPI from '../beta';\nimport { APIPromise } from '../../../core/api-promise';\nimport { PageCursor, type PageCursorParams, PagePromise } from '../../../core/pagination';\nimport { type Uploadable } from '../../../core/uploads';\nimport { buildHeaders } from '../../../internal/headers';\nimport { RequestOptions } from '../../../internal/request-options';\nimport { multipartFormRequestOptions } from '../../../internal/uploads';\nimport { path } from '../../../internal/utils/path';\n\nexport class Versions extends APIResource {\n  /**\n   * Create Skill Version\n   *\n   * @example\n   * ```ts\n   * const version = await client.beta.skills.versions.create(\n   *   'skill_id',\n   * );\n   * ```\n   */\n  create(\n    skillID: string,\n    params: VersionCreateParams | null | undefined = {},\n    options?: RequestOptions,\n  ): APIPromise<VersionCreateResponse> {\n    const { betas, ...body } = params ?? {};\n    return this._client.post(\n      path`/v1/skills/${skillID}/versions?beta=true`,\n      multipartFormRequestOptions(\n        {\n          body,\n          ...options,\n          headers: buildHeaders([\n            { 'anthropic-beta': [...(betas ?? []), 'skills-2025-10-02'].toString() },\n            options?.headers,\n          ]),\n        },\n        this._client,\n      ),\n    );\n  }\n\n  /**\n   * Get Skill Version\n   *\n   * @example\n   * ```ts\n   * const version = await client.beta.skills.versions.retrieve(\n   *   'version',\n   *   { skill_id: 'skill_id' },\n   * );\n   * ```\n   */\n  retrieve(\n    version: string,\n    params: VersionRetrieveParams,\n    options?: RequestOptions,\n  ): APIPromise<VersionRetrieveResponse> {\n    const { skill_id, betas } = params;\n    return this._client.get(path`/v1/skills/${skill_id}/versions/${version}?beta=true`, {\n      ...options,\n      headers: buildHeaders([\n        { 'anthropic-beta': [...(betas ?? []), 'skills-2025-10-02'].toString() },\n        options?.headers,\n      ]),\n    });\n  }\n\n  /**\n   * List Skill Versions\n   *\n   * @example\n   * ```ts\n   * // Automatically fetches more pages as needed.\n   * for await (const versionListResponse of client.beta.skills.versions.list(\n   *   'skill_id',\n   * )) {\n   *   // ...\n   * }\n   * ```\n   */\n  list(\n    skillID: string,\n    params: VersionListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<VersionListResponsesPageCursor, VersionListResponse> {\n    const { betas, ...query } = params ?? {};\n    return this._client.getAPIList(\n      path`/v1/skills/${skillID}/versions?beta=true`,\n      PageCursor<VersionListResponse>,\n      {\n        query,\n        ...options,\n        headers: buildHeaders([\n          { 'anthropic-beta': [...(betas ?? []), 'skills-2025-10-02'].toString() },\n          options?.headers,\n        ]),\n      },\n    );\n  }\n\n  /**\n   * Delete Skill Version\n   *\n   * @example\n   * ```ts\n   * const version = await client.beta.skills.versions.delete(\n   *   'version',\n   *   { skill_id: 'skill_id' },\n   * );\n   * ```\n   */\n  delete(\n    version: string,\n    params: VersionDeleteParams,\n    options?: RequestOptions,\n  ): APIPromise<VersionDeleteResponse> {\n    const { skill_id, betas } = params;\n    return this._client.delete(path`/v1/skills/${skill_id}/versions/${version}?beta=true`, {\n      ...options,\n      headers: buildHeaders([\n        { 'anthropic-beta': [...(betas ?? []), 'skills-2025-10-02'].toString() },\n        options?.headers,\n      ]),\n    });\n  }\n}\n\nexport type VersionListResponsesPageCursor = PageCursor<VersionListResponse>;\n\nexport interface VersionCreateResponse {\n  /**\n   * Unique identifier for the skill version.\n   *\n   * The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * ISO 8601 timestamp of when the skill version was created.\n   */\n  created_at: string;\n\n  /**\n   * Description of the skill version.\n   *\n   * This is extracted from the SKILL.md file in the skill upload.\n   */\n  description: string;\n\n  /**\n   * Directory name of the skill version.\n   *\n   * This is the top-level directory name that was extracted from the uploaded files.\n   */\n  directory: string;\n\n  /**\n   * Human-readable name of the skill version.\n   *\n   * This is extracted from the SKILL.md file in the skill upload.\n   */\n  name: string;\n\n  /**\n   * Identifier for the skill that this version belongs to.\n   */\n  skill_id: string;\n\n  /**\n   * Object type.\n   *\n   * For Skill Versions, this is always `\"skill_version\"`.\n   */\n  type: string;\n\n  /**\n   * Version identifier for the skill.\n   *\n   * Each version is identified by a Unix epoch timestamp (e.g., \"1759178010641129\").\n   */\n  version: string;\n}\n\nexport interface VersionRetrieveResponse {\n  /**\n   * Unique identifier for the skill version.\n   *\n   * The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * ISO 8601 timestamp of when the skill version was created.\n   */\n  created_at: string;\n\n  /**\n   * Description of the skill version.\n   *\n   * This is extracted from the SKILL.md file in the skill upload.\n   */\n  description: string;\n\n  /**\n   * Directory name of the skill version.\n   *\n   * This is the top-level directory name that was extracted from the uploaded files.\n   */\n  directory: string;\n\n  /**\n   * Human-readable name of the skill version.\n   *\n   * This is extracted from the SKILL.md file in the skill upload.\n   */\n  name: string;\n\n  /**\n   * Identifier for the skill that this version belongs to.\n   */\n  skill_id: string;\n\n  /**\n   * Object type.\n   *\n   * For Skill Versions, this is always `\"skill_version\"`.\n   */\n  type: string;\n\n  /**\n   * Version identifier for the skill.\n   *\n   * Each version is identified by a Unix epoch timestamp (e.g., \"1759178010641129\").\n   */\n  version: string;\n}\n\nexport interface VersionListResponse {\n  /**\n   * Unique identifier for the skill version.\n   *\n   * The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * ISO 8601 timestamp of when the skill version was created.\n   */\n  created_at: string;\n\n  /**\n   * Description of the skill version.\n   *\n   * This is extracted from the SKILL.md file in the skill upload.\n   */\n  description: string;\n\n  /**\n   * Directory name of the skill version.\n   *\n   * This is the top-level directory name that was extracted from the uploaded files.\n   */\n  directory: string;\n\n  /**\n   * Human-readable name of the skill version.\n   *\n   * This is extracted from the SKILL.md file in the skill upload.\n   */\n  name: string;\n\n  /**\n   * Identifier for the skill that this version belongs to.\n   */\n  skill_id: string;\n\n  /**\n   * Object type.\n   *\n   * For Skill Versions, this is always `\"skill_version\"`.\n   */\n  type: string;\n\n  /**\n   * Version identifier for the skill.\n   *\n   * Each version is identified by a Unix epoch timestamp (e.g., \"1759178010641129\").\n   */\n  version: string;\n}\n\nexport interface VersionDeleteResponse {\n  /**\n   * Version identifier for the skill.\n   *\n   * Each version is identified by a Unix epoch timestamp (e.g., \"1759178010641129\").\n   */\n  id: string;\n\n  /**\n   * Deleted object type.\n   *\n   * For Skill Versions, this is always `\"skill_version_deleted\"`.\n   */\n  type: string;\n}\n\nexport interface VersionCreateParams {\n  /**\n   * Body param: Files to upload for the skill.\n   *\n   * All files must be in the same top-level directory and must include a SKILL.md\n   * file at the root of that directory.\n   */\n  files?: Array<Uploadable> | null;\n\n  /**\n   * Header param: Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport interface VersionRetrieveParams {\n  /**\n   * Path param: Unique identifier for the skill.\n   *\n   * The format and length of IDs may change over time.\n   */\n  skill_id: string;\n\n  /**\n   * Header param: Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport interface VersionListParams extends PageCursorParams {\n  /**\n   * Header param: Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport interface VersionDeleteParams {\n  /**\n   * Path param: Unique identifier for the skill.\n   *\n   * The format and length of IDs may change over time.\n   */\n  skill_id: string;\n\n  /**\n   * Header param: Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport declare namespace Versions {\n  export {\n    type VersionCreateResponse as VersionCreateResponse,\n    type VersionRetrieveResponse as VersionRetrieveResponse,\n    type VersionListResponse as VersionListResponse,\n    type VersionDeleteResponse as VersionDeleteResponse,\n    type VersionListResponsesPageCursor as VersionListResponsesPageCursor,\n    type VersionCreateParams as VersionCreateParams,\n    type VersionRetrieveParams as VersionRetrieveParams,\n    type VersionListParams as VersionListParams,\n    type VersionDeleteParams as VersionDeleteParams,\n  };\n}\n"],"names":[],"mappings":"AAAA,sFAAsF;;;;;OAE/E,EAAE,WAAW,EAAE;OAGf,EAAE,UAAU,EAAsC;OAElD,EAAE,YAAY,EAAE;OAEhB,EAAE,2BAA2B,EAAE;OAC/B,EAAE,IAAI,EAAE;;;;;;AAET,MAAO,QAAS,SAAQ,8KAAW;IACvC;;;;;;;;;OASG,CACH,MAAM,CACJ,OAAe,EACf,SAAiD,CAAA,CAAE,EACnD,OAAwB,EAAA;QAExB,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,EAAE,GAAG,MAAM,IAAI,CAAA,CAAE,CAAC;QACxC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CACtB,gLAAI,CAAA,WAAA,EAAc,OAAO,CAAA,mBAAA,CAAqB,MAC9C,iMAA2B,EACzB;YACE,IAAI;YACJ,GAAG,OAAO;YACV,OAAO,MAAE,kLAAY,EAAC;gBACpB;oBAAE,gBAAgB,EAAE,CAAC,GAAG;2BAAC,KAAK,IAAI,EAAE,CAAC;wBAAE,mBAAmB;qBAAC,CAAC,QAAQ,EAAE;gBAAA,CAAE;gBACxE,OAAO,EAAE,OAAO;aACjB,CAAC;SACH,EACD,IAAI,CAAC,OAAO,CACb,CACF,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG,CACH,QAAQ,CACN,OAAe,EACf,MAA6B,EAC7B,OAAwB,EAAA;QAExB,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC;QACnC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,gLAAI,CAAA,WAAA,EAAc,QAAQ,CAAA,UAAA,EAAa,OAAO,CAAA,UAAA,CAAY,EAAE;YAClF,GAAG,OAAO;YACV,OAAO,MAAE,kLAAY,EAAC;gBACpB;oBAAE,gBAAgB,EAAE,CAAC,GAAG;2BAAC,KAAK,IAAI,EAAE,CAAC;wBAAE,mBAAmB;qBAAC,CAAC,QAAQ,EAAE;gBAAA,CAAE;gBACxE,OAAO,EAAE,OAAO;aACjB,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAED;;;;;;;;;;;;OAYG,CACH,IAAI,CACF,OAAe,EACf,SAA+C,CAAA,CAAE,EACjD,OAAwB,EAAA;QAExB,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,MAAM,IAAI,CAAA,CAAE,CAAC;QACzC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAC5B,gLAAI,CAAA,WAAA,EAAc,OAAO,CAAA,mBAAA,CAAqB,EAC9C,+KAA+B,CAAA,CAC/B;YACE,KAAK;YACL,GAAG,OAAO;YACV,OAAO,MAAE,kLAAY,EAAC;gBACpB;oBAAE,gBAAgB,EAAE,CAAC,GAAG;2BAAC,KAAK,IAAI,EAAE,CAAC;wBAAE,mBAAmB;qBAAC,CAAC,QAAQ,EAAE;gBAAA,CAAE;gBACxE,OAAO,EAAE,OAAO;aACjB,CAAC;SACH,CACF,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG,CACH,MAAM,CACJ,OAAe,EACf,MAA2B,EAC3B,OAAwB,EAAA;QAExB,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC;QACnC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,gLAAI,CAAA,WAAA,EAAc,QAAQ,CAAA,UAAA,EAAa,OAAO,CAAA,UAAA,CAAY,EAAE;YACrF,GAAG,OAAO;YACV,OAAO,MAAE,kLAAY,EAAC;gBACpB;oBAAE,gBAAgB,EAAE,CAAC,GAAG;2BAAC,KAAK,IAAI,EAAE,CAAC;wBAAE,mBAAmB;qBAAC,CAAC,QAAQ,EAAE;gBAAA,CAAE;gBACxE,OAAO,EAAE,OAAO;aACjB,CAAC;SACH,CAAC,CAAC;IACL,CAAC;CACF","debugId":null}},
    {"offset": {"line": 3808, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/resources/beta/skills/skills.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/resources/beta/skills/skills.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport * as BetaAPI from '../beta';\nimport * as VersionsAPI from './versions';\nimport {\n  VersionCreateParams,\n  VersionCreateResponse,\n  VersionDeleteParams,\n  VersionDeleteResponse,\n  VersionListParams,\n  VersionListResponse,\n  VersionListResponsesPageCursor,\n  VersionRetrieveParams,\n  VersionRetrieveResponse,\n  Versions,\n} from './versions';\nimport { APIPromise } from '../../../core/api-promise';\nimport { PageCursor, type PageCursorParams, PagePromise } from '../../../core/pagination';\nimport { type Uploadable } from '../../../core/uploads';\nimport { buildHeaders } from '../../../internal/headers';\nimport { RequestOptions } from '../../../internal/request-options';\nimport { multipartFormRequestOptions } from '../../../internal/uploads';\nimport { path } from '../../../internal/utils/path';\n\nexport class Skills extends APIResource {\n  versions: VersionsAPI.Versions = new VersionsAPI.Versions(this._client);\n\n  /**\n   * Create Skill\n   *\n   * @example\n   * ```ts\n   * const skill = await client.beta.skills.create();\n   * ```\n   */\n  create(\n    params: SkillCreateParams | null | undefined = {},\n    options?: RequestOptions,\n  ): APIPromise<SkillCreateResponse> {\n    const { betas, ...body } = params ?? {};\n    return this._client.post(\n      '/v1/skills?beta=true',\n      multipartFormRequestOptions(\n        {\n          body,\n          ...options,\n          headers: buildHeaders([\n            { 'anthropic-beta': [...(betas ?? []), 'skills-2025-10-02'].toString() },\n            options?.headers,\n          ]),\n        },\n        this._client,\n      ),\n    );\n  }\n\n  /**\n   * Get Skill\n   *\n   * @example\n   * ```ts\n   * const skill = await client.beta.skills.retrieve('skill_id');\n   * ```\n   */\n  retrieve(\n    skillID: string,\n    params: SkillRetrieveParams | null | undefined = {},\n    options?: RequestOptions,\n  ): APIPromise<SkillRetrieveResponse> {\n    const { betas } = params ?? {};\n    return this._client.get(path`/v1/skills/${skillID}?beta=true`, {\n      ...options,\n      headers: buildHeaders([\n        { 'anthropic-beta': [...(betas ?? []), 'skills-2025-10-02'].toString() },\n        options?.headers,\n      ]),\n    });\n  }\n\n  /**\n   * List Skills\n   *\n   * @example\n   * ```ts\n   * // Automatically fetches more pages as needed.\n   * for await (const skillListResponse of client.beta.skills.list()) {\n   *   // ...\n   * }\n   * ```\n   */\n  list(\n    params: SkillListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<SkillListResponsesPageCursor, SkillListResponse> {\n    const { betas, ...query } = params ?? {};\n    return this._client.getAPIList('/v1/skills?beta=true', PageCursor<SkillListResponse>, {\n      query,\n      ...options,\n      headers: buildHeaders([\n        { 'anthropic-beta': [...(betas ?? []), 'skills-2025-10-02'].toString() },\n        options?.headers,\n      ]),\n    });\n  }\n\n  /**\n   * Delete Skill\n   *\n   * @example\n   * ```ts\n   * const skill = await client.beta.skills.delete('skill_id');\n   * ```\n   */\n  delete(\n    skillID: string,\n    params: SkillDeleteParams | null | undefined = {},\n    options?: RequestOptions,\n  ): APIPromise<SkillDeleteResponse> {\n    const { betas } = params ?? {};\n    return this._client.delete(path`/v1/skills/${skillID}?beta=true`, {\n      ...options,\n      headers: buildHeaders([\n        { 'anthropic-beta': [...(betas ?? []), 'skills-2025-10-02'].toString() },\n        options?.headers,\n      ]),\n    });\n  }\n}\n\nexport type SkillListResponsesPageCursor = PageCursor<SkillListResponse>;\n\nexport interface SkillCreateResponse {\n  /**\n   * Unique identifier for the skill.\n   *\n   * The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * ISO 8601 timestamp of when the skill was created.\n   */\n  created_at: string;\n\n  /**\n   * Display title for the skill.\n   *\n   * This is a human-readable label that is not included in the prompt sent to the\n   * model.\n   */\n  display_title: string | null;\n\n  /**\n   * The latest version identifier for the skill.\n   *\n   * This represents the most recent version of the skill that has been created.\n   */\n  latest_version: string | null;\n\n  /**\n   * Source of the skill.\n   *\n   * This may be one of the following values:\n   *\n   * - `\"custom\"`: the skill was created by a user\n   * - `\"anthropic\"`: the skill was created by Anthropic\n   */\n  source: string;\n\n  /**\n   * Object type.\n   *\n   * For Skills, this is always `\"skill\"`.\n   */\n  type: string;\n\n  /**\n   * ISO 8601 timestamp of when the skill was last updated.\n   */\n  updated_at: string;\n}\n\nexport interface SkillRetrieveResponse {\n  /**\n   * Unique identifier for the skill.\n   *\n   * The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * ISO 8601 timestamp of when the skill was created.\n   */\n  created_at: string;\n\n  /**\n   * Display title for the skill.\n   *\n   * This is a human-readable label that is not included in the prompt sent to the\n   * model.\n   */\n  display_title: string | null;\n\n  /**\n   * The latest version identifier for the skill.\n   *\n   * This represents the most recent version of the skill that has been created.\n   */\n  latest_version: string | null;\n\n  /**\n   * Source of the skill.\n   *\n   * This may be one of the following values:\n   *\n   * - `\"custom\"`: the skill was created by a user\n   * - `\"anthropic\"`: the skill was created by Anthropic\n   */\n  source: string;\n\n  /**\n   * Object type.\n   *\n   * For Skills, this is always `\"skill\"`.\n   */\n  type: string;\n\n  /**\n   * ISO 8601 timestamp of when the skill was last updated.\n   */\n  updated_at: string;\n}\n\nexport interface SkillListResponse {\n  /**\n   * Unique identifier for the skill.\n   *\n   * The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * ISO 8601 timestamp of when the skill was created.\n   */\n  created_at: string;\n\n  /**\n   * Display title for the skill.\n   *\n   * This is a human-readable label that is not included in the prompt sent to the\n   * model.\n   */\n  display_title: string | null;\n\n  /**\n   * The latest version identifier for the skill.\n   *\n   * This represents the most recent version of the skill that has been created.\n   */\n  latest_version: string | null;\n\n  /**\n   * Source of the skill.\n   *\n   * This may be one of the following values:\n   *\n   * - `\"custom\"`: the skill was created by a user\n   * - `\"anthropic\"`: the skill was created by Anthropic\n   */\n  source: string;\n\n  /**\n   * Object type.\n   *\n   * For Skills, this is always `\"skill\"`.\n   */\n  type: string;\n\n  /**\n   * ISO 8601 timestamp of when the skill was last updated.\n   */\n  updated_at: string;\n}\n\nexport interface SkillDeleteResponse {\n  /**\n   * Unique identifier for the skill.\n   *\n   * The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * Deleted object type.\n   *\n   * For Skills, this is always `\"skill_deleted\"`.\n   */\n  type: string;\n}\n\nexport interface SkillCreateParams {\n  /**\n   * Body param: Display title for the skill.\n   *\n   * This is a human-readable label that is not included in the prompt sent to the\n   * model.\n   */\n  display_title?: string | null;\n\n  /**\n   * Body param: Files to upload for the skill.\n   *\n   * All files must be in the same top-level directory and must include a SKILL.md\n   * file at the root of that directory.\n   */\n  files?: Array<Uploadable> | null;\n\n  /**\n   * Header param: Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport interface SkillRetrieveParams {\n  /**\n   * Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport interface SkillListParams extends PageCursorParams {\n  /**\n   * Query param: Filter skills by source.\n   *\n   * If provided, only skills from the specified source will be returned:\n   *\n   * - `\"custom\"`: only return user-created skills\n   * - `\"anthropic\"`: only return Anthropic-created skills\n   */\n  source?: string | null;\n\n  /**\n   * Header param: Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport interface SkillDeleteParams {\n  /**\n   * Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nSkills.Versions = Versions;\n\nexport declare namespace Skills {\n  export {\n    type SkillCreateResponse as SkillCreateResponse,\n    type SkillRetrieveResponse as SkillRetrieveResponse,\n    type SkillListResponse as SkillListResponse,\n    type SkillDeleteResponse as SkillDeleteResponse,\n    type SkillListResponsesPageCursor as SkillListResponsesPageCursor,\n    type SkillCreateParams as SkillCreateParams,\n    type SkillRetrieveParams as SkillRetrieveParams,\n    type SkillListParams as SkillListParams,\n    type SkillDeleteParams as SkillDeleteParams,\n  };\n\n  export {\n    Versions as Versions,\n    type VersionCreateResponse as VersionCreateResponse,\n    type VersionRetrieveResponse as VersionRetrieveResponse,\n    type VersionListResponse as VersionListResponse,\n    type VersionDeleteResponse as VersionDeleteResponse,\n    type VersionListResponsesPageCursor as VersionListResponsesPageCursor,\n    type VersionCreateParams as VersionCreateParams,\n    type VersionRetrieveParams as VersionRetrieveParams,\n    type VersionListParams as VersionListParams,\n    type VersionDeleteParams as VersionDeleteParams,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3930, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/resources/beta/beta.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/resources/beta/beta.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as FilesAPI from './files';\nimport {\n  DeletedFile,\n  FileDeleteParams,\n  FileDownloadParams,\n  FileListParams,\n  FileMetadata,\n  FileMetadataPage,\n  FileRetrieveMetadataParams,\n  FileUploadParams,\n  Files,\n} from './files';\nimport * as ModelsAPI from './models';\nimport { BetaModelInfo, BetaModelInfosPage, ModelListParams, ModelRetrieveParams, Models } from './models';\nimport * as MessagesAPI from './messages/messages';\nimport {\n  BetaAllThinkingTurns,\n  BetaBase64ImageSource,\n  BetaBase64PDFBlock,\n  BetaBase64PDFSource,\n  BetaBashCodeExecutionOutputBlock,\n  BetaBashCodeExecutionOutputBlockParam,\n  BetaBashCodeExecutionResultBlock,\n  BetaBashCodeExecutionResultBlockParam,\n  BetaBashCodeExecutionToolResultBlock,\n  BetaBashCodeExecutionToolResultBlockParam,\n  BetaBashCodeExecutionToolResultError,\n  BetaBashCodeExecutionToolResultErrorParam,\n  BetaCacheControlEphemeral,\n  BetaCacheCreation,\n  BetaCitationCharLocation,\n  BetaCitationCharLocationParam,\n  BetaCitationConfig,\n  BetaCitationContentBlockLocation,\n  BetaCitationContentBlockLocationParam,\n  BetaCitationPageLocation,\n  BetaCitationPageLocationParam,\n  BetaCitationSearchResultLocation,\n  BetaCitationSearchResultLocationParam,\n  BetaCitationWebSearchResultLocationParam,\n  BetaCitationsConfigParam,\n  BetaCitationsDelta,\n  BetaCitationsWebSearchResultLocation,\n  BetaClearThinking20251015Edit,\n  BetaClearThinking20251015EditResponse,\n  BetaClearToolUses20250919Edit,\n  BetaClearToolUses20250919EditResponse,\n  BetaCodeExecutionOutputBlock,\n  BetaCodeExecutionOutputBlockParam,\n  BetaCodeExecutionResultBlock,\n  BetaCodeExecutionResultBlockParam,\n  BetaCodeExecutionTool20250522,\n  BetaCodeExecutionTool20250825,\n  BetaCodeExecutionToolResultBlock,\n  BetaCodeExecutionToolResultBlockContent,\n  BetaCodeExecutionToolResultBlockParam,\n  BetaCodeExecutionToolResultBlockParamContent,\n  BetaCodeExecutionToolResultError,\n  BetaCodeExecutionToolResultErrorCode,\n  BetaCodeExecutionToolResultErrorParam,\n  BetaContainer,\n  BetaContainerParams,\n  BetaContainerUploadBlock,\n  BetaContainerUploadBlockParam,\n  BetaContentBlock,\n  BetaContentBlockParam,\n  BetaContentBlockSource,\n  BetaContentBlockSourceContent,\n  BetaContextManagementConfig,\n  BetaContextManagementResponse,\n  BetaCountTokensContextManagementResponse,\n  BetaDocumentBlock,\n  BetaFileDocumentSource,\n  BetaFileImageSource,\n  BetaImageBlockParam,\n  BetaInputJSONDelta,\n  BetaInputTokensClearAtLeast,\n  BetaInputTokensTrigger,\n  BetaMCPToolResultBlock,\n  BetaMCPToolUseBlock,\n  BetaMCPToolUseBlockParam,\n  BetaMemoryTool20250818,\n  BetaMemoryTool20250818Command,\n  BetaMemoryTool20250818CreateCommand,\n  BetaMemoryTool20250818DeleteCommand,\n  BetaMemoryTool20250818InsertCommand,\n  BetaMemoryTool20250818RenameCommand,\n  BetaMemoryTool20250818StrReplaceCommand,\n  BetaMemoryTool20250818ViewCommand,\n  BetaMessage,\n  BetaMessageDeltaUsage,\n  BetaMessageParam,\n  BetaMessageTokensCount,\n  BetaMetadata,\n  BetaPlainTextSource,\n  BetaRawContentBlockDelta,\n  BetaRawContentBlockDeltaEvent,\n  BetaRawContentBlockStartEvent,\n  BetaRawContentBlockStopEvent,\n  BetaRawMessageDeltaEvent,\n  BetaRawMessageStartEvent,\n  BetaRawMessageStopEvent,\n  BetaRawMessageStreamEvent,\n  BetaRedactedThinkingBlock,\n  BetaRedactedThinkingBlockParam,\n  BetaRequestDocumentBlock,\n  BetaRequestMCPServerToolConfiguration,\n  BetaRequestMCPServerURLDefinition,\n  BetaRequestMCPToolResultBlockParam,\n  BetaSearchResultBlockParam,\n  BetaServerToolUsage,\n  BetaServerToolUseBlock,\n  BetaServerToolUseBlockParam,\n  BetaSignatureDelta,\n  BetaSkill,\n  BetaSkillParams,\n  BetaStopReason,\n  BetaTextBlock,\n  BetaTextBlockParam,\n  BetaTextCitation,\n  BetaTextCitationParam,\n  BetaTextDelta,\n  BetaTextEditorCodeExecutionCreateResultBlock,\n  BetaTextEditorCodeExecutionCreateResultBlockParam,\n  BetaTextEditorCodeExecutionStrReplaceResultBlock,\n  BetaTextEditorCodeExecutionStrReplaceResultBlockParam,\n  BetaTextEditorCodeExecutionToolResultBlock,\n  BetaTextEditorCodeExecutionToolResultBlockParam,\n  BetaTextEditorCodeExecutionToolResultError,\n  BetaTextEditorCodeExecutionToolResultErrorParam,\n  BetaTextEditorCodeExecutionViewResultBlock,\n  BetaTextEditorCodeExecutionViewResultBlockParam,\n  BetaThinkingBlock,\n  BetaThinkingBlockParam,\n  BetaThinkingConfigDisabled,\n  BetaThinkingConfigEnabled,\n  BetaThinkingConfigParam,\n  BetaThinkingDelta,\n  BetaThinkingTurns,\n  BetaTool,\n  BetaToolBash20241022,\n  BetaToolBash20250124,\n  BetaToolChoice,\n  BetaToolChoiceAny,\n  BetaToolChoiceAuto,\n  BetaToolChoiceNone,\n  BetaToolChoiceTool,\n  BetaToolComputerUse20241022,\n  BetaToolComputerUse20250124,\n  BetaToolResultBlockParam,\n  BetaToolResultContentBlockParam,\n  BetaToolTextEditor20241022,\n  BetaToolTextEditor20250124,\n  BetaToolTextEditor20250429,\n  BetaToolTextEditor20250728,\n  BetaToolUnion,\n  BetaToolUseBlock,\n  BetaToolUseBlockParam,\n  BetaToolUsesKeep,\n  BetaToolUsesTrigger,\n  BetaURLImageSource,\n  BetaURLPDFSource,\n  BetaUsage,\n  BetaWebFetchBlock,\n  BetaWebFetchBlockParam,\n  BetaWebFetchTool20250910,\n  BetaWebFetchToolResultBlock,\n  BetaWebFetchToolResultBlockParam,\n  BetaWebFetchToolResultErrorBlock,\n  BetaWebFetchToolResultErrorBlockParam,\n  BetaWebFetchToolResultErrorCode,\n  BetaWebSearchResultBlock,\n  BetaWebSearchResultBlockParam,\n  BetaWebSearchTool20250305,\n  BetaWebSearchToolRequestError,\n  BetaWebSearchToolResultBlock,\n  BetaWebSearchToolResultBlockContent,\n  BetaWebSearchToolResultBlockParam,\n  BetaWebSearchToolResultBlockParamContent,\n  BetaWebSearchToolResultError,\n  BetaWebSearchToolResultErrorCode,\n  MessageCountTokensParams,\n  MessageCreateParams,\n  MessageCreateParamsNonStreaming,\n  MessageCreateParamsStreaming,\n  Messages,\n} from './messages/messages';\nimport * as SkillsAPI from './skills/skills';\nimport {\n  SkillCreateParams,\n  SkillCreateResponse,\n  SkillDeleteParams,\n  SkillDeleteResponse,\n  SkillListParams,\n  SkillListResponse,\n  SkillListResponsesPageCursor,\n  SkillRetrieveParams,\n  SkillRetrieveResponse,\n  Skills,\n} from './skills/skills';\n\nexport class Beta extends APIResource {\n  models: ModelsAPI.Models = new ModelsAPI.Models(this._client);\n  messages: MessagesAPI.Messages = new MessagesAPI.Messages(this._client);\n  files: FilesAPI.Files = new FilesAPI.Files(this._client);\n  skills: SkillsAPI.Skills = new SkillsAPI.Skills(this._client);\n}\n\nexport type AnthropicBeta =\n  | (string & {})\n  | 'message-batches-2024-09-24'\n  | 'prompt-caching-2024-07-31'\n  | 'computer-use-2024-10-22'\n  | 'computer-use-2025-01-24'\n  | 'pdfs-2024-09-25'\n  | 'token-counting-2024-11-01'\n  | 'token-efficient-tools-2025-02-19'\n  | 'output-128k-2025-02-19'\n  | 'files-api-2025-04-14'\n  | 'mcp-client-2025-04-04'\n  | 'dev-full-thinking-2025-05-14'\n  | 'interleaved-thinking-2025-05-14'\n  | 'code-execution-2025-05-22'\n  | 'extended-cache-ttl-2025-04-11'\n  | 'context-1m-2025-08-07'\n  | 'context-management-2025-06-27'\n  | 'model-context-window-exceeded-2025-08-26'\n  | 'skills-2025-10-02';\n\nexport interface BetaAPIError {\n  message: string;\n\n  type: 'api_error';\n}\n\nexport interface BetaAuthenticationError {\n  message: string;\n\n  type: 'authentication_error';\n}\n\nexport interface BetaBillingError {\n  message: string;\n\n  type: 'billing_error';\n}\n\nexport type BetaError =\n  | BetaInvalidRequestError\n  | BetaAuthenticationError\n  | BetaBillingError\n  | BetaPermissionError\n  | BetaNotFoundError\n  | BetaRateLimitError\n  | BetaGatewayTimeoutError\n  | BetaAPIError\n  | BetaOverloadedError;\n\nexport interface BetaErrorResponse {\n  error: BetaError;\n\n  request_id: string | null;\n\n  type: 'error';\n}\n\nexport interface BetaGatewayTimeoutError {\n  message: string;\n\n  type: 'timeout_error';\n}\n\nexport interface BetaInvalidRequestError {\n  message: string;\n\n  type: 'invalid_request_error';\n}\n\nexport interface BetaNotFoundError {\n  message: string;\n\n  type: 'not_found_error';\n}\n\nexport interface BetaOverloadedError {\n  message: string;\n\n  type: 'overloaded_error';\n}\n\nexport interface BetaPermissionError {\n  message: string;\n\n  type: 'permission_error';\n}\n\nexport interface BetaRateLimitError {\n  message: string;\n\n  type: 'rate_limit_error';\n}\n\nBeta.Models = Models;\nBeta.Messages = Messages;\nBeta.Files = Files;\nBeta.Skills = Skills;\n\nexport declare namespace Beta {\n  export {\n    type AnthropicBeta as AnthropicBeta,\n    type BetaAPIError as BetaAPIError,\n    type BetaAuthenticationError as BetaAuthenticationError,\n    type BetaBillingError as BetaBillingError,\n    type BetaError as BetaError,\n    type BetaErrorResponse as BetaErrorResponse,\n    type BetaGatewayTimeoutError as BetaGatewayTimeoutError,\n    type BetaInvalidRequestError as BetaInvalidRequestError,\n    type BetaNotFoundError as BetaNotFoundError,\n    type BetaOverloadedError as BetaOverloadedError,\n    type BetaPermissionError as BetaPermissionError,\n    type BetaRateLimitError as BetaRateLimitError,\n  };\n\n  export {\n    Models as Models,\n    type BetaModelInfo as BetaModelInfo,\n    type BetaModelInfosPage as BetaModelInfosPage,\n    type ModelRetrieveParams as ModelRetrieveParams,\n    type ModelListParams as ModelListParams,\n  };\n\n  export {\n    Messages as Messages,\n    type BetaAllThinkingTurns as BetaAllThinkingTurns,\n    type BetaBase64ImageSource as BetaBase64ImageSource,\n    type BetaBase64PDFSource as BetaBase64PDFSource,\n    type BetaBashCodeExecutionOutputBlock as BetaBashCodeExecutionOutputBlock,\n    type BetaBashCodeExecutionOutputBlockParam as BetaBashCodeExecutionOutputBlockParam,\n    type BetaBashCodeExecutionResultBlock as BetaBashCodeExecutionResultBlock,\n    type BetaBashCodeExecutionResultBlockParam as BetaBashCodeExecutionResultBlockParam,\n    type BetaBashCodeExecutionToolResultBlock as BetaBashCodeExecutionToolResultBlock,\n    type BetaBashCodeExecutionToolResultBlockParam as BetaBashCodeExecutionToolResultBlockParam,\n    type BetaBashCodeExecutionToolResultError as BetaBashCodeExecutionToolResultError,\n    type BetaBashCodeExecutionToolResultErrorParam as BetaBashCodeExecutionToolResultErrorParam,\n    type BetaCacheControlEphemeral as BetaCacheControlEphemeral,\n    type BetaCacheCreation as BetaCacheCreation,\n    type BetaCitationCharLocation as BetaCitationCharLocation,\n    type BetaCitationCharLocationParam as BetaCitationCharLocationParam,\n    type BetaCitationConfig as BetaCitationConfig,\n    type BetaCitationContentBlockLocation as BetaCitationContentBlockLocation,\n    type BetaCitationContentBlockLocationParam as BetaCitationContentBlockLocationParam,\n    type BetaCitationPageLocation as BetaCitationPageLocation,\n    type BetaCitationPageLocationParam as BetaCitationPageLocationParam,\n    type BetaCitationSearchResultLocation as BetaCitationSearchResultLocation,\n    type BetaCitationSearchResultLocationParam as BetaCitationSearchResultLocationParam,\n    type BetaCitationWebSearchResultLocationParam as BetaCitationWebSearchResultLocationParam,\n    type BetaCitationsConfigParam as BetaCitationsConfigParam,\n    type BetaCitationsDelta as BetaCitationsDelta,\n    type BetaCitationsWebSearchResultLocation as BetaCitationsWebSearchResultLocation,\n    type BetaClearThinking20251015Edit as BetaClearThinking20251015Edit,\n    type BetaClearThinking20251015EditResponse as BetaClearThinking20251015EditResponse,\n    type BetaClearToolUses20250919Edit as BetaClearToolUses20250919Edit,\n    type BetaClearToolUses20250919EditResponse as BetaClearToolUses20250919EditResponse,\n    type BetaCodeExecutionOutputBlock as BetaCodeExecutionOutputBlock,\n    type BetaCodeExecutionOutputBlockParam as BetaCodeExecutionOutputBlockParam,\n    type BetaCodeExecutionResultBlock as BetaCodeExecutionResultBlock,\n    type BetaCodeExecutionResultBlockParam as BetaCodeExecutionResultBlockParam,\n    type BetaCodeExecutionTool20250522 as BetaCodeExecutionTool20250522,\n    type BetaCodeExecutionTool20250825 as BetaCodeExecutionTool20250825,\n    type BetaCodeExecutionToolResultBlock as BetaCodeExecutionToolResultBlock,\n    type BetaCodeExecutionToolResultBlockContent as BetaCodeExecutionToolResultBlockContent,\n    type BetaCodeExecutionToolResultBlockParam as BetaCodeExecutionToolResultBlockParam,\n    type BetaCodeExecutionToolResultBlockParamContent as BetaCodeExecutionToolResultBlockParamContent,\n    type BetaCodeExecutionToolResultError as BetaCodeExecutionToolResultError,\n    type BetaCodeExecutionToolResultErrorCode as BetaCodeExecutionToolResultErrorCode,\n    type BetaCodeExecutionToolResultErrorParam as BetaCodeExecutionToolResultErrorParam,\n    type BetaContainer as BetaContainer,\n    type BetaContainerParams as BetaContainerParams,\n    type BetaContainerUploadBlock as BetaContainerUploadBlock,\n    type BetaContainerUploadBlockParam as BetaContainerUploadBlockParam,\n    type BetaContentBlock as BetaContentBlock,\n    type BetaContentBlockParam as BetaContentBlockParam,\n    type BetaContentBlockSource as BetaContentBlockSource,\n    type BetaContentBlockSourceContent as BetaContentBlockSourceContent,\n    type BetaContextManagementConfig as BetaContextManagementConfig,\n    type BetaContextManagementResponse as BetaContextManagementResponse,\n    type BetaCountTokensContextManagementResponse as BetaCountTokensContextManagementResponse,\n    type BetaDocumentBlock as BetaDocumentBlock,\n    type BetaFileDocumentSource as BetaFileDocumentSource,\n    type BetaFileImageSource as BetaFileImageSource,\n    type BetaImageBlockParam as BetaImageBlockParam,\n    type BetaInputJSONDelta as BetaInputJSONDelta,\n    type BetaInputTokensClearAtLeast as BetaInputTokensClearAtLeast,\n    type BetaInputTokensTrigger as BetaInputTokensTrigger,\n    type BetaMCPToolResultBlock as BetaMCPToolResultBlock,\n    type BetaMCPToolUseBlock as BetaMCPToolUseBlock,\n    type BetaMCPToolUseBlockParam as BetaMCPToolUseBlockParam,\n    type BetaMemoryTool20250818 as BetaMemoryTool20250818,\n    type BetaMemoryTool20250818Command as BetaMemoryTool20250818Command,\n    type BetaMemoryTool20250818CreateCommand as BetaMemoryTool20250818CreateCommand,\n    type BetaMemoryTool20250818DeleteCommand as BetaMemoryTool20250818DeleteCommand,\n    type BetaMemoryTool20250818InsertCommand as BetaMemoryTool20250818InsertCommand,\n    type BetaMemoryTool20250818RenameCommand as BetaMemoryTool20250818RenameCommand,\n    type BetaMemoryTool20250818StrReplaceCommand as BetaMemoryTool20250818StrReplaceCommand,\n    type BetaMemoryTool20250818ViewCommand as BetaMemoryTool20250818ViewCommand,\n    type BetaMessage as BetaMessage,\n    type BetaMessageDeltaUsage as BetaMessageDeltaUsage,\n    type BetaMessageParam as BetaMessageParam,\n    type BetaMessageTokensCount as BetaMessageTokensCount,\n    type BetaMetadata as BetaMetadata,\n    type BetaPlainTextSource as BetaPlainTextSource,\n    type BetaRawContentBlockDelta as BetaRawContentBlockDelta,\n    type BetaRawContentBlockDeltaEvent as BetaRawContentBlockDeltaEvent,\n    type BetaRawContentBlockStartEvent as BetaRawContentBlockStartEvent,\n    type BetaRawContentBlockStopEvent as BetaRawContentBlockStopEvent,\n    type BetaRawMessageDeltaEvent as BetaRawMessageDeltaEvent,\n    type BetaRawMessageStartEvent as BetaRawMessageStartEvent,\n    type BetaRawMessageStopEvent as BetaRawMessageStopEvent,\n    type BetaRawMessageStreamEvent as BetaRawMessageStreamEvent,\n    type BetaRedactedThinkingBlock as BetaRedactedThinkingBlock,\n    type BetaRedactedThinkingBlockParam as BetaRedactedThinkingBlockParam,\n    type BetaRequestDocumentBlock as BetaRequestDocumentBlock,\n    type BetaRequestMCPServerToolConfiguration as BetaRequestMCPServerToolConfiguration,\n    type BetaRequestMCPServerURLDefinition as BetaRequestMCPServerURLDefinition,\n    type BetaRequestMCPToolResultBlockParam as BetaRequestMCPToolResultBlockParam,\n    type BetaSearchResultBlockParam as BetaSearchResultBlockParam,\n    type BetaServerToolUsage as BetaServerToolUsage,\n    type BetaServerToolUseBlock as BetaServerToolUseBlock,\n    type BetaServerToolUseBlockParam as BetaServerToolUseBlockParam,\n    type BetaSignatureDelta as BetaSignatureDelta,\n    type BetaSkill as BetaSkill,\n    type BetaSkillParams as BetaSkillParams,\n    type BetaStopReason as BetaStopReason,\n    type BetaTextBlock as BetaTextBlock,\n    type BetaTextBlockParam as BetaTextBlockParam,\n    type BetaTextCitation as BetaTextCitation,\n    type BetaTextCitationParam as BetaTextCitationParam,\n    type BetaTextDelta as BetaTextDelta,\n    type BetaTextEditorCodeExecutionCreateResultBlock as BetaTextEditorCodeExecutionCreateResultBlock,\n    type BetaTextEditorCodeExecutionCreateResultBlockParam as BetaTextEditorCodeExecutionCreateResultBlockParam,\n    type BetaTextEditorCodeExecutionStrReplaceResultBlock as BetaTextEditorCodeExecutionStrReplaceResultBlock,\n    type BetaTextEditorCodeExecutionStrReplaceResultBlockParam as BetaTextEditorCodeExecutionStrReplaceResultBlockParam,\n    type BetaTextEditorCodeExecutionToolResultBlock as BetaTextEditorCodeExecutionToolResultBlock,\n    type BetaTextEditorCodeExecutionToolResultBlockParam as BetaTextEditorCodeExecutionToolResultBlockParam,\n    type BetaTextEditorCodeExecutionToolResultError as BetaTextEditorCodeExecutionToolResultError,\n    type BetaTextEditorCodeExecutionToolResultErrorParam as BetaTextEditorCodeExecutionToolResultErrorParam,\n    type BetaTextEditorCodeExecutionViewResultBlock as BetaTextEditorCodeExecutionViewResultBlock,\n    type BetaTextEditorCodeExecutionViewResultBlockParam as BetaTextEditorCodeExecutionViewResultBlockParam,\n    type BetaThinkingBlock as BetaThinkingBlock,\n    type BetaThinkingBlockParam as BetaThinkingBlockParam,\n    type BetaThinkingConfigDisabled as BetaThinkingConfigDisabled,\n    type BetaThinkingConfigEnabled as BetaThinkingConfigEnabled,\n    type BetaThinkingConfigParam as BetaThinkingConfigParam,\n    type BetaThinkingDelta as BetaThinkingDelta,\n    type BetaThinkingTurns as BetaThinkingTurns,\n    type BetaTool as BetaTool,\n    type BetaToolBash20241022 as BetaToolBash20241022,\n    type BetaToolBash20250124 as BetaToolBash20250124,\n    type BetaToolChoice as BetaToolChoice,\n    type BetaToolChoiceAny as BetaToolChoiceAny,\n    type BetaToolChoiceAuto as BetaToolChoiceAuto,\n    type BetaToolChoiceNone as BetaToolChoiceNone,\n    type BetaToolChoiceTool as BetaToolChoiceTool,\n    type BetaToolComputerUse20241022 as BetaToolComputerUse20241022,\n    type BetaToolComputerUse20250124 as BetaToolComputerUse20250124,\n    type BetaToolResultBlockParam as BetaToolResultBlockParam,\n    type BetaToolResultContentBlockParam as BetaToolResultContentBlockParam,\n    type BetaToolTextEditor20241022 as BetaToolTextEditor20241022,\n    type BetaToolTextEditor20250124 as BetaToolTextEditor20250124,\n    type BetaToolTextEditor20250429 as BetaToolTextEditor20250429,\n    type BetaToolTextEditor20250728 as BetaToolTextEditor20250728,\n    type BetaToolUnion as BetaToolUnion,\n    type BetaToolUseBlock as BetaToolUseBlock,\n    type BetaToolUseBlockParam as BetaToolUseBlockParam,\n    type BetaToolUsesKeep as BetaToolUsesKeep,\n    type BetaToolUsesTrigger as BetaToolUsesTrigger,\n    type BetaURLImageSource as BetaURLImageSource,\n    type BetaURLPDFSource as BetaURLPDFSource,\n    type BetaUsage as BetaUsage,\n    type BetaWebFetchBlock as BetaWebFetchBlock,\n    type BetaWebFetchBlockParam as BetaWebFetchBlockParam,\n    type BetaWebFetchTool20250910 as BetaWebFetchTool20250910,\n    type BetaWebFetchToolResultBlock as BetaWebFetchToolResultBlock,\n    type BetaWebFetchToolResultBlockParam as BetaWebFetchToolResultBlockParam,\n    type BetaWebFetchToolResultErrorBlock as BetaWebFetchToolResultErrorBlock,\n    type BetaWebFetchToolResultErrorBlockParam as BetaWebFetchToolResultErrorBlockParam,\n    type BetaWebFetchToolResultErrorCode as BetaWebFetchToolResultErrorCode,\n    type BetaWebSearchResultBlock as BetaWebSearchResultBlock,\n    type BetaWebSearchResultBlockParam as BetaWebSearchResultBlockParam,\n    type BetaWebSearchTool20250305 as BetaWebSearchTool20250305,\n    type BetaWebSearchToolRequestError as BetaWebSearchToolRequestError,\n    type BetaWebSearchToolResultBlock as BetaWebSearchToolResultBlock,\n    type BetaWebSearchToolResultBlockContent as BetaWebSearchToolResultBlockContent,\n    type BetaWebSearchToolResultBlockParam as BetaWebSearchToolResultBlockParam,\n    type BetaWebSearchToolResultBlockParamContent as BetaWebSearchToolResultBlockParamContent,\n    type BetaWebSearchToolResultError as BetaWebSearchToolResultError,\n    type BetaWebSearchToolResultErrorCode as BetaWebSearchToolResultErrorCode,\n    type BetaBase64PDFBlock as BetaBase64PDFBlock,\n    type MessageCreateParams as MessageCreateParams,\n    type MessageCreateParamsNonStreaming as MessageCreateParamsNonStreaming,\n    type MessageCreateParamsStreaming as MessageCreateParamsStreaming,\n    type MessageCountTokensParams as MessageCountTokensParams,\n  };\n\n  export {\n    Files as Files,\n    type DeletedFile as DeletedFile,\n    type FileMetadata as FileMetadata,\n    type FileMetadataPage as FileMetadataPage,\n    type FileListParams as FileListParams,\n    type FileDeleteParams as FileDeleteParams,\n    type FileDownloadParams as FileDownloadParams,\n    type FileRetrieveMetadataParams as FileRetrieveMetadataParams,\n    type FileUploadParams as FileUploadParams,\n  };\n\n  export {\n    Skills as Skills,\n    type SkillCreateResponse as SkillCreateResponse,\n    type SkillRetrieveResponse as SkillRetrieveResponse,\n    type SkillListResponse as SkillListResponse,\n    type SkillDeleteResponse as SkillDeleteResponse,\n    type SkillListResponsesPageCursor as SkillListResponsesPageCursor,\n    type SkillCreateParams as SkillCreateParams,\n    type SkillRetrieveParams as SkillRetrieveParams,\n    type SkillListParams as SkillListParams,\n    type SkillDeleteParams as SkillDeleteParams,\n  };\n}\n"],"names":[],"mappings":"AAAA,sFAAsF;;;;;OAE/E,EAAE,WAAW,EAAE;OACf,KAAK,QAAQ;OAYb,KAAK,SAAS;OAEd,KAAK,WAAW;OA6KhB,KAAK,SAAS;;;;;;;;;;AAcf,MAAO,IAAK,SAAQ,8KAAW;IAArC,aAAA;;QACE,IAAA,CAAA,MAAM,GAAqB,IAAI,SAAS,CAAC,0KAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9D,IAAA,CAAA,QAAQ,GAAyB,IAAI,WAAW,CAAC,wMAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACxE,IAAA,CAAA,KAAK,GAAmB,IAAI,QAAQ,CAAC,yKAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzD,IAAA,CAAA,MAAM,GAAqB,IAAI,SAAS,CAAC,oLAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChE,CAAC;CAAA;AAgGD,IAAI,CAAC,MAAM,GAAG,oLAAM,CAAC;AACrB,IAAI,CAAC,QAAQ,GAAG,oNAAQ,CAAC;AACzB,IAAI,CAAC,KAAK,GAAG,kLAAK,CAAC;AACnB,IAAI,CAAC,MAAM,GAAG,8LAAM,CAAC","debugId":null}},
    {"offset": {"line": 3966, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/resources/completions.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/resources/completions.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../core/resource';\nimport * as CompletionsAPI from './completions';\nimport * as BetaAPI from './beta/beta';\nimport * as MessagesAPI from './messages/messages';\nimport { APIPromise } from '../core/api-promise';\nimport { Stream } from '../core/streaming';\nimport { buildHeaders } from '../internal/headers';\nimport { RequestOptions } from '../internal/request-options';\n\nexport class Completions extends APIResource {\n  /**\n   * [Legacy] Create a Text Completion.\n   *\n   * The Text Completions API is a legacy API. We recommend using the\n   * [Messages API](https://docs.claude.com/en/api/messages) going forward.\n   *\n   * Future models and features will not be compatible with Text Completions. See our\n   * [migration guide](https://docs.claude.com/en/api/migrating-from-text-completions-to-messages)\n   * for guidance in migrating from Text Completions to Messages.\n   *\n   * @example\n   * ```ts\n   * const completion = await client.completions.create({\n   *   max_tokens_to_sample: 256,\n   *   model: 'claude-sonnet-4-5',\n   *   prompt: '\\n\\nHuman: Hello, world!\\n\\nAssistant:',\n   * });\n   * ```\n   */\n  create(params: CompletionCreateParamsNonStreaming, options?: RequestOptions): APIPromise<Completion>;\n  create(params: CompletionCreateParamsStreaming, options?: RequestOptions): APIPromise<Stream<Completion>>;\n  create(\n    params: CompletionCreateParamsBase,\n    options?: RequestOptions,\n  ): APIPromise<Stream<Completion> | Completion>;\n  create(\n    params: CompletionCreateParams,\n    options?: RequestOptions,\n  ): APIPromise<Completion> | APIPromise<Stream<Completion>> {\n    const { betas, ...body } = params;\n    return this._client.post('/v1/complete', {\n      body,\n      timeout: (this._client as any)._options.timeout ?? 600000,\n      ...options,\n      headers: buildHeaders([\n        { ...(betas?.toString() != null ? { 'anthropic-beta': betas?.toString() } : undefined) },\n        options?.headers,\n      ]),\n      stream: params.stream ?? false,\n    }) as APIPromise<Completion> | APIPromise<Stream<Completion>>;\n  }\n}\n\nexport interface Completion {\n  /**\n   * Unique object identifier.\n   *\n   * The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * The resulting completion up to and excluding the stop sequences.\n   */\n  completion: string;\n\n  /**\n   * The model that will complete your prompt.\\n\\nSee\n   * [models](https://docs.anthropic.com/en/docs/models-overview) for additional\n   * details and options.\n   */\n  model: MessagesAPI.Model;\n\n  /**\n   * The reason that we stopped.\n   *\n   * This may be one the following values:\n   *\n   * - `\"stop_sequence\"`: we reached a stop sequence — either provided by you via the\n   *   `stop_sequences` parameter, or a stop sequence built into the model\n   * - `\"max_tokens\"`: we exceeded `max_tokens_to_sample` or the model's maximum\n   */\n  stop_reason: string | null;\n\n  /**\n   * Object type.\n   *\n   * For Text Completions, this is always `\"completion\"`.\n   */\n  type: 'completion';\n}\n\nexport type CompletionCreateParams = CompletionCreateParamsNonStreaming | CompletionCreateParamsStreaming;\n\nexport interface CompletionCreateParamsBase {\n  /**\n   * Body param: The maximum number of tokens to generate before stopping.\n   *\n   * Note that our models may stop _before_ reaching this maximum. This parameter\n   * only specifies the absolute maximum number of tokens to generate.\n   */\n  max_tokens_to_sample: number;\n\n  /**\n   * Body param: The model that will complete your prompt.\\n\\nSee\n   * [models](https://docs.anthropic.com/en/docs/models-overview) for additional\n   * details and options.\n   */\n  model: MessagesAPI.Model;\n\n  /**\n   * Body param: The prompt that you want Claude to complete.\n   *\n   * For proper response generation you will need to format your prompt using\n   * alternating `\\n\\nHuman:` and `\\n\\nAssistant:` conversational turns. For example:\n   *\n   * ```\n   * \"\\n\\nHuman: {userQuestion}\\n\\nAssistant:\"\n   * ```\n   *\n   * See [prompt validation](https://docs.claude.com/en/api/prompt-validation) and\n   * our guide to [prompt design](https://docs.claude.com/en/docs/intro-to-prompting)\n   * for more details.\n   */\n  prompt: string;\n\n  /**\n   * Body param: An object describing metadata about the request.\n   */\n  metadata?: MessagesAPI.Metadata;\n\n  /**\n   * Body param: Sequences that will cause the model to stop generating.\n   *\n   * Our models stop on `\"\\n\\nHuman:\"`, and may include additional built-in stop\n   * sequences in the future. By providing the stop_sequences parameter, you may\n   * include additional strings that will cause the model to stop generating.\n   */\n  stop_sequences?: Array<string>;\n\n  /**\n   * Body param: Whether to incrementally stream the response using server-sent\n   * events.\n   *\n   * See [streaming](https://docs.claude.com/en/api/streaming) for details.\n   */\n  stream?: boolean;\n\n  /**\n   * Body param: Amount of randomness injected into the response.\n   *\n   * Defaults to `1.0`. Ranges from `0.0` to `1.0`. Use `temperature` closer to `0.0`\n   * for analytical / multiple choice, and closer to `1.0` for creative and\n   * generative tasks.\n   *\n   * Note that even with `temperature` of `0.0`, the results will not be fully\n   * deterministic.\n   */\n  temperature?: number;\n\n  /**\n   * Body param: Only sample from the top K options for each subsequent token.\n   *\n   * Used to remove \"long tail\" low probability responses.\n   * [Learn more technical details here](https://towardsdatascience.com/how-to-sample-from-language-models-682bceb97277).\n   *\n   * Recommended for advanced use cases only. You usually only need to use\n   * `temperature`.\n   */\n  top_k?: number;\n\n  /**\n   * Body param: Use nucleus sampling.\n   *\n   * In nucleus sampling, we compute the cumulative distribution over all the options\n   * for each subsequent token in decreasing probability order and cut it off once it\n   * reaches a particular probability specified by `top_p`. You should either alter\n   * `temperature` or `top_p`, but not both.\n   *\n   * Recommended for advanced use cases only. You usually only need to use\n   * `temperature`.\n   */\n  top_p?: number;\n\n  /**\n   * Header param: Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport namespace CompletionCreateParams {\n  /**\n   * @deprecated use `Anthropic.Messages.Metadata` instead\n   */\n  export type Metadata = MessagesAPI.Metadata;\n\n  export type CompletionCreateParamsNonStreaming = CompletionsAPI.CompletionCreateParamsNonStreaming;\n  export type CompletionCreateParamsStreaming = CompletionsAPI.CompletionCreateParamsStreaming;\n}\n\nexport interface CompletionCreateParamsNonStreaming extends CompletionCreateParamsBase {\n  /**\n   * Body param: Whether to incrementally stream the response using server-sent\n   * events.\n   *\n   * See [streaming](https://docs.claude.com/en/api/streaming) for details.\n   */\n  stream?: false;\n}\n\nexport interface CompletionCreateParamsStreaming extends CompletionCreateParamsBase {\n  /**\n   * Body param: Whether to incrementally stream the response using server-sent\n   * events.\n   *\n   * See [streaming](https://docs.claude.com/en/api/streaming) for details.\n   */\n  stream: true;\n}\n\nexport declare namespace Completions {\n  export {\n    type Completion as Completion,\n    type CompletionCreateParams as CompletionCreateParams,\n    type CompletionCreateParamsNonStreaming as CompletionCreateParamsNonStreaming,\n    type CompletionCreateParamsStreaming as CompletionCreateParamsStreaming,\n  };\n}\n"],"names":[],"mappings":"AAAA,sFAAsF;;;;;OAE/E,EAAE,WAAW,EAAE;OAMf,EAAE,YAAY,EAAE;;;AAGjB,MAAO,WAAY,SAAQ,8KAAW;IA0B1C,MAAM,CACJ,MAA8B,EAC9B,OAAwB,EAAA;QAExB,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,EAAE,GAAG,MAAM,CAAC;QAClC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE;YACvC,IAAI;YACJ,OAAO,EAAG,IAAI,CAAC,OAAe,CAAC,QAAQ,CAAC,OAAO,IAAI,MAAM;YACzD,GAAG,OAAO;YACV,OAAO,MAAE,kLAAY,EAAC;gBACpB;oBAAE,GAAG,AAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;wBAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE;oBAAA,CAAE,CAAC,CAAC,CAAC,SAAS,CAAC;gBAAA,CAAE;gBACxF,OAAO,EAAE,OAAO;aACjB,CAAC;YACF,MAAM,EAAE,MAAM,CAAC,MAAM,IAAI,KAAK;SAC/B,CAA4D,CAAC;IAChE,CAAC;CACF","debugId":null}},
    {"offset": {"line": 3998, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/lib/MessageStream.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/lib/MessageStream.ts"],"sourcesContent":["import { isAbortError } from '../internal/errors';\nimport { AnthropicError, APIUserAbortError } from '../error';\nimport {\n  type ContentBlock,\n  Messages,\n  type Message,\n  type MessageStreamEvent,\n  type MessageParam,\n  type MessageCreateParams,\n  type MessageCreateParamsBase,\n  type TextBlock,\n  type TextCitation,\n  type ToolUseBlock,\n  type ServerToolUseBlock,\n} from '../resources/messages';\nimport { Stream } from '../streaming';\nimport { partialParse } from '../_vendor/partial-json-parser/parser';\nimport { RequestOptions } from '../internal/request-options';\n\nexport interface MessageStreamEvents {\n  connect: () => void;\n  streamEvent: (event: MessageStreamEvent, snapshot: Message) => void;\n  text: (textDelta: string, textSnapshot: string) => void;\n  citation: (citation: TextCitation, citationsSnapshot: TextCitation[]) => void;\n  inputJson: (partialJson: string, jsonSnapshot: unknown) => void;\n  thinking: (thinkingDelta: string, thinkingSnapshot: string) => void;\n  signature: (signature: string) => void;\n  message: (message: Message) => void;\n  contentBlock: (content: ContentBlock) => void;\n  finalMessage: (message: Message) => void;\n  error: (error: AnthropicError) => void;\n  abort: (error: APIUserAbortError) => void;\n  end: () => void;\n}\n\ntype MessageStreamEventListeners<Event extends keyof MessageStreamEvents> = {\n  listener: MessageStreamEvents[Event];\n  once?: boolean;\n}[];\n\nconst JSON_BUF_PROPERTY = '__json_buf';\n\nexport type TracksToolInput = ToolUseBlock | ServerToolUseBlock;\n\nfunction tracksToolInput(content: ContentBlock): content is TracksToolInput {\n  return content.type === 'tool_use' || content.type === 'server_tool_use';\n}\n\nexport class MessageStream implements AsyncIterable<MessageStreamEvent> {\n  messages: MessageParam[] = [];\n  receivedMessages: Message[] = [];\n  #currentMessageSnapshot: Message | undefined;\n\n  controller: AbortController = new AbortController();\n\n  #connectedPromise: Promise<Response | null>;\n  #resolveConnectedPromise: (response: Response | null) => void = () => {};\n  #rejectConnectedPromise: (error: AnthropicError) => void = () => {};\n\n  #endPromise: Promise<void>;\n  #resolveEndPromise: () => void = () => {};\n  #rejectEndPromise: (error: AnthropicError) => void = () => {};\n\n  #listeners: { [Event in keyof MessageStreamEvents]?: MessageStreamEventListeners<Event> } = {};\n\n  #ended = false;\n  #errored = false;\n  #aborted = false;\n  #catchingPromiseCreated = false;\n  #response: Response | null | undefined;\n  #request_id: string | null | undefined;\n\n  constructor() {\n    this.#connectedPromise = new Promise<Response | null>((resolve, reject) => {\n      this.#resolveConnectedPromise = resolve;\n      this.#rejectConnectedPromise = reject;\n    });\n\n    this.#endPromise = new Promise<void>((resolve, reject) => {\n      this.#resolveEndPromise = resolve;\n      this.#rejectEndPromise = reject;\n    });\n\n    // Don't let these promises cause unhandled rejection errors.\n    // we will manually cause an unhandled rejection error later\n    // if the user hasn't registered any error listener or called\n    // any promise-returning method.\n    this.#connectedPromise.catch(() => {});\n    this.#endPromise.catch(() => {});\n  }\n\n  get response(): Response | null | undefined {\n    return this.#response;\n  }\n\n  get request_id(): string | null | undefined {\n    return this.#request_id;\n  }\n\n  /**\n   * Returns the `MessageStream` data, the raw `Response` instance and the ID of the request,\n   * returned vie the `request-id` header which is useful for debugging requests and resporting\n   * issues to Anthropic.\n   *\n   * This is the same as the `APIPromise.withResponse()` method.\n   *\n   * This method will raise an error if you created the stream using `MessageStream.fromReadableStream`\n   * as no `Response` is available.\n   */\n  async withResponse(): Promise<{\n    data: MessageStream;\n    response: Response;\n    request_id: string | null | undefined;\n  }> {\n    const response = await this.#connectedPromise;\n    if (!response) {\n      throw new Error('Could not resolve a `Response` object');\n    }\n\n    return {\n      data: this,\n      response,\n      request_id: response.headers.get('request-id'),\n    };\n  }\n\n  /**\n   * Intended for use on the frontend, consuming a stream produced with\n   * `.toReadableStream()` on the backend.\n   *\n   * Note that messages sent to the model do not appear in `.on('message')`\n   * in this context.\n   */\n  static fromReadableStream(stream: ReadableStream): MessageStream {\n    const runner = new MessageStream();\n    runner._run(() => runner._fromReadableStream(stream));\n    return runner;\n  }\n\n  static createMessage(\n    messages: Messages,\n    params: MessageCreateParamsBase,\n    options?: RequestOptions,\n  ): MessageStream {\n    const runner = new MessageStream();\n    for (const message of params.messages) {\n      runner._addMessageParam(message);\n    }\n    runner._run(() =>\n      runner._createMessage(\n        messages,\n        { ...params, stream: true },\n        { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } },\n      ),\n    );\n    return runner;\n  }\n\n  protected _run(executor: () => Promise<any>) {\n    executor().then(() => {\n      this._emitFinal();\n      this._emit('end');\n    }, this.#handleError);\n  }\n\n  protected _addMessageParam(message: MessageParam) {\n    this.messages.push(message);\n  }\n\n  protected _addMessage(message: Message, emit = true) {\n    this.receivedMessages.push(message);\n    if (emit) {\n      this._emit('message', message);\n    }\n  }\n\n  protected async _createMessage(\n    messages: Messages,\n    params: MessageCreateParams,\n    options?: RequestOptions,\n  ): Promise<void> {\n    const signal = options?.signal;\n    let abortHandler: (() => void) | undefined;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      abortHandler = this.controller.abort.bind(this.controller);\n      signal.addEventListener('abort', abortHandler);\n    }\n    try {\n      this.#beginRequest();\n      const { response, data: stream } = await messages\n        .create({ ...params, stream: true }, { ...options, signal: this.controller.signal })\n        .withResponse();\n      this._connected(response);\n      for await (const event of stream) {\n        this.#addStreamEvent(event);\n      }\n      if (stream.controller.signal?.aborted) {\n        throw new APIUserAbortError();\n      }\n      this.#endRequest();\n    } finally {\n      if (signal && abortHandler) {\n        signal.removeEventListener('abort', abortHandler);\n      }\n    }\n  }\n\n  protected _connected(response: Response | null) {\n    if (this.ended) return;\n    this.#response = response;\n    this.#request_id = response?.headers.get('request-id');\n    this.#resolveConnectedPromise(response);\n    this._emit('connect');\n  }\n\n  get ended(): boolean {\n    return this.#ended;\n  }\n\n  get errored(): boolean {\n    return this.#errored;\n  }\n\n  get aborted(): boolean {\n    return this.#aborted;\n  }\n\n  abort() {\n    this.controller.abort();\n  }\n\n  /**\n   * Adds the listener function to the end of the listeners array for the event.\n   * No checks are made to see if the listener has already been added. Multiple calls passing\n   * the same combination of event and listener will result in the listener being added, and\n   * called, multiple times.\n   * @returns this MessageStream, so that calls can be chained\n   */\n  on<Event extends keyof MessageStreamEvents>(event: Event, listener: MessageStreamEvents[Event]): this {\n    const listeners: MessageStreamEventListeners<Event> =\n      this.#listeners[event] || (this.#listeners[event] = []);\n    listeners.push({ listener });\n    return this;\n  }\n\n  /**\n   * Removes the specified listener from the listener array for the event.\n   * off() will remove, at most, one instance of a listener from the listener array. If any single\n   * listener has been added multiple times to the listener array for the specified event, then\n   * off() must be called multiple times to remove each instance.\n   * @returns this MessageStream, so that calls can be chained\n   */\n  off<Event extends keyof MessageStreamEvents>(event: Event, listener: MessageStreamEvents[Event]): this {\n    const listeners = this.#listeners[event];\n    if (!listeners) return this;\n    const index = listeners.findIndex((l) => l.listener === listener);\n    if (index >= 0) listeners.splice(index, 1);\n    return this;\n  }\n\n  /**\n   * Adds a one-time listener function for the event. The next time the event is triggered,\n   * this listener is removed and then invoked.\n   * @returns this MessageStream, so that calls can be chained\n   */\n  once<Event extends keyof MessageStreamEvents>(event: Event, listener: MessageStreamEvents[Event]): this {\n    const listeners: MessageStreamEventListeners<Event> =\n      this.#listeners[event] || (this.#listeners[event] = []);\n    listeners.push({ listener, once: true });\n    return this;\n  }\n\n  /**\n   * This is similar to `.once()`, but returns a Promise that resolves the next time\n   * the event is triggered, instead of calling a listener callback.\n   * @returns a Promise that resolves the next time given event is triggered,\n   * or rejects if an error is emitted.  (If you request the 'error' event,\n   * returns a promise that resolves with the error).\n   *\n   * Example:\n   *\n   *   const message = await stream.emitted('message') // rejects if the stream errors\n   */\n  emitted<Event extends keyof MessageStreamEvents>(\n    event: Event,\n  ): Promise<\n    Parameters<MessageStreamEvents[Event]> extends [infer Param] ? Param\n    : Parameters<MessageStreamEvents[Event]> extends [] ? void\n    : Parameters<MessageStreamEvents[Event]>\n  > {\n    return new Promise((resolve, reject) => {\n      this.#catchingPromiseCreated = true;\n      if (event !== 'error') this.once('error', reject);\n      this.once(event, resolve as any);\n    });\n  }\n\n  async done(): Promise<void> {\n    this.#catchingPromiseCreated = true;\n    await this.#endPromise;\n  }\n\n  get currentMessage(): Message | undefined {\n    return this.#currentMessageSnapshot;\n  }\n\n  #getFinalMessage(): Message {\n    if (this.receivedMessages.length === 0) {\n      throw new AnthropicError('stream ended without producing a Message with role=assistant');\n    }\n    return this.receivedMessages.at(-1)!;\n  }\n\n  /**\n   * @returns a promise that resolves with the the final assistant Message response,\n   * or rejects if an error occurred or the stream ended prematurely without producing a Message.\n   */\n  async finalMessage(): Promise<Message> {\n    await this.done();\n    return this.#getFinalMessage();\n  }\n\n  #getFinalText(): string {\n    if (this.receivedMessages.length === 0) {\n      throw new AnthropicError('stream ended without producing a Message with role=assistant');\n    }\n    const textBlocks = this.receivedMessages\n      .at(-1)!\n      .content.filter((block): block is TextBlock => block.type === 'text')\n      .map((block) => block.text);\n    if (textBlocks.length === 0) {\n      throw new AnthropicError('stream ended without producing a content block with type=text');\n    }\n    return textBlocks.join(' ');\n  }\n\n  /**\n   * @returns a promise that resolves with the the final assistant Message's text response, concatenated\n   * together if there are more than one text blocks.\n   * Rejects if an error occurred or the stream ended prematurely without producing a Message.\n   */\n  async finalText(): Promise<string> {\n    await this.done();\n    return this.#getFinalText();\n  }\n\n  #handleError = (error: unknown) => {\n    this.#errored = true;\n    if (isAbortError(error)) {\n      error = new APIUserAbortError();\n    }\n    if (error instanceof APIUserAbortError) {\n      this.#aborted = true;\n      return this._emit('abort', error);\n    }\n    if (error instanceof AnthropicError) {\n      return this._emit('error', error);\n    }\n    if (error instanceof Error) {\n      const anthropicError: AnthropicError = new AnthropicError(error.message);\n      // @ts-ignore\n      anthropicError.cause = error;\n      return this._emit('error', anthropicError);\n    }\n    return this._emit('error', new AnthropicError(String(error)));\n  };\n\n  protected _emit<Event extends keyof MessageStreamEvents>(\n    event: Event,\n    ...args: Parameters<MessageStreamEvents[Event]>\n  ) {\n    // make sure we don't emit any MessageStreamEvents after end\n    if (this.#ended) return;\n\n    if (event === 'end') {\n      this.#ended = true;\n      this.#resolveEndPromise();\n    }\n\n    const listeners: MessageStreamEventListeners<Event> | undefined = this.#listeners[event];\n    if (listeners) {\n      this.#listeners[event] = listeners.filter((l) => !l.once) as any;\n      listeners.forEach(({ listener }: any) => listener(...args));\n    }\n\n    if (event === 'abort') {\n      const error = args[0] as APIUserAbortError;\n      if (!this.#catchingPromiseCreated && !listeners?.length) {\n        Promise.reject(error);\n      }\n      this.#rejectConnectedPromise(error);\n      this.#rejectEndPromise(error);\n      this._emit('end');\n      return;\n    }\n\n    if (event === 'error') {\n      // NOTE: _emit('error', error) should only be called from #handleError().\n\n      const error = args[0] as AnthropicError;\n      if (!this.#catchingPromiseCreated && !listeners?.length) {\n        // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n        // If you are seeing stack traces here, make sure to handle errors via either:\n        // - runner.on('error', () => ...)\n        // - await runner.done()\n        // - await runner.final...()\n        // - etc.\n        Promise.reject(error);\n      }\n      this.#rejectConnectedPromise(error);\n      this.#rejectEndPromise(error);\n      this._emit('end');\n    }\n  }\n\n  protected _emitFinal() {\n    const finalMessage = this.receivedMessages.at(-1);\n    if (finalMessage) {\n      this._emit('finalMessage', this.#getFinalMessage());\n    }\n  }\n\n  #beginRequest() {\n    if (this.ended) return;\n    this.#currentMessageSnapshot = undefined;\n  }\n  #addStreamEvent(event: MessageStreamEvent) {\n    if (this.ended) return;\n    const messageSnapshot = this.#accumulateMessage(event);\n    this._emit('streamEvent', event, messageSnapshot);\n\n    switch (event.type) {\n      case 'content_block_delta': {\n        const content = messageSnapshot.content.at(-1)!;\n        switch (event.delta.type) {\n          case 'text_delta': {\n            if (content.type === 'text') {\n              this._emit('text', event.delta.text, content.text || '');\n            }\n            break;\n          }\n          case 'citations_delta': {\n            if (content.type === 'text') {\n              this._emit('citation', event.delta.citation, content.citations ?? []);\n            }\n            break;\n          }\n          case 'input_json_delta': {\n            if (tracksToolInput(content) && content.input) {\n              this._emit('inputJson', event.delta.partial_json, content.input);\n            }\n            break;\n          }\n          case 'thinking_delta': {\n            if (content.type === 'thinking') {\n              this._emit('thinking', event.delta.thinking, content.thinking);\n            }\n            break;\n          }\n          case 'signature_delta': {\n            if (content.type === 'thinking') {\n              this._emit('signature', content.signature);\n            }\n            break;\n          }\n          default:\n            checkNever(event.delta);\n        }\n        break;\n      }\n      case 'message_stop': {\n        this._addMessageParam(messageSnapshot);\n        this._addMessage(messageSnapshot, true);\n        break;\n      }\n      case 'content_block_stop': {\n        this._emit('contentBlock', messageSnapshot.content.at(-1)!);\n        break;\n      }\n      case 'message_start': {\n        this.#currentMessageSnapshot = messageSnapshot;\n        break;\n      }\n      case 'content_block_start':\n      case 'message_delta':\n        break;\n    }\n  }\n  #endRequest(): Message {\n    if (this.ended) {\n      throw new AnthropicError(`stream has ended, this shouldn't happen`);\n    }\n    const snapshot = this.#currentMessageSnapshot;\n    if (!snapshot) {\n      throw new AnthropicError(`request ended without sending any chunks`);\n    }\n    this.#currentMessageSnapshot = undefined;\n    return snapshot;\n  }\n\n  protected async _fromReadableStream(\n    readableStream: ReadableStream,\n    options?: RequestOptions,\n  ): Promise<void> {\n    const signal = options?.signal;\n    let abortHandler: (() => void) | undefined;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      abortHandler = this.controller.abort.bind(this.controller);\n      signal.addEventListener('abort', abortHandler);\n    }\n    try {\n      this.#beginRequest();\n      this._connected(null);\n      const stream = Stream.fromReadableStream<MessageStreamEvent>(readableStream, this.controller);\n      for await (const event of stream) {\n        this.#addStreamEvent(event);\n      }\n      if (stream.controller.signal?.aborted) {\n        throw new APIUserAbortError();\n      }\n      this.#endRequest();\n    } finally {\n      if (signal && abortHandler) {\n        signal.removeEventListener('abort', abortHandler);\n      }\n    }\n  }\n\n  /**\n   * Mutates this.#currentMessage with the current event. Handling the accumulation of multiple messages\n   * will be needed to be handled by the caller, this method will throw if you try to accumulate for multiple\n   * messages.\n   */\n  #accumulateMessage(event: MessageStreamEvent): Message {\n    let snapshot = this.#currentMessageSnapshot;\n\n    if (event.type === 'message_start') {\n      if (snapshot) {\n        throw new AnthropicError(`Unexpected event order, got ${event.type} before receiving \"message_stop\"`);\n      }\n      return event.message;\n    }\n\n    if (!snapshot) {\n      throw new AnthropicError(`Unexpected event order, got ${event.type} before \"message_start\"`);\n    }\n\n    switch (event.type) {\n      case 'message_stop':\n        return snapshot;\n      case 'message_delta':\n        snapshot.stop_reason = event.delta.stop_reason;\n        snapshot.stop_sequence = event.delta.stop_sequence;\n        snapshot.usage.output_tokens = event.usage.output_tokens;\n\n        // Update other usage fields if they exist in the event\n        if (event.usage.input_tokens != null) {\n          snapshot.usage.input_tokens = event.usage.input_tokens;\n        }\n\n        if (event.usage.cache_creation_input_tokens != null) {\n          snapshot.usage.cache_creation_input_tokens = event.usage.cache_creation_input_tokens;\n        }\n\n        if (event.usage.cache_read_input_tokens != null) {\n          snapshot.usage.cache_read_input_tokens = event.usage.cache_read_input_tokens;\n        }\n\n        if (event.usage.server_tool_use != null) {\n          snapshot.usage.server_tool_use = event.usage.server_tool_use;\n        }\n\n        return snapshot;\n      case 'content_block_start':\n        snapshot.content.push({ ...event.content_block });\n        return snapshot;\n      case 'content_block_delta': {\n        const snapshotContent = snapshot.content.at(event.index);\n\n        switch (event.delta.type) {\n          case 'text_delta': {\n            if (snapshotContent?.type === 'text') {\n              snapshot.content[event.index] = {\n                ...snapshotContent,\n                text: (snapshotContent.text || '') + event.delta.text,\n              };\n            }\n            break;\n          }\n          case 'citations_delta': {\n            if (snapshotContent?.type === 'text') {\n              snapshot.content[event.index] = {\n                ...snapshotContent,\n                citations: [...(snapshotContent.citations ?? []), event.delta.citation],\n              };\n            }\n            break;\n          }\n          case 'input_json_delta': {\n            if (snapshotContent && tracksToolInput(snapshotContent)) {\n              // we need to keep track of the raw JSON string as well so that we can\n              // re-parse it for each delta, for now we just store it as an untyped\n              // non-enumerable property on the snapshot\n              let jsonBuf = (snapshotContent as any)[JSON_BUF_PROPERTY] || '';\n              jsonBuf += event.delta.partial_json;\n\n              const newContent = { ...snapshotContent };\n              Object.defineProperty(newContent, JSON_BUF_PROPERTY, {\n                value: jsonBuf,\n                enumerable: false,\n                writable: true,\n              });\n\n              if (jsonBuf) {\n                newContent.input = partialParse(jsonBuf);\n              }\n              snapshot.content[event.index] = newContent;\n            }\n            break;\n          }\n          case 'thinking_delta': {\n            if (snapshotContent?.type === 'thinking') {\n              snapshot.content[event.index] = {\n                ...snapshotContent,\n                thinking: snapshotContent.thinking + event.delta.thinking,\n              };\n            }\n            break;\n          }\n          case 'signature_delta': {\n            if (snapshotContent?.type === 'thinking') {\n              snapshot.content[event.index] = {\n                ...snapshotContent,\n                signature: event.delta.signature,\n              };\n            }\n            break;\n          }\n          default:\n            checkNever(event.delta);\n        }\n\n        return snapshot;\n      }\n      case 'content_block_stop':\n        return snapshot;\n    }\n  }\n\n  [Symbol.asyncIterator](): AsyncIterator<MessageStreamEvent> {\n    const pushQueue: MessageStreamEvent[] = [];\n    const readQueue: {\n      resolve: (chunk: MessageStreamEvent | undefined) => void;\n      reject: (error: unknown) => void;\n    }[] = [];\n    let done = false;\n\n    this.on('streamEvent', (event) => {\n      const reader = readQueue.shift();\n      if (reader) {\n        reader.resolve(event);\n      } else {\n        pushQueue.push(event);\n      }\n    });\n\n    this.on('end', () => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.resolve(undefined);\n      }\n      readQueue.length = 0;\n    });\n\n    this.on('abort', (err) => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.reject(err);\n      }\n      readQueue.length = 0;\n    });\n\n    this.on('error', (err) => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.reject(err);\n      }\n      readQueue.length = 0;\n    });\n\n    return {\n      next: async (): Promise<IteratorResult<MessageStreamEvent>> => {\n        if (!pushQueue.length) {\n          if (done) {\n            return { value: undefined, done: true };\n          }\n          return new Promise<MessageStreamEvent | undefined>((resolve, reject) =>\n            readQueue.push({ resolve, reject }),\n          ).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n        }\n        const chunk = pushQueue.shift()!;\n        return { value: chunk, done: false };\n      },\n      return: async () => {\n        this.abort();\n        return { value: undefined, done: true };\n      },\n    };\n  }\n\n  toReadableStream(): ReadableStream {\n    const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n    return stream.toReadableStream();\n  }\n}\n\n// used to ensure exhaustive case matching without throwing a runtime error\nfunction checkNever(x: never) {}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4630, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/resources/messages/batches.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/resources/messages/batches.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as Shared from '../shared';\nimport * as MessagesAPI from './messages';\nimport { APIPromise } from '../../core/api-promise';\nimport { Page, type PageParams, PagePromise } from '../../core/pagination';\nimport { buildHeaders } from '../../internal/headers';\nimport { RequestOptions } from '../../internal/request-options';\nimport { JSONLDecoder } from '../../internal/decoders/jsonl';\nimport { AnthropicError } from '../../error';\nimport { path } from '../../internal/utils/path';\n\nexport class Batches extends APIResource {\n  /**\n   * Send a batch of Message creation requests.\n   *\n   * The Message Batches API can be used to process multiple Messages API requests at\n   * once. Once a Message Batch is created, it begins processing immediately. Batches\n   * can take up to 24 hours to complete.\n   *\n   * Learn more about the Message Batches API in our\n   * [user guide](/en/docs/build-with-claude/batch-processing)\n   *\n   * @example\n   * ```ts\n   * const messageBatch = await client.messages.batches.create({\n   *   requests: [\n   *     {\n   *       custom_id: 'my-custom-id-1',\n   *       params: {\n   *         max_tokens: 1024,\n   *         messages: [\n   *           { content: 'Hello, world', role: 'user' },\n   *         ],\n   *         model: 'claude-sonnet-4-5-20250929',\n   *       },\n   *     },\n   *   ],\n   * });\n   * ```\n   */\n  create(body: BatchCreateParams, options?: RequestOptions): APIPromise<MessageBatch> {\n    return this._client.post('/v1/messages/batches', { body, ...options });\n  }\n\n  /**\n   * This endpoint is idempotent and can be used to poll for Message Batch\n   * completion. To access the results of a Message Batch, make a request to the\n   * `results_url` field in the response.\n   *\n   * Learn more about the Message Batches API in our\n   * [user guide](/en/docs/build-with-claude/batch-processing)\n   *\n   * @example\n   * ```ts\n   * const messageBatch = await client.messages.batches.retrieve(\n   *   'message_batch_id',\n   * );\n   * ```\n   */\n  retrieve(messageBatchID: string, options?: RequestOptions): APIPromise<MessageBatch> {\n    return this._client.get(path`/v1/messages/batches/${messageBatchID}`, options);\n  }\n\n  /**\n   * List all Message Batches within a Workspace. Most recently created batches are\n   * returned first.\n   *\n   * Learn more about the Message Batches API in our\n   * [user guide](/en/docs/build-with-claude/batch-processing)\n   *\n   * @example\n   * ```ts\n   * // Automatically fetches more pages as needed.\n   * for await (const messageBatch of client.messages.batches.list()) {\n   *   // ...\n   * }\n   * ```\n   */\n  list(\n    query: BatchListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<MessageBatchesPage, MessageBatch> {\n    return this._client.getAPIList('/v1/messages/batches', Page<MessageBatch>, { query, ...options });\n  }\n\n  /**\n   * Delete a Message Batch.\n   *\n   * Message Batches can only be deleted once they've finished processing. If you'd\n   * like to delete an in-progress batch, you must first cancel it.\n   *\n   * Learn more about the Message Batches API in our\n   * [user guide](/en/docs/build-with-claude/batch-processing)\n   *\n   * @example\n   * ```ts\n   * const deletedMessageBatch =\n   *   await client.messages.batches.delete('message_batch_id');\n   * ```\n   */\n  delete(messageBatchID: string, options?: RequestOptions): APIPromise<DeletedMessageBatch> {\n    return this._client.delete(path`/v1/messages/batches/${messageBatchID}`, options);\n  }\n\n  /**\n   * Batches may be canceled any time before processing ends. Once cancellation is\n   * initiated, the batch enters a `canceling` state, at which time the system may\n   * complete any in-progress, non-interruptible requests before finalizing\n   * cancellation.\n   *\n   * The number of canceled requests is specified in `request_counts`. To determine\n   * which requests were canceled, check the individual results within the batch.\n   * Note that cancellation may not result in any canceled requests if they were\n   * non-interruptible.\n   *\n   * Learn more about the Message Batches API in our\n   * [user guide](/en/docs/build-with-claude/batch-processing)\n   *\n   * @example\n   * ```ts\n   * const messageBatch = await client.messages.batches.cancel(\n   *   'message_batch_id',\n   * );\n   * ```\n   */\n  cancel(messageBatchID: string, options?: RequestOptions): APIPromise<MessageBatch> {\n    return this._client.post(path`/v1/messages/batches/${messageBatchID}/cancel`, options);\n  }\n\n  /**\n   * Streams the results of a Message Batch as a `.jsonl` file.\n   *\n   * Each line in the file is a JSON object containing the result of a single request\n   * in the Message Batch. Results are not guaranteed to be in the same order as\n   * requests. Use the `custom_id` field to match results to requests.\n   *\n   * Learn more about the Message Batches API in our\n   * [user guide](/en/docs/build-with-claude/batch-processing)\n   *\n   * @example\n   * ```ts\n   * const messageBatchIndividualResponse =\n   *   await client.messages.batches.results('message_batch_id');\n   * ```\n   */\n  async results(\n    messageBatchID: string,\n    options?: RequestOptions,\n  ): Promise<JSONLDecoder<MessageBatchIndividualResponse>> {\n    const batch = await this.retrieve(messageBatchID);\n    if (!batch.results_url) {\n      throw new AnthropicError(\n        `No batch \\`results_url\\`; Has it finished processing? ${batch.processing_status} - ${batch.id}`,\n      );\n    }\n\n    return this._client\n      .get(batch.results_url, {\n        ...options,\n        headers: buildHeaders([{ Accept: 'application/binary' }, options?.headers]),\n        stream: true,\n        __binaryResponse: true,\n      })\n      ._thenUnwrap((_, props) => JSONLDecoder.fromResponse(props.response, props.controller)) as APIPromise<\n      JSONLDecoder<MessageBatchIndividualResponse>\n    >;\n  }\n}\n\nexport type MessageBatchesPage = Page<MessageBatch>;\n\nexport interface DeletedMessageBatch {\n  /**\n   * ID of the Message Batch.\n   */\n  id: string;\n\n  /**\n   * Deleted object type.\n   *\n   * For Message Batches, this is always `\"message_batch_deleted\"`.\n   */\n  type: 'message_batch_deleted';\n}\n\nexport interface MessageBatch {\n  /**\n   * Unique object identifier.\n   *\n   * The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * RFC 3339 datetime string representing the time at which the Message Batch was\n   * archived and its results became unavailable.\n   */\n  archived_at: string | null;\n\n  /**\n   * RFC 3339 datetime string representing the time at which cancellation was\n   * initiated for the Message Batch. Specified only if cancellation was initiated.\n   */\n  cancel_initiated_at: string | null;\n\n  /**\n   * RFC 3339 datetime string representing the time at which the Message Batch was\n   * created.\n   */\n  created_at: string;\n\n  /**\n   * RFC 3339 datetime string representing the time at which processing for the\n   * Message Batch ended. Specified only once processing ends.\n   *\n   * Processing ends when every request in a Message Batch has either succeeded,\n   * errored, canceled, or expired.\n   */\n  ended_at: string | null;\n\n  /**\n   * RFC 3339 datetime string representing the time at which the Message Batch will\n   * expire and end processing, which is 24 hours after creation.\n   */\n  expires_at: string;\n\n  /**\n   * Processing status of the Message Batch.\n   */\n  processing_status: 'in_progress' | 'canceling' | 'ended';\n\n  /**\n   * Tallies requests within the Message Batch, categorized by their status.\n   *\n   * Requests start as `processing` and move to one of the other statuses only once\n   * processing of the entire batch ends. The sum of all values always matches the\n   * total number of requests in the batch.\n   */\n  request_counts: MessageBatchRequestCounts;\n\n  /**\n   * URL to a `.jsonl` file containing the results of the Message Batch requests.\n   * Specified only once processing ends.\n   *\n   * Results in the file are not guaranteed to be in the same order as requests. Use\n   * the `custom_id` field to match results to requests.\n   */\n  results_url: string | null;\n\n  /**\n   * Object type.\n   *\n   * For Message Batches, this is always `\"message_batch\"`.\n   */\n  type: 'message_batch';\n}\n\nexport interface MessageBatchCanceledResult {\n  type: 'canceled';\n}\n\nexport interface MessageBatchErroredResult {\n  error: Shared.ErrorResponse;\n\n  type: 'errored';\n}\n\nexport interface MessageBatchExpiredResult {\n  type: 'expired';\n}\n\n/**\n * This is a single line in the response `.jsonl` file and does not represent the\n * response as a whole.\n */\nexport interface MessageBatchIndividualResponse {\n  /**\n   * Developer-provided ID created for each request in a Message Batch. Useful for\n   * matching results to requests, as results may be given out of request order.\n   *\n   * Must be unique for each request within the Message Batch.\n   */\n  custom_id: string;\n\n  /**\n   * Processing result for this request.\n   *\n   * Contains a Message output if processing was successful, an error response if\n   * processing failed, or the reason why processing was not attempted, such as\n   * cancellation or expiration.\n   */\n  result: MessageBatchResult;\n}\n\nexport interface MessageBatchRequestCounts {\n  /**\n   * Number of requests in the Message Batch that have been canceled.\n   *\n   * This is zero until processing of the entire Message Batch has ended.\n   */\n  canceled: number;\n\n  /**\n   * Number of requests in the Message Batch that encountered an error.\n   *\n   * This is zero until processing of the entire Message Batch has ended.\n   */\n  errored: number;\n\n  /**\n   * Number of requests in the Message Batch that have expired.\n   *\n   * This is zero until processing of the entire Message Batch has ended.\n   */\n  expired: number;\n\n  /**\n   * Number of requests in the Message Batch that are processing.\n   */\n  processing: number;\n\n  /**\n   * Number of requests in the Message Batch that have completed successfully.\n   *\n   * This is zero until processing of the entire Message Batch has ended.\n   */\n  succeeded: number;\n}\n\n/**\n * Processing result for this request.\n *\n * Contains a Message output if processing was successful, an error response if\n * processing failed, or the reason why processing was not attempted, such as\n * cancellation or expiration.\n */\nexport type MessageBatchResult =\n  | MessageBatchSucceededResult\n  | MessageBatchErroredResult\n  | MessageBatchCanceledResult\n  | MessageBatchExpiredResult;\n\nexport interface MessageBatchSucceededResult {\n  message: MessagesAPI.Message;\n\n  type: 'succeeded';\n}\n\nexport interface BatchCreateParams {\n  /**\n   * List of requests for prompt completion. Each is an individual request to create\n   * a Message.\n   */\n  requests: Array<BatchCreateParams.Request>;\n}\n\nexport namespace BatchCreateParams {\n  export interface Request {\n    /**\n     * Developer-provided ID created for each request in a Message Batch. Useful for\n     * matching results to requests, as results may be given out of request order.\n     *\n     * Must be unique for each request within the Message Batch.\n     */\n    custom_id: string;\n\n    /**\n     * Messages API creation parameters for the individual request.\n     *\n     * See the [Messages API reference](/en/api/messages) for full documentation on\n     * available parameters.\n     */\n    params: MessagesAPI.MessageCreateParamsNonStreaming;\n  }\n}\n\nexport interface BatchListParams extends PageParams {}\n\nexport declare namespace Batches {\n  export {\n    type DeletedMessageBatch as DeletedMessageBatch,\n    type MessageBatch as MessageBatch,\n    type MessageBatchCanceledResult as MessageBatchCanceledResult,\n    type MessageBatchErroredResult as MessageBatchErroredResult,\n    type MessageBatchExpiredResult as MessageBatchExpiredResult,\n    type MessageBatchIndividualResponse as MessageBatchIndividualResponse,\n    type MessageBatchRequestCounts as MessageBatchRequestCounts,\n    type MessageBatchResult as MessageBatchResult,\n    type MessageBatchSucceededResult as MessageBatchSucceededResult,\n    type MessageBatchesPage as MessageBatchesPage,\n    type BatchCreateParams as BatchCreateParams,\n    type BatchListParams as BatchListParams,\n  };\n}\n"],"names":[],"mappings":"AAAA,sFAAsF;;;;;OAE/E,EAAE,WAAW,EAAE;OAIf,EAAE,IAAI,EAAgC;OACtC,EAAE,YAAY,EAAE;OAEhB,EAAE,YAAY,EAAE;;OAChB,EAAE,cAAc,EAAE;OAClB,EAAE,IAAI,EAAE;;;;;;;AAET,MAAO,OAAQ,SAAQ,8KAAW;IACtC;;;;;;;;;;;;;;;;;;;;;;;;;;;OA2BG,CACH,MAAM,CAAC,IAAuB,EAAE,OAAwB,EAAA;QACtD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,sBAAsB,EAAE;YAAE,IAAI;YAAE,GAAG,OAAO;QAAA,CAAE,CAAC,CAAC;IACzE,CAAC;IAED;;;;;;;;;;;;;;OAcG,CACH,QAAQ,CAAC,cAAsB,EAAE,OAAwB,EAAA;QACvD,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,gLAAI,CAAA,qBAAA,EAAwB,cAAc,CAAA,CAAE,EAAE,OAAO,CAAC,CAAC;IACjF,CAAC;IAED;;;;;;;;;;;;;;OAcG,CACH,IAAI,CACF,QAA4C,CAAA,CAAE,EAC9C,OAAwB,EAAA;QAExB,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,sBAAsB,EAAE,yKAAkB,CAAA,CAAE;YAAE,KAAK;YAAE,GAAG,OAAO;QAAA,CAAE,CAAC,CAAC;IACpG,CAAC;IAED;;;;;;;;;;;;;;OAcG,CACH,MAAM,CAAC,cAAsB,EAAE,OAAwB,EAAA;QACrD,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,gLAAI,CAAA,qBAAA,EAAwB,cAAc,CAAA,CAAE,EAAE,OAAO,CAAC,CAAC;IACpF,CAAC;IAED;;;;;;;;;;;;;;;;;;;;OAoBG,CACH,MAAM,CAAC,cAAsB,EAAE,OAAwB,EAAA;QACrD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gLAAI,CAAA,qBAAA,EAAwB,cAAc,CAAA,OAAA,CAAS,EAAE,OAAO,CAAC,CAAC;IACzF,CAAC;IAED;;;;;;;;;;;;;;;OAeG,CACH,KAAK,CAAC,OAAO,CACX,cAAsB,EACtB,OAAwB,EAAA;QAExB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAClD,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;YACvB,MAAM,IAAI,8KAAc,CACtB,CAAA,sDAAA,EAAyD,KAAK,CAAC,iBAAiB,CAAA,GAAA,EAAM,KAAK,CAAC,EAAE,EAAE,CACjG,CAAC;QACJ,CAAC;QAED,OAAO,IAAI,CAAC,OAAO,CAChB,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE;YACtB,GAAG,OAAO;YACV,OAAO,MAAE,kLAAY,EAAC;gBAAC;oBAAE,MAAM,EAAE,oBAAoB;gBAAA,CAAE;gBAAE,OAAO,EAAE,OAAO;aAAC,CAAC;YAC3E,MAAM,EAAE,IAAI;YACZ,gBAAgB,EAAE,IAAI;SACvB,CAAC,CACD,WAAW,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAG,CAAD,2LAAa,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC,CAEvF,CAAC;IACJ,CAAC;CACF","debugId":null}},
    {"offset": {"line": 4796, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/resources/messages/messages.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/resources/messages/messages.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIPromise } from '../../core/api-promise';\nimport { APIResource } from '../../core/resource';\nimport { Stream } from '../../core/streaming';\nimport { RequestOptions } from '../../internal/request-options';\nimport { MessageStream } from '../../lib/MessageStream';\nimport * as BatchesAPI from './batches';\nimport {\n  BatchCreateParams,\n  BatchListParams,\n  Batches,\n  DeletedMessageBatch,\n  MessageBatch,\n  MessageBatchCanceledResult,\n  MessageBatchErroredResult,\n  MessageBatchExpiredResult,\n  MessageBatchIndividualResponse,\n  MessageBatchRequestCounts,\n  MessageBatchResult,\n  MessageBatchSucceededResult,\n  MessageBatchesPage,\n} from './batches';\nimport * as MessagesAPI from './messages';\n\nimport { MODEL_NONSTREAMING_TOKENS } from '../../internal/constants';\n\nexport class Messages extends APIResource {\n  batches: BatchesAPI.Batches = new BatchesAPI.Batches(this._client);\n\n  /**\n   * Send a structured list of input messages with text and/or image content, and the\n   * model will generate the next message in the conversation.\n   *\n   * The Messages API can be used for either single queries or stateless multi-turn\n   * conversations.\n   *\n   * Learn more about the Messages API in our [user guide](/en/docs/initial-setup)\n   *\n   * @example\n   * ```ts\n   * const message = await client.messages.create({\n   *   max_tokens: 1024,\n   *   messages: [{ content: 'Hello, world', role: 'user' }],\n   *   model: 'claude-sonnet-4-5-20250929',\n   * });\n   * ```\n   */\n  create(body: MessageCreateParamsNonStreaming, options?: RequestOptions): APIPromise<Message>;\n  create(\n    body: MessageCreateParamsStreaming,\n    options?: RequestOptions,\n  ): APIPromise<Stream<RawMessageStreamEvent>>;\n  create(\n    body: MessageCreateParamsBase,\n    options?: RequestOptions,\n  ): APIPromise<Stream<RawMessageStreamEvent> | Message>;\n  create(\n    body: MessageCreateParams,\n    options?: RequestOptions,\n  ): APIPromise<Message> | APIPromise<Stream<RawMessageStreamEvent>> {\n    if (body.model in DEPRECATED_MODELS) {\n      console.warn(\n        `The model '${body.model}' is deprecated and will reach end-of-life on ${\n          DEPRECATED_MODELS[body.model]\n        }\\nPlease migrate to a newer model. Visit https://docs.anthropic.com/en/docs/resources/model-deprecations for more information.`,\n      );\n    }\n    let timeout = (this._client as any)._options.timeout as number | null;\n    if (!body.stream && timeout == null) {\n      const maxNonstreamingTokens = MODEL_NONSTREAMING_TOKENS[body.model] ?? undefined;\n      timeout = this._client.calculateNonstreamingTimeout(body.max_tokens, maxNonstreamingTokens);\n    }\n    return this._client.post('/v1/messages', {\n      body,\n      timeout: timeout ?? 600000,\n      ...options,\n      stream: body.stream ?? false,\n    }) as APIPromise<Message> | APIPromise<Stream<RawMessageStreamEvent>>;\n  }\n\n  /**\n   * Create a Message stream\n   */\n  stream(body: MessageStreamParams, options?: RequestOptions): MessageStream {\n    return MessageStream.createMessage(this, body, options);\n  }\n\n  /**\n   * Count the number of tokens in a Message.\n   *\n   * The Token Count API can be used to count the number of tokens in a Message,\n   * including tools, images, and documents, without creating it.\n   *\n   * Learn more about token counting in our\n   * [user guide](/en/docs/build-with-claude/token-counting)\n   *\n   * @example\n   * ```ts\n   * const messageTokensCount =\n   *   await client.messages.countTokens({\n   *     messages: [{ content: 'string', role: 'user' }],\n   *     model: 'claude-sonnet-4-5',\n   *   });\n   * ```\n   */\n  countTokens(body: MessageCountTokensParams, options?: RequestOptions): APIPromise<MessageTokensCount> {\n    return this._client.post('/v1/messages/count_tokens', { body, ...options });\n  }\n}\n\nexport interface Base64ImageSource {\n  data: string;\n\n  media_type: 'image/jpeg' | 'image/png' | 'image/gif' | 'image/webp';\n\n  type: 'base64';\n}\n\nexport interface Base64PDFSource {\n  data: string;\n\n  media_type: 'application/pdf';\n\n  type: 'base64';\n}\n\nexport interface CacheControlEphemeral {\n  type: 'ephemeral';\n\n  /**\n   * The time-to-live for the cache control breakpoint.\n   *\n   * This may be one the following values:\n   *\n   * - `5m`: 5 minutes\n   * - `1h`: 1 hour\n   *\n   * Defaults to `5m`.\n   */\n  ttl?: '5m' | '1h';\n}\n\nexport interface CacheCreation {\n  /**\n   * The number of input tokens used to create the 1 hour cache entry.\n   */\n  ephemeral_1h_input_tokens: number;\n\n  /**\n   * The number of input tokens used to create the 5 minute cache entry.\n   */\n  ephemeral_5m_input_tokens: number;\n}\n\nexport interface CitationCharLocation {\n  cited_text: string;\n\n  document_index: number;\n\n  document_title: string | null;\n\n  end_char_index: number;\n\n  file_id: string | null;\n\n  start_char_index: number;\n\n  type: 'char_location';\n}\n\nexport interface CitationCharLocationParam {\n  cited_text: string;\n\n  document_index: number;\n\n  document_title: string | null;\n\n  end_char_index: number;\n\n  start_char_index: number;\n\n  type: 'char_location';\n}\n\nexport interface CitationContentBlockLocation {\n  cited_text: string;\n\n  document_index: number;\n\n  document_title: string | null;\n\n  end_block_index: number;\n\n  file_id: string | null;\n\n  start_block_index: number;\n\n  type: 'content_block_location';\n}\n\nexport interface CitationContentBlockLocationParam {\n  cited_text: string;\n\n  document_index: number;\n\n  document_title: string | null;\n\n  end_block_index: number;\n\n  start_block_index: number;\n\n  type: 'content_block_location';\n}\n\nexport interface CitationPageLocation {\n  cited_text: string;\n\n  document_index: number;\n\n  document_title: string | null;\n\n  end_page_number: number;\n\n  file_id: string | null;\n\n  start_page_number: number;\n\n  type: 'page_location';\n}\n\nexport interface CitationPageLocationParam {\n  cited_text: string;\n\n  document_index: number;\n\n  document_title: string | null;\n\n  end_page_number: number;\n\n  start_page_number: number;\n\n  type: 'page_location';\n}\n\nexport interface CitationSearchResultLocationParam {\n  cited_text: string;\n\n  end_block_index: number;\n\n  search_result_index: number;\n\n  source: string;\n\n  start_block_index: number;\n\n  title: string | null;\n\n  type: 'search_result_location';\n}\n\nexport interface CitationWebSearchResultLocationParam {\n  cited_text: string;\n\n  encrypted_index: string;\n\n  title: string | null;\n\n  type: 'web_search_result_location';\n\n  url: string;\n}\n\nexport interface CitationsConfigParam {\n  enabled?: boolean;\n}\n\nexport interface CitationsDelta {\n  citation:\n    | CitationCharLocation\n    | CitationPageLocation\n    | CitationContentBlockLocation\n    | CitationsWebSearchResultLocation\n    | CitationsSearchResultLocation;\n\n  type: 'citations_delta';\n}\n\nexport interface CitationsSearchResultLocation {\n  cited_text: string;\n\n  end_block_index: number;\n\n  search_result_index: number;\n\n  source: string;\n\n  start_block_index: number;\n\n  title: string | null;\n\n  type: 'search_result_location';\n}\n\nexport interface CitationsWebSearchResultLocation {\n  cited_text: string;\n\n  encrypted_index: string;\n\n  title: string | null;\n\n  type: 'web_search_result_location';\n\n  url: string;\n}\n\nexport type ContentBlock =\n  | TextBlock\n  | ThinkingBlock\n  | RedactedThinkingBlock\n  | ToolUseBlock\n  | ServerToolUseBlock\n  | WebSearchToolResultBlock;\n\n/**\n * Regular text content.\n */\nexport type ContentBlockParam =\n  | TextBlockParam\n  | ImageBlockParam\n  | DocumentBlockParam\n  | SearchResultBlockParam\n  | ThinkingBlockParam\n  | RedactedThinkingBlockParam\n  | ToolUseBlockParam\n  | ToolResultBlockParam\n  | ServerToolUseBlockParam\n  | WebSearchToolResultBlockParam;\n\nexport interface ContentBlockSource {\n  content: string | Array<ContentBlockSourceContent>;\n\n  type: 'content';\n}\n\nexport type ContentBlockSourceContent = TextBlockParam | ImageBlockParam;\n\nexport interface DocumentBlockParam {\n  source: Base64PDFSource | PlainTextSource | ContentBlockSource | URLPDFSource;\n\n  type: 'document';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: CacheControlEphemeral | null;\n\n  citations?: CitationsConfigParam | null;\n\n  context?: string | null;\n\n  title?: string | null;\n}\n\nexport interface ImageBlockParam {\n  source: Base64ImageSource | URLImageSource;\n\n  type: 'image';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: CacheControlEphemeral | null;\n}\n\nexport interface InputJSONDelta {\n  partial_json: string;\n\n  type: 'input_json_delta';\n}\n\nexport interface Message {\n  /**\n   * Unique object identifier.\n   *\n   * The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * Content generated by the model.\n   *\n   * This is an array of content blocks, each of which has a `type` that determines\n   * its shape.\n   *\n   * Example:\n   *\n   * ```json\n   * [{ \"type\": \"text\", \"text\": \"Hi, I'm Claude.\" }]\n   * ```\n   *\n   * If the request input `messages` ended with an `assistant` turn, then the\n   * response `content` will continue directly from that last turn. You can use this\n   * to constrain the model's output.\n   *\n   * For example, if the input `messages` were:\n   *\n   * ```json\n   * [\n   *   {\n   *     \"role\": \"user\",\n   *     \"content\": \"What's the Greek name for Sun? (A) Sol (B) Helios (C) Sun\"\n   *   },\n   *   { \"role\": \"assistant\", \"content\": \"The best answer is (\" }\n   * ]\n   * ```\n   *\n   * Then the response `content` might be:\n   *\n   * ```json\n   * [{ \"type\": \"text\", \"text\": \"B)\" }]\n   * ```\n   */\n  content: Array<ContentBlock>;\n\n  /**\n   * The model that will complete your prompt.\\n\\nSee\n   * [models](https://docs.anthropic.com/en/docs/models-overview) for additional\n   * details and options.\n   */\n  model: Model;\n\n  /**\n   * Conversational role of the generated message.\n   *\n   * This will always be `\"assistant\"`.\n   */\n  role: 'assistant';\n\n  /**\n   * The reason that we stopped.\n   *\n   * This may be one the following values:\n   *\n   * - `\"end_turn\"`: the model reached a natural stopping point\n   * - `\"max_tokens\"`: we exceeded the requested `max_tokens` or the model's maximum\n   * - `\"stop_sequence\"`: one of your provided custom `stop_sequences` was generated\n   * - `\"tool_use\"`: the model invoked one or more tools\n   * - `\"pause_turn\"`: we paused a long-running turn. You may provide the response\n   *   back as-is in a subsequent request to let the model continue.\n   * - `\"refusal\"`: when streaming classifiers intervene to handle potential policy\n   *   violations\n   *\n   * In non-streaming mode this value is always non-null. In streaming mode, it is\n   * null in the `message_start` event and non-null otherwise.\n   */\n  stop_reason: StopReason | null;\n\n  /**\n   * Which custom stop sequence was generated, if any.\n   *\n   * This value will be a non-null string if one of your custom stop sequences was\n   * generated.\n   */\n  stop_sequence: string | null;\n\n  /**\n   * Object type.\n   *\n   * For Messages, this is always `\"message\"`.\n   */\n  type: 'message';\n\n  /**\n   * Billing and rate-limit usage.\n   *\n   * Anthropic's API bills and rate-limits by token counts, as tokens represent the\n   * underlying cost to our systems.\n   *\n   * Under the hood, the API transforms requests into a format suitable for the\n   * model. The model's output then goes through a parsing stage before becoming an\n   * API response. As a result, the token counts in `usage` will not match one-to-one\n   * with the exact visible content of an API request or response.\n   *\n   * For example, `output_tokens` will be non-zero, even for an empty string response\n   * from Claude.\n   *\n   * Total input tokens in a request is the summation of `input_tokens`,\n   * `cache_creation_input_tokens`, and `cache_read_input_tokens`.\n   */\n  usage: Usage;\n}\n\nexport type MessageCountTokensTool =\n  | Tool\n  | ToolBash20250124\n  | ToolTextEditor20250124\n  | ToolTextEditor20250429\n  | ToolTextEditor20250728\n  | WebSearchTool20250305;\n\nexport interface MessageDeltaUsage {\n  /**\n   * The cumulative number of input tokens used to create the cache entry.\n   */\n  cache_creation_input_tokens: number | null;\n\n  /**\n   * The cumulative number of input tokens read from the cache.\n   */\n  cache_read_input_tokens: number | null;\n\n  /**\n   * The cumulative number of input tokens which were used.\n   */\n  input_tokens: number | null;\n\n  /**\n   * The cumulative number of output tokens which were used.\n   */\n  output_tokens: number;\n\n  /**\n   * The number of server tool requests.\n   */\n  server_tool_use: ServerToolUsage | null;\n}\n\nexport interface MessageParam {\n  content: string | Array<ContentBlockParam>;\n\n  role: 'user' | 'assistant';\n}\n\nexport interface MessageTokensCount {\n  /**\n   * The total number of tokens across the provided list of messages, system prompt,\n   * and tools.\n   */\n  input_tokens: number;\n}\n\nexport interface Metadata {\n  /**\n   * An external identifier for the user who is associated with the request.\n   *\n   * This should be a uuid, hash value, or other opaque identifier. Anthropic may use\n   * this id to help detect abuse. Do not include any identifying information such as\n   * name, email address, or phone number.\n   */\n  user_id?: string | null;\n}\n\n/**\n * The model that will complete your prompt.\\n\\nSee\n * [models](https://docs.anthropic.com/en/docs/models-overview) for additional\n * details and options.\n */\nexport type Model =\n  | 'claude-3-7-sonnet-latest'\n  | 'claude-3-7-sonnet-20250219'\n  | 'claude-3-5-haiku-latest'\n  | 'claude-3-5-haiku-20241022'\n  | 'claude-haiku-4-5'\n  | 'claude-haiku-4-5-20251001'\n  | 'claude-sonnet-4-20250514'\n  | 'claude-sonnet-4-0'\n  | 'claude-4-sonnet-20250514'\n  | 'claude-sonnet-4-5'\n  | 'claude-sonnet-4-5-20250929'\n  | 'claude-opus-4-0'\n  | 'claude-opus-4-20250514'\n  | 'claude-4-opus-20250514'\n  | 'claude-opus-4-1-20250805'\n  | 'claude-3-opus-latest'\n  | 'claude-3-opus-20240229'\n  | 'claude-3-haiku-20240307'\n  | (string & {});\n\nconst DEPRECATED_MODELS: {\n  [K in Model]?: string;\n} = {\n  'claude-1.3': 'November 6th, 2024',\n  'claude-1.3-100k': 'November 6th, 2024',\n  'claude-instant-1.1': 'November 6th, 2024',\n  'claude-instant-1.1-100k': 'November 6th, 2024',\n  'claude-instant-1.2': 'November 6th, 2024',\n  'claude-3-sonnet-20240229': 'July 21st, 2025',\n  'claude-3-opus-20240229': 'January 5th, 2026',\n  'claude-2.1': 'July 21st, 2025',\n  'claude-2.0': 'July 21st, 2025',\n  'claude-3-7-sonnet-latest': 'February 19th, 2026',\n  'claude-3-7-sonnet-20250219': 'February 19th, 2026',\n};\n\nexport interface PlainTextSource {\n  data: string;\n\n  media_type: 'text/plain';\n\n  type: 'text';\n}\n\nexport type RawContentBlockDelta =\n  | TextDelta\n  | InputJSONDelta\n  | CitationsDelta\n  | ThinkingDelta\n  | SignatureDelta;\n\nexport interface RawContentBlockDeltaEvent {\n  delta: RawContentBlockDelta;\n\n  index: number;\n\n  type: 'content_block_delta';\n}\n\nexport interface RawContentBlockStartEvent {\n  content_block:\n    | TextBlock\n    | ThinkingBlock\n    | RedactedThinkingBlock\n    | ToolUseBlock\n    | ServerToolUseBlock\n    | WebSearchToolResultBlock;\n\n  index: number;\n\n  type: 'content_block_start';\n}\n\nexport interface RawContentBlockStopEvent {\n  index: number;\n\n  type: 'content_block_stop';\n}\n\nexport interface RawMessageDeltaEvent {\n  delta: RawMessageDeltaEvent.Delta;\n\n  type: 'message_delta';\n\n  /**\n   * Billing and rate-limit usage.\n   *\n   * Anthropic's API bills and rate-limits by token counts, as tokens represent the\n   * underlying cost to our systems.\n   *\n   * Under the hood, the API transforms requests into a format suitable for the\n   * model. The model's output then goes through a parsing stage before becoming an\n   * API response. As a result, the token counts in `usage` will not match one-to-one\n   * with the exact visible content of an API request or response.\n   *\n   * For example, `output_tokens` will be non-zero, even for an empty string response\n   * from Claude.\n   *\n   * Total input tokens in a request is the summation of `input_tokens`,\n   * `cache_creation_input_tokens`, and `cache_read_input_tokens`.\n   */\n  usage: MessageDeltaUsage;\n}\n\nexport namespace RawMessageDeltaEvent {\n  export interface Delta {\n    stop_reason: MessagesAPI.StopReason | null;\n\n    stop_sequence: string | null;\n  }\n}\n\nexport interface RawMessageStartEvent {\n  message: Message;\n\n  type: 'message_start';\n}\n\nexport interface RawMessageStopEvent {\n  type: 'message_stop';\n}\n\nexport type RawMessageStreamEvent =\n  | RawMessageStartEvent\n  | RawMessageDeltaEvent\n  | RawMessageStopEvent\n  | RawContentBlockStartEvent\n  | RawContentBlockDeltaEvent\n  | RawContentBlockStopEvent;\n\nexport interface RedactedThinkingBlock {\n  data: string;\n\n  type: 'redacted_thinking';\n}\n\nexport interface RedactedThinkingBlockParam {\n  data: string;\n\n  type: 'redacted_thinking';\n}\n\nexport interface SearchResultBlockParam {\n  content: Array<TextBlockParam>;\n\n  source: string;\n\n  title: string;\n\n  type: 'search_result';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: CacheControlEphemeral | null;\n\n  citations?: CitationsConfigParam;\n}\n\nexport interface ServerToolUsage {\n  /**\n   * The number of web search tool requests.\n   */\n  web_search_requests: number;\n}\n\nexport interface ServerToolUseBlock {\n  id: string;\n\n  input: unknown;\n\n  name: 'web_search';\n\n  type: 'server_tool_use';\n}\n\nexport interface ServerToolUseBlockParam {\n  id: string;\n\n  input: unknown;\n\n  name: 'web_search';\n\n  type: 'server_tool_use';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: CacheControlEphemeral | null;\n}\n\nexport interface SignatureDelta {\n  signature: string;\n\n  type: 'signature_delta';\n}\n\nexport type StopReason = 'end_turn' | 'max_tokens' | 'stop_sequence' | 'tool_use' | 'pause_turn' | 'refusal';\n\nexport interface TextBlock {\n  /**\n   * Citations supporting the text block.\n   *\n   * The type of citation returned will depend on the type of document being cited.\n   * Citing a PDF results in `page_location`, plain text results in `char_location`,\n   * and content document results in `content_block_location`.\n   */\n  citations: Array<TextCitation> | null;\n\n  text: string;\n\n  type: 'text';\n}\n\nexport interface TextBlockParam {\n  text: string;\n\n  type: 'text';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: CacheControlEphemeral | null;\n\n  citations?: Array<TextCitationParam> | null;\n}\n\nexport type TextCitation =\n  | CitationCharLocation\n  | CitationPageLocation\n  | CitationContentBlockLocation\n  | CitationsWebSearchResultLocation\n  | CitationsSearchResultLocation;\n\nexport type TextCitationParam =\n  | CitationCharLocationParam\n  | CitationPageLocationParam\n  | CitationContentBlockLocationParam\n  | CitationWebSearchResultLocationParam\n  | CitationSearchResultLocationParam;\n\nexport interface TextDelta {\n  text: string;\n\n  type: 'text_delta';\n}\n\nexport interface ThinkingBlock {\n  signature: string;\n\n  thinking: string;\n\n  type: 'thinking';\n}\n\nexport interface ThinkingBlockParam {\n  signature: string;\n\n  thinking: string;\n\n  type: 'thinking';\n}\n\nexport interface ThinkingConfigDisabled {\n  type: 'disabled';\n}\n\nexport interface ThinkingConfigEnabled {\n  /**\n   * Determines how many tokens Claude can use for its internal reasoning process.\n   * Larger budgets can enable more thorough analysis for complex problems, improving\n   * response quality.\n   *\n   * Must be ≥1024 and less than `max_tokens`.\n   *\n   * See\n   * [extended thinking](https://docs.claude.com/en/docs/build-with-claude/extended-thinking)\n   * for details.\n   */\n  budget_tokens: number;\n\n  type: 'enabled';\n}\n\n/**\n * Configuration for enabling Claude's extended thinking.\n *\n * When enabled, responses include `thinking` content blocks showing Claude's\n * thinking process before the final answer. Requires a minimum budget of 1,024\n * tokens and counts towards your `max_tokens` limit.\n *\n * See\n * [extended thinking](https://docs.claude.com/en/docs/build-with-claude/extended-thinking)\n * for details.\n */\nexport type ThinkingConfigParam = ThinkingConfigEnabled | ThinkingConfigDisabled;\n\nexport interface ThinkingDelta {\n  thinking: string;\n\n  type: 'thinking_delta';\n}\n\nexport interface Tool {\n  /**\n   * [JSON schema](https://json-schema.org/draft/2020-12) for this tool's input.\n   *\n   * This defines the shape of the `input` that your tool accepts and that the model\n   * will produce.\n   */\n  input_schema: Tool.InputSchema;\n\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: string;\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: CacheControlEphemeral | null;\n\n  /**\n   * Description of what this tool does.\n   *\n   * Tool descriptions should be as detailed as possible. The more information that\n   * the model has about what the tool is and how to use it, the better it will\n   * perform. You can use natural language descriptions to reinforce important\n   * aspects of the tool input JSON schema.\n   */\n  description?: string;\n\n  type?: 'custom' | null;\n}\n\nexport namespace Tool {\n  /**\n   * [JSON schema](https://json-schema.org/draft/2020-12) for this tool's input.\n   *\n   * This defines the shape of the `input` that your tool accepts and that the model\n   * will produce.\n   */\n  export interface InputSchema {\n    type: 'object';\n\n    properties?: unknown | null;\n\n    required?: Array<string> | null;\n\n    [k: string]: unknown;\n  }\n}\n\nexport interface ToolBash20250124 {\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: 'bash';\n\n  type: 'bash_20250124';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: CacheControlEphemeral | null;\n}\n\n/**\n * How the model should use the provided tools. The model can use a specific tool,\n * any available tool, decide by itself, or not use tools at all.\n */\nexport type ToolChoice = ToolChoiceAuto | ToolChoiceAny | ToolChoiceTool | ToolChoiceNone;\n\n/**\n * The model will use any available tools.\n */\nexport interface ToolChoiceAny {\n  type: 'any';\n\n  /**\n   * Whether to disable parallel tool use.\n   *\n   * Defaults to `false`. If set to `true`, the model will output exactly one tool\n   * use.\n   */\n  disable_parallel_tool_use?: boolean;\n}\n\n/**\n * The model will automatically decide whether to use tools.\n */\nexport interface ToolChoiceAuto {\n  type: 'auto';\n\n  /**\n   * Whether to disable parallel tool use.\n   *\n   * Defaults to `false`. If set to `true`, the model will output at most one tool\n   * use.\n   */\n  disable_parallel_tool_use?: boolean;\n}\n\n/**\n * The model will not be allowed to use tools.\n */\nexport interface ToolChoiceNone {\n  type: 'none';\n}\n\n/**\n * The model will use the specified tool with `tool_choice.name`.\n */\nexport interface ToolChoiceTool {\n  /**\n   * The name of the tool to use.\n   */\n  name: string;\n\n  type: 'tool';\n\n  /**\n   * Whether to disable parallel tool use.\n   *\n   * Defaults to `false`. If set to `true`, the model will output exactly one tool\n   * use.\n   */\n  disable_parallel_tool_use?: boolean;\n}\n\nexport interface ToolResultBlockParam {\n  tool_use_id: string;\n\n  type: 'tool_result';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: CacheControlEphemeral | null;\n\n  content?: string | Array<TextBlockParam | ImageBlockParam | SearchResultBlockParam | DocumentBlockParam>;\n\n  is_error?: boolean;\n}\n\nexport interface ToolTextEditor20250124 {\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: 'str_replace_editor';\n\n  type: 'text_editor_20250124';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: CacheControlEphemeral | null;\n}\n\nexport interface ToolTextEditor20250429 {\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: 'str_replace_based_edit_tool';\n\n  type: 'text_editor_20250429';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: CacheControlEphemeral | null;\n}\n\nexport interface ToolTextEditor20250728 {\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: 'str_replace_based_edit_tool';\n\n  type: 'text_editor_20250728';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: CacheControlEphemeral | null;\n\n  /**\n   * Maximum number of characters to display when viewing a file. If not specified,\n   * defaults to displaying the full file.\n   */\n  max_characters?: number | null;\n}\n\nexport type ToolUnion =\n  | Tool\n  | ToolBash20250124\n  | ToolTextEditor20250124\n  | ToolTextEditor20250429\n  | ToolTextEditor20250728\n  | WebSearchTool20250305;\n\nexport interface ToolUseBlock {\n  id: string;\n\n  input: unknown;\n\n  name: string;\n\n  type: 'tool_use';\n}\n\nexport interface ToolUseBlockParam {\n  id: string;\n\n  input: unknown;\n\n  name: string;\n\n  type: 'tool_use';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: CacheControlEphemeral | null;\n}\n\nexport interface URLImageSource {\n  type: 'url';\n\n  url: string;\n}\n\nexport interface URLPDFSource {\n  type: 'url';\n\n  url: string;\n}\n\nexport interface Usage {\n  /**\n   * Breakdown of cached tokens by TTL\n   */\n  cache_creation: CacheCreation | null;\n\n  /**\n   * The number of input tokens used to create the cache entry.\n   */\n  cache_creation_input_tokens: number | null;\n\n  /**\n   * The number of input tokens read from the cache.\n   */\n  cache_read_input_tokens: number | null;\n\n  /**\n   * The number of input tokens which were used.\n   */\n  input_tokens: number;\n\n  /**\n   * The number of output tokens which were used.\n   */\n  output_tokens: number;\n\n  /**\n   * The number of server tool requests.\n   */\n  server_tool_use: ServerToolUsage | null;\n\n  /**\n   * If the request used the priority, standard, or batch tier.\n   */\n  service_tier: 'standard' | 'priority' | 'batch' | null;\n}\n\nexport interface WebSearchResultBlock {\n  encrypted_content: string;\n\n  page_age: string | null;\n\n  title: string;\n\n  type: 'web_search_result';\n\n  url: string;\n}\n\nexport interface WebSearchResultBlockParam {\n  encrypted_content: string;\n\n  title: string;\n\n  type: 'web_search_result';\n\n  url: string;\n\n  page_age?: string | null;\n}\n\nexport interface WebSearchTool20250305 {\n  /**\n   * Name of the tool.\n   *\n   * This is how the tool will be called by the model and in `tool_use` blocks.\n   */\n  name: 'web_search';\n\n  type: 'web_search_20250305';\n\n  /**\n   * If provided, only these domains will be included in results. Cannot be used\n   * alongside `blocked_domains`.\n   */\n  allowed_domains?: Array<string> | null;\n\n  /**\n   * If provided, these domains will never appear in results. Cannot be used\n   * alongside `allowed_domains`.\n   */\n  blocked_domains?: Array<string> | null;\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: CacheControlEphemeral | null;\n\n  /**\n   * Maximum number of times the tool can be used in the API request.\n   */\n  max_uses?: number | null;\n\n  /**\n   * Parameters for the user's location. Used to provide more relevant search\n   * results.\n   */\n  user_location?: WebSearchTool20250305.UserLocation | null;\n}\n\nexport namespace WebSearchTool20250305 {\n  /**\n   * Parameters for the user's location. Used to provide more relevant search\n   * results.\n   */\n  export interface UserLocation {\n    type: 'approximate';\n\n    /**\n     * The city of the user.\n     */\n    city?: string | null;\n\n    /**\n     * The two letter\n     * [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the\n     * user.\n     */\n    country?: string | null;\n\n    /**\n     * The region of the user.\n     */\n    region?: string | null;\n\n    /**\n     * The [IANA timezone](https://nodatime.org/TimeZones) of the user.\n     */\n    timezone?: string | null;\n  }\n}\n\nexport interface WebSearchToolRequestError {\n  error_code:\n    | 'invalid_tool_input'\n    | 'unavailable'\n    | 'max_uses_exceeded'\n    | 'too_many_requests'\n    | 'query_too_long';\n\n  type: 'web_search_tool_result_error';\n}\n\nexport interface WebSearchToolResultBlock {\n  content: WebSearchToolResultBlockContent;\n\n  tool_use_id: string;\n\n  type: 'web_search_tool_result';\n}\n\nexport type WebSearchToolResultBlockContent = WebSearchToolResultError | Array<WebSearchResultBlock>;\n\nexport interface WebSearchToolResultBlockParam {\n  content: WebSearchToolResultBlockParamContent;\n\n  tool_use_id: string;\n\n  type: 'web_search_tool_result';\n\n  /**\n   * Create a cache control breakpoint at this content block.\n   */\n  cache_control?: CacheControlEphemeral | null;\n}\n\nexport type WebSearchToolResultBlockParamContent =\n  | Array<WebSearchResultBlockParam>\n  | WebSearchToolRequestError;\n\nexport interface WebSearchToolResultError {\n  error_code:\n    | 'invalid_tool_input'\n    | 'unavailable'\n    | 'max_uses_exceeded'\n    | 'too_many_requests'\n    | 'query_too_long';\n\n  type: 'web_search_tool_result_error';\n}\n\nexport type MessageStreamEvent = RawMessageStreamEvent;\n\nexport type MessageStartEvent = RawMessageStartEvent;\n\nexport type MessageDeltaEvent = RawMessageDeltaEvent;\n\nexport type MessageStopEvent = RawMessageStopEvent;\n\nexport type ContentBlockStartEvent = RawContentBlockStartEvent;\n\nexport type ContentBlockDeltaEvent = RawContentBlockDeltaEvent;\n\nexport type ContentBlockStopEvent = RawContentBlockStopEvent;\n\nexport type MessageCreateParams = MessageCreateParamsNonStreaming | MessageCreateParamsStreaming;\n\nexport interface MessageCreateParamsBase {\n  /**\n   * The maximum number of tokens to generate before stopping.\n   *\n   * Note that our models may stop _before_ reaching this maximum. This parameter\n   * only specifies the absolute maximum number of tokens to generate.\n   *\n   * Different models have different maximum values for this parameter. See\n   * [models](https://docs.claude.com/en/docs/models-overview) for details.\n   */\n  max_tokens: number;\n\n  /**\n   * Input messages.\n   *\n   * Our models are trained to operate on alternating `user` and `assistant`\n   * conversational turns. When creating a new `Message`, you specify the prior\n   * conversational turns with the `messages` parameter, and the model then generates\n   * the next `Message` in the conversation. Consecutive `user` or `assistant` turns\n   * in your request will be combined into a single turn.\n   *\n   * Each input message must be an object with a `role` and `content`. You can\n   * specify a single `user`-role message, or you can include multiple `user` and\n   * `assistant` messages.\n   *\n   * If the final message uses the `assistant` role, the response content will\n   * continue immediately from the content in that message. This can be used to\n   * constrain part of the model's response.\n   *\n   * Example with a single `user` message:\n   *\n   * ```json\n   * [{ \"role\": \"user\", \"content\": \"Hello, Claude\" }]\n   * ```\n   *\n   * Example with multiple conversational turns:\n   *\n   * ```json\n   * [\n   *   { \"role\": \"user\", \"content\": \"Hello there.\" },\n   *   { \"role\": \"assistant\", \"content\": \"Hi, I'm Claude. How can I help you?\" },\n   *   { \"role\": \"user\", \"content\": \"Can you explain LLMs in plain English?\" }\n   * ]\n   * ```\n   *\n   * Example with a partially-filled response from Claude:\n   *\n   * ```json\n   * [\n   *   {\n   *     \"role\": \"user\",\n   *     \"content\": \"What's the Greek name for Sun? (A) Sol (B) Helios (C) Sun\"\n   *   },\n   *   { \"role\": \"assistant\", \"content\": \"The best answer is (\" }\n   * ]\n   * ```\n   *\n   * Each input message `content` may be either a single `string` or an array of\n   * content blocks, where each block has a specific `type`. Using a `string` for\n   * `content` is shorthand for an array of one content block of type `\"text\"`. The\n   * following input messages are equivalent:\n   *\n   * ```json\n   * { \"role\": \"user\", \"content\": \"Hello, Claude\" }\n   * ```\n   *\n   * ```json\n   * { \"role\": \"user\", \"content\": [{ \"type\": \"text\", \"text\": \"Hello, Claude\" }] }\n   * ```\n   *\n   * See [input examples](https://docs.claude.com/en/api/messages-examples).\n   *\n   * Note that if you want to include a\n   * [system prompt](https://docs.claude.com/en/docs/system-prompts), you can use the\n   * top-level `system` parameter — there is no `\"system\"` role for input messages in\n   * the Messages API.\n   *\n   * There is a limit of 100,000 messages in a single request.\n   */\n  messages: Array<MessageParam>;\n\n  /**\n   * The model that will complete your prompt.\\n\\nSee\n   * [models](https://docs.anthropic.com/en/docs/models-overview) for additional\n   * details and options.\n   */\n  model: Model;\n\n  /**\n   * An object describing metadata about the request.\n   */\n  metadata?: Metadata;\n\n  /**\n   * Determines whether to use priority capacity (if available) or standard capacity\n   * for this request.\n   *\n   * Anthropic offers different levels of service for your API requests. See\n   * [service-tiers](https://docs.claude.com/en/api/service-tiers) for details.\n   */\n  service_tier?: 'auto' | 'standard_only';\n\n  /**\n   * Custom text sequences that will cause the model to stop generating.\n   *\n   * Our models will normally stop when they have naturally completed their turn,\n   * which will result in a response `stop_reason` of `\"end_turn\"`.\n   *\n   * If you want the model to stop generating when it encounters custom strings of\n   * text, you can use the `stop_sequences` parameter. If the model encounters one of\n   * the custom sequences, the response `stop_reason` value will be `\"stop_sequence\"`\n   * and the response `stop_sequence` value will contain the matched stop sequence.\n   */\n  stop_sequences?: Array<string>;\n\n  /**\n   * Whether to incrementally stream the response using server-sent events.\n   *\n   * See [streaming](https://docs.claude.com/en/api/messages-streaming) for details.\n   */\n  stream?: boolean;\n\n  /**\n   * System prompt.\n   *\n   * A system prompt is a way of providing context and instructions to Claude, such\n   * as specifying a particular goal or role. See our\n   * [guide to system prompts](https://docs.claude.com/en/docs/system-prompts).\n   */\n  system?: string | Array<TextBlockParam>;\n\n  /**\n   * Amount of randomness injected into the response.\n   *\n   * Defaults to `1.0`. Ranges from `0.0` to `1.0`. Use `temperature` closer to `0.0`\n   * for analytical / multiple choice, and closer to `1.0` for creative and\n   * generative tasks.\n   *\n   * Note that even with `temperature` of `0.0`, the results will not be fully\n   * deterministic.\n   */\n  temperature?: number;\n\n  /**\n   * Configuration for enabling Claude's extended thinking.\n   *\n   * When enabled, responses include `thinking` content blocks showing Claude's\n   * thinking process before the final answer. Requires a minimum budget of 1,024\n   * tokens and counts towards your `max_tokens` limit.\n   *\n   * See\n   * [extended thinking](https://docs.claude.com/en/docs/build-with-claude/extended-thinking)\n   * for details.\n   */\n  thinking?: ThinkingConfigParam;\n\n  /**\n   * How the model should use the provided tools. The model can use a specific tool,\n   * any available tool, decide by itself, or not use tools at all.\n   */\n  tool_choice?: ToolChoice;\n\n  /**\n   * Definitions of tools that the model may use.\n   *\n   * If you include `tools` in your API request, the model may return `tool_use`\n   * content blocks that represent the model's use of those tools. You can then run\n   * those tools using the tool input generated by the model and then optionally\n   * return results back to the model using `tool_result` content blocks.\n   *\n   * There are two types of tools: **client tools** and **server tools**. The\n   * behavior described below applies to client tools. For\n   * [server tools](https://docs.claude.com/en/docs/agents-and-tools/tool-use/overview#server-tools),\n   * see their individual documentation as each has its own behavior (e.g., the\n   * [web search tool](https://docs.claude.com/en/docs/agents-and-tools/tool-use/web-search-tool)).\n   *\n   * Each tool definition includes:\n   *\n   * - `name`: Name of the tool.\n   * - `description`: Optional, but strongly-recommended description of the tool.\n   * - `input_schema`: [JSON schema](https://json-schema.org/draft/2020-12) for the\n   *   tool `input` shape that the model will produce in `tool_use` output content\n   *   blocks.\n   *\n   * For example, if you defined `tools` as:\n   *\n   * ```json\n   * [\n   *   {\n   *     \"name\": \"get_stock_price\",\n   *     \"description\": \"Get the current stock price for a given ticker symbol.\",\n   *     \"input_schema\": {\n   *       \"type\": \"object\",\n   *       \"properties\": {\n   *         \"ticker\": {\n   *           \"type\": \"string\",\n   *           \"description\": \"The stock ticker symbol, e.g. AAPL for Apple Inc.\"\n   *         }\n   *       },\n   *       \"required\": [\"ticker\"]\n   *     }\n   *   }\n   * ]\n   * ```\n   *\n   * And then asked the model \"What's the S&P 500 at today?\", the model might produce\n   * `tool_use` content blocks in the response like this:\n   *\n   * ```json\n   * [\n   *   {\n   *     \"type\": \"tool_use\",\n   *     \"id\": \"toolu_01D7FLrfh4GYq7yT1ULFeyMV\",\n   *     \"name\": \"get_stock_price\",\n   *     \"input\": { \"ticker\": \"^GSPC\" }\n   *   }\n   * ]\n   * ```\n   *\n   * You might then run your `get_stock_price` tool with `{\"ticker\": \"^GSPC\"}` as an\n   * input, and return the following back to the model in a subsequent `user`\n   * message:\n   *\n   * ```json\n   * [\n   *   {\n   *     \"type\": \"tool_result\",\n   *     \"tool_use_id\": \"toolu_01D7FLrfh4GYq7yT1ULFeyMV\",\n   *     \"content\": \"259.75 USD\"\n   *   }\n   * ]\n   * ```\n   *\n   * Tools can be used for workflows that include running client-side tools and\n   * functions, or more generally whenever you want the model to produce a particular\n   * JSON structure of output.\n   *\n   * See our [guide](https://docs.claude.com/en/docs/tool-use) for more details.\n   */\n  tools?: Array<ToolUnion>;\n\n  /**\n   * Only sample from the top K options for each subsequent token.\n   *\n   * Used to remove \"long tail\" low probability responses.\n   * [Learn more technical details here](https://towardsdatascience.com/how-to-sample-from-language-models-682bceb97277).\n   *\n   * Recommended for advanced use cases only. You usually only need to use\n   * `temperature`.\n   */\n  top_k?: number;\n\n  /**\n   * Use nucleus sampling.\n   *\n   * In nucleus sampling, we compute the cumulative distribution over all the options\n   * for each subsequent token in decreasing probability order and cut it off once it\n   * reaches a particular probability specified by `top_p`. You should either alter\n   * `temperature` or `top_p`, but not both.\n   *\n   * Recommended for advanced use cases only. You usually only need to use\n   * `temperature`.\n   */\n  top_p?: number;\n}\n\nexport namespace MessageCreateParams {\n  export type MessageCreateParamsNonStreaming = MessagesAPI.MessageCreateParamsNonStreaming;\n  export type MessageCreateParamsStreaming = MessagesAPI.MessageCreateParamsStreaming;\n}\n\nexport interface MessageCreateParamsNonStreaming extends MessageCreateParamsBase {\n  /**\n   * Whether to incrementally stream the response using server-sent events.\n   *\n   * See [streaming](https://docs.claude.com/en/api/messages-streaming) for details.\n   */\n  stream?: false;\n}\n\nexport interface MessageCreateParamsStreaming extends MessageCreateParamsBase {\n  /**\n   * Whether to incrementally stream the response using server-sent events.\n   *\n   * See [streaming](https://docs.claude.com/en/api/messages-streaming) for details.\n   */\n  stream: true;\n}\n\nexport type MessageStreamParams = MessageCreateParamsBase;\n\nexport interface MessageCountTokensParams {\n  /**\n   * Input messages.\n   *\n   * Our models are trained to operate on alternating `user` and `assistant`\n   * conversational turns. When creating a new `Message`, you specify the prior\n   * conversational turns with the `messages` parameter, and the model then generates\n   * the next `Message` in the conversation. Consecutive `user` or `assistant` turns\n   * in your request will be combined into a single turn.\n   *\n   * Each input message must be an object with a `role` and `content`. You can\n   * specify a single `user`-role message, or you can include multiple `user` and\n   * `assistant` messages.\n   *\n   * If the final message uses the `assistant` role, the response content will\n   * continue immediately from the content in that message. This can be used to\n   * constrain part of the model's response.\n   *\n   * Example with a single `user` message:\n   *\n   * ```json\n   * [{ \"role\": \"user\", \"content\": \"Hello, Claude\" }]\n   * ```\n   *\n   * Example with multiple conversational turns:\n   *\n   * ```json\n   * [\n   *   { \"role\": \"user\", \"content\": \"Hello there.\" },\n   *   { \"role\": \"assistant\", \"content\": \"Hi, I'm Claude. How can I help you?\" },\n   *   { \"role\": \"user\", \"content\": \"Can you explain LLMs in plain English?\" }\n   * ]\n   * ```\n   *\n   * Example with a partially-filled response from Claude:\n   *\n   * ```json\n   * [\n   *   {\n   *     \"role\": \"user\",\n   *     \"content\": \"What's the Greek name for Sun? (A) Sol (B) Helios (C) Sun\"\n   *   },\n   *   { \"role\": \"assistant\", \"content\": \"The best answer is (\" }\n   * ]\n   * ```\n   *\n   * Each input message `content` may be either a single `string` or an array of\n   * content blocks, where each block has a specific `type`. Using a `string` for\n   * `content` is shorthand for an array of one content block of type `\"text\"`. The\n   * following input messages are equivalent:\n   *\n   * ```json\n   * { \"role\": \"user\", \"content\": \"Hello, Claude\" }\n   * ```\n   *\n   * ```json\n   * { \"role\": \"user\", \"content\": [{ \"type\": \"text\", \"text\": \"Hello, Claude\" }] }\n   * ```\n   *\n   * See [input examples](https://docs.claude.com/en/api/messages-examples).\n   *\n   * Note that if you want to include a\n   * [system prompt](https://docs.claude.com/en/docs/system-prompts), you can use the\n   * top-level `system` parameter — there is no `\"system\"` role for input messages in\n   * the Messages API.\n   *\n   * There is a limit of 100,000 messages in a single request.\n   */\n  messages: Array<MessageParam>;\n\n  /**\n   * The model that will complete your prompt.\\n\\nSee\n   * [models](https://docs.anthropic.com/en/docs/models-overview) for additional\n   * details and options.\n   */\n  model: Model;\n\n  /**\n   * System prompt.\n   *\n   * A system prompt is a way of providing context and instructions to Claude, such\n   * as specifying a particular goal or role. See our\n   * [guide to system prompts](https://docs.claude.com/en/docs/system-prompts).\n   */\n  system?: string | Array<TextBlockParam>;\n\n  /**\n   * Configuration for enabling Claude's extended thinking.\n   *\n   * When enabled, responses include `thinking` content blocks showing Claude's\n   * thinking process before the final answer. Requires a minimum budget of 1,024\n   * tokens and counts towards your `max_tokens` limit.\n   *\n   * See\n   * [extended thinking](https://docs.claude.com/en/docs/build-with-claude/extended-thinking)\n   * for details.\n   */\n  thinking?: ThinkingConfigParam;\n\n  /**\n   * How the model should use the provided tools. The model can use a specific tool,\n   * any available tool, decide by itself, or not use tools at all.\n   */\n  tool_choice?: ToolChoice;\n\n  /**\n   * Definitions of tools that the model may use.\n   *\n   * If you include `tools` in your API request, the model may return `tool_use`\n   * content blocks that represent the model's use of those tools. You can then run\n   * those tools using the tool input generated by the model and then optionally\n   * return results back to the model using `tool_result` content blocks.\n   *\n   * There are two types of tools: **client tools** and **server tools**. The\n   * behavior described below applies to client tools. For\n   * [server tools](https://docs.claude.com/en/docs/agents-and-tools/tool-use/overview#server-tools),\n   * see their individual documentation as each has its own behavior (e.g., the\n   * [web search tool](https://docs.claude.com/en/docs/agents-and-tools/tool-use/web-search-tool)).\n   *\n   * Each tool definition includes:\n   *\n   * - `name`: Name of the tool.\n   * - `description`: Optional, but strongly-recommended description of the tool.\n   * - `input_schema`: [JSON schema](https://json-schema.org/draft/2020-12) for the\n   *   tool `input` shape that the model will produce in `tool_use` output content\n   *   blocks.\n   *\n   * For example, if you defined `tools` as:\n   *\n   * ```json\n   * [\n   *   {\n   *     \"name\": \"get_stock_price\",\n   *     \"description\": \"Get the current stock price for a given ticker symbol.\",\n   *     \"input_schema\": {\n   *       \"type\": \"object\",\n   *       \"properties\": {\n   *         \"ticker\": {\n   *           \"type\": \"string\",\n   *           \"description\": \"The stock ticker symbol, e.g. AAPL for Apple Inc.\"\n   *         }\n   *       },\n   *       \"required\": [\"ticker\"]\n   *     }\n   *   }\n   * ]\n   * ```\n   *\n   * And then asked the model \"What's the S&P 500 at today?\", the model might produce\n   * `tool_use` content blocks in the response like this:\n   *\n   * ```json\n   * [\n   *   {\n   *     \"type\": \"tool_use\",\n   *     \"id\": \"toolu_01D7FLrfh4GYq7yT1ULFeyMV\",\n   *     \"name\": \"get_stock_price\",\n   *     \"input\": { \"ticker\": \"^GSPC\" }\n   *   }\n   * ]\n   * ```\n   *\n   * You might then run your `get_stock_price` tool with `{\"ticker\": \"^GSPC\"}` as an\n   * input, and return the following back to the model in a subsequent `user`\n   * message:\n   *\n   * ```json\n   * [\n   *   {\n   *     \"type\": \"tool_result\",\n   *     \"tool_use_id\": \"toolu_01D7FLrfh4GYq7yT1ULFeyMV\",\n   *     \"content\": \"259.75 USD\"\n   *   }\n   * ]\n   * ```\n   *\n   * Tools can be used for workflows that include running client-side tools and\n   * functions, or more generally whenever you want the model to produce a particular\n   * JSON structure of output.\n   *\n   * See our [guide](https://docs.claude.com/en/docs/tool-use) for more details.\n   */\n  tools?: Array<MessageCountTokensTool>;\n}\n\nMessages.Batches = Batches;\n\nexport declare namespace Messages {\n  export {\n    type Base64ImageSource as Base64ImageSource,\n    type Base64PDFSource as Base64PDFSource,\n    type CacheControlEphemeral as CacheControlEphemeral,\n    type CacheCreation as CacheCreation,\n    type CitationCharLocation as CitationCharLocation,\n    type CitationCharLocationParam as CitationCharLocationParam,\n    type CitationContentBlockLocation as CitationContentBlockLocation,\n    type CitationContentBlockLocationParam as CitationContentBlockLocationParam,\n    type CitationPageLocation as CitationPageLocation,\n    type CitationPageLocationParam as CitationPageLocationParam,\n    type CitationSearchResultLocationParam as CitationSearchResultLocationParam,\n    type CitationWebSearchResultLocationParam as CitationWebSearchResultLocationParam,\n    type CitationsConfigParam as CitationsConfigParam,\n    type CitationsDelta as CitationsDelta,\n    type CitationsSearchResultLocation as CitationsSearchResultLocation,\n    type CitationsWebSearchResultLocation as CitationsWebSearchResultLocation,\n    type ContentBlock as ContentBlock,\n    type ContentBlockParam as ContentBlockParam,\n    type ContentBlockStartEvent as ContentBlockStartEvent,\n    type ContentBlockStopEvent as ContentBlockStopEvent,\n    type ContentBlockSource as ContentBlockSource,\n    type ContentBlockSourceContent as ContentBlockSourceContent,\n    type DocumentBlockParam as DocumentBlockParam,\n    type ImageBlockParam as ImageBlockParam,\n    type InputJSONDelta as InputJSONDelta,\n    type Message as Message,\n    type MessageCountTokensTool as MessageCountTokensTool,\n    type MessageDeltaEvent as MessageDeltaEvent,\n    type MessageDeltaUsage as MessageDeltaUsage,\n    type MessageParam as MessageParam,\n    type MessageTokensCount as MessageTokensCount,\n    type Metadata as Metadata,\n    type Model as Model,\n    type PlainTextSource as PlainTextSource,\n    type RawContentBlockDelta as RawContentBlockDelta,\n    type RawContentBlockDeltaEvent as RawContentBlockDeltaEvent,\n    type RawContentBlockStartEvent as RawContentBlockStartEvent,\n    type RawContentBlockStopEvent as RawContentBlockStopEvent,\n    type RawMessageDeltaEvent as RawMessageDeltaEvent,\n    type RawMessageStartEvent as RawMessageStartEvent,\n    type RawMessageStopEvent as RawMessageStopEvent,\n    type RawMessageStreamEvent as RawMessageStreamEvent,\n    type RedactedThinkingBlock as RedactedThinkingBlock,\n    type RedactedThinkingBlockParam as RedactedThinkingBlockParam,\n    type SearchResultBlockParam as SearchResultBlockParam,\n    type ServerToolUsage as ServerToolUsage,\n    type ServerToolUseBlock as ServerToolUseBlock,\n    type ServerToolUseBlockParam as ServerToolUseBlockParam,\n    type SignatureDelta as SignatureDelta,\n    type StopReason as StopReason,\n    type TextBlock as TextBlock,\n    type TextBlockParam as TextBlockParam,\n    type TextCitation as TextCitation,\n    type TextCitationParam as TextCitationParam,\n    type TextDelta as TextDelta,\n    type ThinkingBlock as ThinkingBlock,\n    type ThinkingBlockParam as ThinkingBlockParam,\n    type ThinkingConfigDisabled as ThinkingConfigDisabled,\n    type ThinkingConfigEnabled as ThinkingConfigEnabled,\n    type ThinkingConfigParam as ThinkingConfigParam,\n    type ThinkingDelta as ThinkingDelta,\n    type Tool as Tool,\n    type ToolBash20250124 as ToolBash20250124,\n    type ToolChoice as ToolChoice,\n    type ToolChoiceAny as ToolChoiceAny,\n    type ToolChoiceAuto as ToolChoiceAuto,\n    type ToolChoiceNone as ToolChoiceNone,\n    type ToolChoiceTool as ToolChoiceTool,\n    type ToolResultBlockParam as ToolResultBlockParam,\n    type ToolTextEditor20250124 as ToolTextEditor20250124,\n    type ToolTextEditor20250429 as ToolTextEditor20250429,\n    type ToolTextEditor20250728 as ToolTextEditor20250728,\n    type ToolUnion as ToolUnion,\n    type ToolUseBlock as ToolUseBlock,\n    type ToolUseBlockParam as ToolUseBlockParam,\n    type URLImageSource as URLImageSource,\n    type URLPDFSource as URLPDFSource,\n    type Usage as Usage,\n    type WebSearchResultBlock as WebSearchResultBlock,\n    type WebSearchResultBlockParam as WebSearchResultBlockParam,\n    type WebSearchTool20250305 as WebSearchTool20250305,\n    type WebSearchToolRequestError as WebSearchToolRequestError,\n    type WebSearchToolResultBlock as WebSearchToolResultBlock,\n    type WebSearchToolResultBlockContent as WebSearchToolResultBlockContent,\n    type WebSearchToolResultBlockParam as WebSearchToolResultBlockParam,\n    type WebSearchToolResultBlockParamContent as WebSearchToolResultBlockParamContent,\n    type WebSearchToolResultError as WebSearchToolResultError,\n    type MessageStreamEvent as MessageStreamEvent,\n    type MessageStartEvent as MessageStartEvent,\n    type MessageStopEvent as MessageStopEvent,\n    type ContentBlockDeltaEvent as ContentBlockDeltaEvent,\n    type MessageCreateParams as MessageCreateParams,\n    type MessageCreateParamsNonStreaming as MessageCreateParamsNonStreaming,\n    type MessageCreateParamsStreaming as MessageCreateParamsStreaming,\n    type MessageStreamParams as MessageStreamParams,\n    type MessageCountTokensParams as MessageCountTokensParams,\n  };\n\n  export {\n    Batches as Batches,\n    type DeletedMessageBatch as DeletedMessageBatch,\n    type MessageBatch as MessageBatch,\n    type MessageBatchCanceledResult as MessageBatchCanceledResult,\n    type MessageBatchErroredResult as MessageBatchErroredResult,\n    type MessageBatchExpiredResult as MessageBatchExpiredResult,\n    type MessageBatchIndividualResponse as MessageBatchIndividualResponse,\n    type MessageBatchRequestCounts as MessageBatchRequestCounts,\n    type MessageBatchResult as MessageBatchResult,\n    type MessageBatchSucceededResult as MessageBatchSucceededResult,\n    type MessageBatchesPage as MessageBatchesPage,\n    type BatchCreateParams as BatchCreateParams,\n    type BatchListParams as BatchListParams,\n  };\n}\n"],"names":[],"mappings":"AAAA,sFAAsF;;;;;OAG/E,EAAE,WAAW,EAAE;OAGf,EAAE,aAAa,EAAE;OACjB,KAAK,UAAU;OAkBf,EAAE,yBAAyB,EAAE;;;;;;AAE9B,MAAO,QAAS,SAAQ,8KAAW;IAAzC,aAAA;;QACE,IAAA,CAAA,OAAO,GAAuB,IAAI,UAAU,CAAC,+KAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAiFrE,CAAC;IApDC,MAAM,CACJ,IAAyB,EACzB,OAAwB,EAAA;QAExB,IAAI,IAAI,CAAC,KAAK,IAAI,iBAAiB,EAAE,CAAC;YACpC,OAAO,CAAC,IAAI,CACV,CAAA,WAAA,EAAc,IAAI,CAAC,KAAK,CAAA,8CAAA,EACtB,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAC9B,CAAA,8HAAA,CAAgI,CACjI,CAAC;QACJ,CAAC;QACD,IAAI,OAAO,GAAI,IAAI,CAAC,OAAe,CAAC,QAAQ,CAAC,OAAwB,CAAC;QACtE,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,IAAI,EAAE,CAAC;YACpC,MAAM,qBAAqB,GAAG,iMAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC;YACjF,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,4BAA4B,CAAC,IAAI,CAAC,UAAU,EAAE,qBAAqB,CAAC,CAAC;QAC9F,CAAC;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE;YACvC,IAAI;YACJ,OAAO,EAAE,OAAO,IAAI,MAAM;YAC1B,GAAG,OAAO;YACV,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,KAAK;SAC7B,CAAoE,CAAC;IACxE,CAAC;IAED;;OAEG,CACH,MAAM,CAAC,IAAyB,EAAE,OAAwB,EAAA;QACxD,OAAO,oLAAa,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IAC1D,CAAC;IAED;;;;;;;;;;;;;;;;;OAiBG,CACH,WAAW,CAAC,IAA8B,EAAE,OAAwB,EAAA;QAClE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,2BAA2B,EAAE;YAAE,IAAI;YAAE,GAAG,OAAO;QAAA,CAAE,CAAC,CAAC;IAC9E,CAAC;CACF;AAsdD,MAAM,iBAAiB,GAEnB;IACF,YAAY,EAAE,oBAAoB;IAClC,iBAAiB,EAAE,oBAAoB;IACvC,oBAAoB,EAAE,oBAAoB;IAC1C,yBAAyB,EAAE,oBAAoB;IAC/C,oBAAoB,EAAE,oBAAoB;IAC1C,0BAA0B,EAAE,iBAAiB;IAC7C,wBAAwB,EAAE,mBAAmB;IAC7C,YAAY,EAAE,iBAAiB;IAC/B,YAAY,EAAE,iBAAiB;IAC/B,0BAA0B,EAAE,qBAAqB;IACjD,4BAA4B,EAAE,qBAAqB;CACpD,CAAC;AAmqCF,QAAQ,CAAC,OAAO,GAAG,0LAAO,CAAC","debugId":null}},
    {"offset": {"line": 4878, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/resources/models.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/resources/models.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../core/resource';\nimport * as BetaAPI from './beta/beta';\nimport { APIPromise } from '../core/api-promise';\nimport { Page, type PageParams, PagePromise } from '../core/pagination';\nimport { buildHeaders } from '../internal/headers';\nimport { RequestOptions } from '../internal/request-options';\nimport { path } from '../internal/utils/path';\n\nexport class Models extends APIResource {\n  /**\n   * Get a specific model.\n   *\n   * The Models API response can be used to determine information about a specific\n   * model or resolve a model alias to a model ID.\n   */\n  retrieve(\n    modelID: string,\n    params: ModelRetrieveParams | null | undefined = {},\n    options?: RequestOptions,\n  ): APIPromise<ModelInfo> {\n    const { betas } = params ?? {};\n    return this._client.get(path`/v1/models/${modelID}`, {\n      ...options,\n      headers: buildHeaders([\n        { ...(betas?.toString() != null ? { 'anthropic-beta': betas?.toString() } : undefined) },\n        options?.headers,\n      ]),\n    });\n  }\n\n  /**\n   * List available models.\n   *\n   * The Models API response can be used to determine which models are available for\n   * use in the API. More recently released models are listed first.\n   */\n  list(\n    params: ModelListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<ModelInfosPage, ModelInfo> {\n    const { betas, ...query } = params ?? {};\n    return this._client.getAPIList('/v1/models', Page<ModelInfo>, {\n      query,\n      ...options,\n      headers: buildHeaders([\n        { ...(betas?.toString() != null ? { 'anthropic-beta': betas?.toString() } : undefined) },\n        options?.headers,\n      ]),\n    });\n  }\n}\n\nexport type ModelInfosPage = Page<ModelInfo>;\n\nexport interface ModelInfo {\n  /**\n   * Unique model identifier.\n   */\n  id: string;\n\n  /**\n   * RFC 3339 datetime string representing the time at which the model was released.\n   * May be set to an epoch value if the release date is unknown.\n   */\n  created_at: string;\n\n  /**\n   * A human-readable name for the model.\n   */\n  display_name: string;\n\n  /**\n   * Object type.\n   *\n   * For Models, this is always `\"model\"`.\n   */\n  type: 'model';\n}\n\nexport interface ModelRetrieveParams {\n  /**\n   * Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport interface ModelListParams extends PageParams {\n  /**\n   * Header param: Optional header to specify the beta version(s) you want to use.\n   */\n  betas?: Array<BetaAPI.AnthropicBeta>;\n}\n\nexport declare namespace Models {\n  export {\n    type ModelInfo as ModelInfo,\n    type ModelInfosPage as ModelInfosPage,\n    type ModelRetrieveParams as ModelRetrieveParams,\n    type ModelListParams as ModelListParams,\n  };\n}\n"],"names":[],"mappings":"AAAA,sFAAsF;;;;;OAE/E,EAAE,WAAW,EAAE;OAGf,EAAE,IAAI,EAAgC;OACtC,EAAE,YAAY,EAAE;OAEhB,EAAE,IAAI,EAAE;;;;;AAET,MAAO,MAAO,SAAQ,8KAAW;IACrC;;;;;OAKG,CACH,QAAQ,CACN,OAAe,EACf,SAAiD,CAAA,CAAE,EACnD,OAAwB,EAAA;QAExB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAA,CAAE,CAAC;QAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,gLAAI,CAAA,WAAA,EAAc,OAAO,CAAA,CAAE,EAAE;YACnD,GAAG,OAAO;YACV,OAAO,MAAE,kLAAY,EAAC;gBACpB;oBAAE,GAAG,AAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;wBAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE;oBAAA,CAAE,CAAC,CAAC,CAAC,SAAS,CAAC;gBAAA,CAAE;gBACxF,OAAO,EAAE,OAAO;aACjB,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG,CACH,IAAI,CACF,SAA6C,CAAA,CAAE,EAC/C,OAAwB,EAAA;QAExB,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,MAAM,IAAI,CAAA,CAAE,CAAC;QACzC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,EAAE,yKAAe,CAAA,CAAE;YAC5D,KAAK;YACL,GAAG,OAAO;YACV,OAAO,MAAE,kLAAY,EAAC;gBACpB;oBAAE,GAAG,AAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;wBAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE;oBAAA,CAAE,CAAC,CAAC,CAAC,SAAS,CAAC;gBAAA,CAAE;gBACxF,OAAO,EAAE,OAAO;aACjB,CAAC;SACH,CAAC,CAAC;IACL,CAAC;CACF","debugId":null}},
    {"offset": {"line": 4936, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/resources/index.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/resources/index.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nexport * from './shared';\nexport {\n  Beta,\n  type AnthropicBeta,\n  type BetaAPIError,\n  type BetaAuthenticationError,\n  type BetaBillingError,\n  type BetaError,\n  type BetaErrorResponse,\n  type BetaGatewayTimeoutError,\n  type BetaInvalidRequestError,\n  type BetaNotFoundError,\n  type BetaOverloadedError,\n  type BetaPermissionError,\n  type BetaRateLimitError,\n} from './beta/beta';\nexport {\n  Completions,\n  type Completion,\n  type CompletionCreateParams,\n  type CompletionCreateParamsNonStreaming,\n  type CompletionCreateParamsStreaming,\n} from './completions';\nexport {\n  Messages,\n  type Base64ImageSource,\n  type Base64PDFSource,\n  type CacheControlEphemeral,\n  type CacheCreation,\n  type CitationCharLocation,\n  type CitationCharLocationParam,\n  type CitationContentBlockLocation,\n  type CitationContentBlockLocationParam,\n  type CitationPageLocation,\n  type CitationPageLocationParam,\n  type CitationSearchResultLocationParam,\n  type CitationWebSearchResultLocationParam,\n  type CitationsConfigParam,\n  type CitationsDelta,\n  type CitationsSearchResultLocation,\n  type CitationsWebSearchResultLocation,\n  type ContentBlock,\n  type ContentBlockParam,\n  type ContentBlockStartEvent,\n  type ContentBlockStopEvent,\n  type ContentBlockSource,\n  type ContentBlockSourceContent,\n  type DocumentBlockParam,\n  type ImageBlockParam,\n  type InputJSONDelta,\n  type Message,\n  type MessageCountTokensTool,\n  type MessageDeltaEvent,\n  type MessageDeltaUsage,\n  type MessageParam,\n  type MessageStreamParams,\n  type MessageTokensCount,\n  type Metadata,\n  type Model,\n  type PlainTextSource,\n  type RawContentBlockDelta,\n  type RawContentBlockDeltaEvent,\n  type RawContentBlockStartEvent,\n  type RawContentBlockStopEvent,\n  type RawMessageDeltaEvent,\n  type RawMessageStartEvent,\n  type RawMessageStopEvent,\n  type RawMessageStreamEvent,\n  type RedactedThinkingBlock,\n  type RedactedThinkingBlockParam,\n  type SearchResultBlockParam,\n  type ServerToolUsage,\n  type ServerToolUseBlock,\n  type ServerToolUseBlockParam,\n  type SignatureDelta,\n  type StopReason,\n  type TextBlock,\n  type TextBlockParam,\n  type TextCitation,\n  type TextCitationParam,\n  type TextDelta,\n  type ThinkingBlock,\n  type ThinkingBlockParam,\n  type ThinkingConfigDisabled,\n  type ThinkingConfigEnabled,\n  type ThinkingConfigParam,\n  type ThinkingDelta,\n  type Tool,\n  type ToolBash20250124,\n  type ToolChoice,\n  type ToolChoiceAny,\n  type ToolChoiceAuto,\n  type ToolChoiceNone,\n  type ToolChoiceTool,\n  type ToolResultBlockParam,\n  type ToolTextEditor20250124,\n  type ToolTextEditor20250429,\n  type ToolTextEditor20250728,\n  type ToolUnion,\n  type ToolUseBlock,\n  type ToolUseBlockParam,\n  type URLImageSource,\n  type URLPDFSource,\n  type Usage,\n  type WebSearchResultBlock,\n  type WebSearchResultBlockParam,\n  type WebSearchTool20250305,\n  type WebSearchToolRequestError,\n  type WebSearchToolResultBlock,\n  type WebSearchToolResultBlockContent,\n  type WebSearchToolResultBlockParam,\n  type WebSearchToolResultBlockParamContent,\n  type WebSearchToolResultError,\n  type MessageCreateParams,\n  type MessageCreateParamsNonStreaming,\n  type MessageCreateParamsStreaming,\n  type MessageCountTokensParams,\n} from './messages/messages';\nexport {\n  Models,\n  type ModelInfo,\n  type ModelRetrieveParams,\n  type ModelListParams,\n  type ModelInfosPage,\n} from './models';\n"],"names":[],"mappings":"AAAA,sFAAsF;;;OAG/E,EACL,IAAI,GAaL;OACM,EACL,WAAW,GAKZ;OACM,EACL,QAAQ,GA6FT;OACM,EACL,MAAM,GAKP","debugId":null}},
    {"offset": {"line": 4952, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/internal/utils/env.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/internal/utils/env.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env: string): string | undefined => {\n  if (typeof (globalThis as any).process !== 'undefined') {\n    return (globalThis as any).process.env?.[env]?.trim() ?? undefined;\n  }\n  if (typeof (globalThis as any).Deno !== 'undefined') {\n    return (globalThis as any).Deno.env?.get?.(env)?.trim();\n  }\n  return undefined;\n};\n"],"names":[],"mappings":"AAAA,sFAAsF;AAEtF;;;;;;GAMG;;;;AACI,MAAM,OAAO,GAAG,CAAC,GAAW,EAAsB,EAAE;IACzD,IAAI,OAAQ,UAAkB,CAAC,OAAO,KAAK,WAAW,EAAE,CAAC;QACvD,OAAQ,UAAkB,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,SAAS,CAAC;IACrE,CAAC;IACD,IAAI,OAAQ,UAAkB,CAAC,IAAI,KAAK,WAAW,EAAE,CAAC;QACpD,OAAQ,UAAkB,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC;IAC1D,CAAC;IACD,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 4976, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/client.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/client.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport type { RequestInit, RequestInfo, BodyInit } from './internal/builtin-types';\nimport type { HTTPMethod, PromiseOrValue, MergedRequestInit, FinalizedRequestInit } from './internal/types';\nimport { uuid4 } from './internal/utils/uuid';\nimport { validatePositiveInteger, isAbsoluteURL, safeJSON } from './internal/utils/values';\nimport { sleep } from './internal/utils/sleep';\nexport type { Logger, LogLevel } from './internal/utils/log';\nimport { castToError, isAbortError } from './internal/errors';\nimport type { APIResponseProps } from './internal/parse';\nimport { getPlatformHeaders } from './internal/detect-platform';\nimport * as Shims from './internal/shims';\nimport * as Opts from './internal/request-options';\nimport { VERSION } from './version';\nimport * as Errors from './core/error';\nimport * as Pagination from './core/pagination';\nimport {\n  type PageParams,\n  PageResponse,\n  type PageCursorParams,\n  PageCursorResponse,\n  type TokenPageParams,\n  TokenPageResponse,\n} from './core/pagination';\nimport * as Uploads from './core/uploads';\nimport * as API from './resources/index';\nimport { APIPromise } from './core/api-promise';\nimport {\n  Completion,\n  CompletionCreateParams,\n  CompletionCreateParamsNonStreaming,\n  CompletionCreateParamsStreaming,\n  Completions,\n} from './resources/completions';\nimport { ModelInfo, ModelInfosPage, ModelListParams, ModelRetrieveParams, Models } from './resources/models';\nimport {\n  AnthropicBeta,\n  Beta,\n  BetaAPIError,\n  BetaAuthenticationError,\n  BetaBillingError,\n  BetaError,\n  BetaErrorResponse,\n  BetaGatewayTimeoutError,\n  BetaInvalidRequestError,\n  BetaNotFoundError,\n  BetaOverloadedError,\n  BetaPermissionError,\n  BetaRateLimitError,\n} from './resources/beta/beta';\nimport {\n  Base64ImageSource,\n  Base64PDFSource,\n  CacheControlEphemeral,\n  CacheCreation,\n  CitationCharLocation,\n  CitationCharLocationParam,\n  CitationContentBlockLocation,\n  CitationContentBlockLocationParam,\n  CitationPageLocation,\n  CitationPageLocationParam,\n  CitationSearchResultLocationParam,\n  CitationWebSearchResultLocationParam,\n  CitationsConfigParam,\n  CitationsDelta,\n  CitationsSearchResultLocation,\n  CitationsWebSearchResultLocation,\n  ContentBlock,\n  ContentBlockDeltaEvent,\n  ContentBlockParam,\n  ContentBlockStartEvent,\n  ContentBlockStopEvent,\n  ContentBlockSource,\n  ContentBlockSourceContent,\n  DocumentBlockParam,\n  ImageBlockParam,\n  InputJSONDelta,\n  Message,\n  MessageStreamParams,\n  MessageCountTokensParams,\n  MessageCountTokensTool,\n  MessageCreateParams,\n  MessageCreateParamsNonStreaming,\n  MessageCreateParamsStreaming,\n  MessageDeltaEvent,\n  MessageDeltaUsage,\n  MessageParam,\n  MessageStartEvent,\n  MessageStopEvent,\n  MessageStreamEvent,\n  MessageTokensCount,\n  Messages,\n  Metadata,\n  Model,\n  PlainTextSource,\n  RawContentBlockDelta,\n  RawContentBlockDeltaEvent,\n  RawContentBlockStartEvent,\n  RawContentBlockStopEvent,\n  RawMessageDeltaEvent,\n  RawMessageStartEvent,\n  RawMessageStopEvent,\n  RawMessageStreamEvent,\n  RedactedThinkingBlock,\n  RedactedThinkingBlockParam,\n  SearchResultBlockParam,\n  ServerToolUsage,\n  ServerToolUseBlock,\n  ServerToolUseBlockParam,\n  SignatureDelta,\n  StopReason,\n  TextBlock,\n  TextBlockParam,\n  TextCitation,\n  TextCitationParam,\n  TextDelta,\n  ThinkingBlock,\n  ThinkingBlockParam,\n  ThinkingConfigDisabled,\n  ThinkingConfigEnabled,\n  ThinkingConfigParam,\n  ThinkingDelta,\n  Tool,\n  ToolBash20250124,\n  ToolChoice,\n  ToolChoiceAny,\n  ToolChoiceAuto,\n  ToolChoiceNone,\n  ToolChoiceTool,\n  ToolResultBlockParam,\n  ToolTextEditor20250124,\n  ToolTextEditor20250429,\n  ToolTextEditor20250728,\n  ToolUnion,\n  ToolUseBlock,\n  ToolUseBlockParam,\n  URLImageSource,\n  URLPDFSource,\n  Usage,\n  WebSearchResultBlock,\n  WebSearchResultBlockParam,\n  WebSearchTool20250305,\n  WebSearchToolRequestError,\n  WebSearchToolResultBlock,\n  WebSearchToolResultBlockContent,\n  WebSearchToolResultBlockParam,\n  WebSearchToolResultBlockParamContent,\n  WebSearchToolResultError,\n} from './resources/messages/messages';\nimport { type Fetch } from './internal/builtin-types';\nimport { isRunningInBrowser } from './internal/detect-platform';\nimport { HeadersLike, NullableHeaders, buildHeaders } from './internal/headers';\nimport { FinalRequestOptions, RequestOptions } from './internal/request-options';\nimport { readEnv } from './internal/utils/env';\nimport {\n  type LogLevel,\n  type Logger,\n  formatRequestDetails,\n  loggerFor,\n  parseLogLevel,\n} from './internal/utils/log';\nimport { isEmptyObj } from './internal/utils/values';\n\nexport interface ClientOptions {\n  /**\n   * Defaults to process.env['ANTHROPIC_API_KEY'].\n   */\n  apiKey?: string | null | undefined;\n\n  /**\n   * Defaults to process.env['ANTHROPIC_AUTH_TOKEN'].\n   */\n  authToken?: string | null | undefined;\n\n  /**\n   * Override the default base URL for the API, e.g., \"https://api.example.com/v2/\"\n   *\n   * Defaults to process.env['ANTHROPIC_BASE_URL'].\n   */\n  baseURL?: string | null | undefined;\n\n  /**\n   * The maximum amount of time (in milliseconds) that the client should wait for a response\n   * from the server before timing out a single request.\n   *\n   * Note that request timeouts are retried by default, so in a worst-case scenario you may wait\n   * much longer than this timeout before the promise succeeds or fails.\n   *\n   * @unit milliseconds\n   */\n  timeout?: number | undefined;\n  /**\n   * Additional `RequestInit` options to be passed to `fetch` calls.\n   * Properties will be overridden by per-request `fetchOptions`.\n   */\n  fetchOptions?: MergedRequestInit | undefined;\n\n  /**\n   * Specify a custom `fetch` function implementation.\n   *\n   * If not provided, we expect that `fetch` is defined globally.\n   */\n  fetch?: Fetch | undefined;\n\n  /**\n   * The maximum number of times that the client will retry a request in case of a\n   * temporary failure, like a network error or a 5XX error from the server.\n   *\n   * @default 2\n   */\n  maxRetries?: number | undefined;\n\n  /**\n   * Default headers to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * header to `null` in request options.\n   */\n  defaultHeaders?: HeadersLike | undefined;\n\n  /**\n   * Default query parameters to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * param to `undefined` in request options.\n   */\n  defaultQuery?: Record<string, string | undefined> | undefined;\n\n  /**\n   * By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   * Only set this option to `true` if you understand the risks and have appropriate mitigations in place.\n   */\n  dangerouslyAllowBrowser?: boolean | undefined;\n\n  /**\n   * Set the log level.\n   *\n   * Defaults to process.env['ANTHROPIC_LOG'] or 'warn' if it isn't set.\n   */\n  logLevel?: LogLevel | undefined;\n\n  /**\n   * Set the logger.\n   *\n   * Defaults to globalThis.console.\n   */\n  logger?: Logger | undefined;\n}\n\nexport const HUMAN_PROMPT = '\\\\n\\\\nHuman:';\nexport const AI_PROMPT = '\\\\n\\\\nAssistant:';\n\n/**\n * Base class for Anthropic API clients.\n */\nexport class BaseAnthropic {\n  apiKey: string | null;\n  authToken: string | null;\n\n  baseURL: string;\n  maxRetries: number;\n  timeout: number;\n  logger: Logger | undefined;\n  logLevel: LogLevel | undefined;\n  fetchOptions: MergedRequestInit | undefined;\n\n  private fetch: Fetch;\n  #encoder: Opts.RequestEncoder;\n  protected idempotencyHeader?: string;\n  private _options: ClientOptions;\n\n  /**\n   * API Client for interfacing with the Anthropic API.\n   *\n   * @param {string | null | undefined} [opts.apiKey=process.env['ANTHROPIC_API_KEY'] ?? null]\n   * @param {string | null | undefined} [opts.authToken=process.env['ANTHROPIC_AUTH_TOKEN'] ?? null]\n   * @param {string} [opts.baseURL=process.env['ANTHROPIC_BASE_URL'] ?? https://api.anthropic.com] - Override the default base URL for the API.\n   * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {MergedRequestInit} [opts.fetchOptions] - Additional `RequestInit` options to be passed to `fetch` calls.\n   * @param {Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {HeadersLike} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {Record<string, string | undefined>} opts.defaultQuery - Default query parameters to include with every request to the API.\n   * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   */\n  constructor({\n    baseURL = readEnv('ANTHROPIC_BASE_URL'),\n    apiKey = readEnv('ANTHROPIC_API_KEY') ?? null,\n    authToken = readEnv('ANTHROPIC_AUTH_TOKEN') ?? null,\n    ...opts\n  }: ClientOptions = {}) {\n    const options: ClientOptions = {\n      apiKey,\n      authToken,\n      ...opts,\n      baseURL: baseURL || `https://api.anthropic.com`,\n    };\n\n    if (!options.dangerouslyAllowBrowser && isRunningInBrowser()) {\n      throw new Errors.AnthropicError(\n        \"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew Anthropic({ apiKey, dangerouslyAllowBrowser: true });\\n\",\n      );\n    }\n\n    this.baseURL = options.baseURL!;\n    this.timeout = options.timeout ?? BaseAnthropic.DEFAULT_TIMEOUT /* 10 minutes */;\n    this.logger = options.logger ?? console;\n    const defaultLogLevel = 'warn';\n    // Set default logLevel early so that we can log a warning in parseLogLevel.\n    this.logLevel = defaultLogLevel;\n    this.logLevel =\n      parseLogLevel(options.logLevel, 'ClientOptions.logLevel', this) ??\n      parseLogLevel(readEnv('ANTHROPIC_LOG'), \"process.env['ANTHROPIC_LOG']\", this) ??\n      defaultLogLevel;\n    this.fetchOptions = options.fetchOptions;\n    this.maxRetries = options.maxRetries ?? 2;\n    this.fetch = options.fetch ?? Shims.getDefaultFetch();\n    this.#encoder = Opts.FallbackEncoder;\n\n    this._options = options;\n\n    this.apiKey = apiKey;\n    this.authToken = authToken;\n  }\n\n  /**\n   * Create a new client instance re-using the same options given to the current client with optional overriding.\n   */\n  withOptions(options: Partial<ClientOptions>): this {\n    const client = new (this.constructor as any as new (props: ClientOptions) => typeof this)({\n      ...this._options,\n      baseURL: this.baseURL,\n      maxRetries: this.maxRetries,\n      timeout: this.timeout,\n      logger: this.logger,\n      logLevel: this.logLevel,\n      fetch: this.fetch,\n      fetchOptions: this.fetchOptions,\n      apiKey: this.apiKey,\n      authToken: this.authToken,\n      ...options,\n    });\n    return client;\n  }\n\n  /**\n   * Check whether the base URL is set to its default.\n   */\n  #baseURLOverridden(): boolean {\n    return this.baseURL !== 'https://api.anthropic.com';\n  }\n\n  protected defaultQuery(): Record<string, string | undefined> | undefined {\n    return this._options.defaultQuery;\n  }\n\n  protected validateHeaders({ values, nulls }: NullableHeaders) {\n    if (this.apiKey && values.get('x-api-key')) {\n      return;\n    }\n    if (nulls.has('x-api-key')) {\n      return;\n    }\n\n    if (this.authToken && values.get('authorization')) {\n      return;\n    }\n    if (nulls.has('authorization')) {\n      return;\n    }\n\n    throw new Error(\n      'Could not resolve authentication method. Expected either apiKey or authToken to be set. Or for one of the \"X-Api-Key\" or \"Authorization\" headers to be explicitly omitted',\n    );\n  }\n\n  protected async authHeaders(opts: FinalRequestOptions): Promise<NullableHeaders | undefined> {\n    return buildHeaders([await this.apiKeyAuth(opts), await this.bearerAuth(opts)]);\n  }\n\n  protected async apiKeyAuth(opts: FinalRequestOptions): Promise<NullableHeaders | undefined> {\n    if (this.apiKey == null) {\n      return undefined;\n    }\n    return buildHeaders([{ 'X-Api-Key': this.apiKey }]);\n  }\n\n  protected async bearerAuth(opts: FinalRequestOptions): Promise<NullableHeaders | undefined> {\n    if (this.authToken == null) {\n      return undefined;\n    }\n    return buildHeaders([{ Authorization: `Bearer ${this.authToken}` }]);\n  }\n\n  /**\n   * Basic re-implementation of `qs.stringify` for primitive types.\n   */\n  protected stringifyQuery(query: Record<string, unknown>): string {\n    return Object.entries(query)\n      .filter(([_, value]) => typeof value !== 'undefined')\n      .map(([key, value]) => {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n          return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n        }\n        if (value === null) {\n          return `${encodeURIComponent(key)}=`;\n        }\n        throw new Errors.AnthropicError(\n          `Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`,\n        );\n      })\n      .join('&');\n  }\n\n  private getUserAgent(): string {\n    return `${this.constructor.name}/JS ${VERSION}`;\n  }\n\n  protected defaultIdempotencyKey(): string {\n    return `stainless-node-retry-${uuid4()}`;\n  }\n\n  protected makeStatusError(\n    status: number,\n    error: Object,\n    message: string | undefined,\n    headers: Headers,\n  ): Errors.APIError {\n    return Errors.APIError.generate(status, error, message, headers);\n  }\n\n  buildURL(\n    path: string,\n    query: Record<string, unknown> | null | undefined,\n    defaultBaseURL?: string | undefined,\n  ): string {\n    const baseURL = (!this.#baseURLOverridden() && defaultBaseURL) || this.baseURL;\n    const url =\n      isAbsoluteURL(path) ?\n        new URL(path)\n      : new URL(baseURL + (baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n\n    const defaultQuery = this.defaultQuery();\n    if (!isEmptyObj(defaultQuery)) {\n      query = { ...defaultQuery, ...query };\n    }\n\n    if (typeof query === 'object' && query && !Array.isArray(query)) {\n      url.search = this.stringifyQuery(query as Record<string, unknown>);\n    }\n\n    return url.toString();\n  }\n\n  _calculateNonstreamingTimeout(maxTokens: number): number {\n    const defaultTimeout = 10 * 60;\n    const expectedTimeout = (60 * 60 * maxTokens) / 128_000;\n    if (expectedTimeout > defaultTimeout) {\n      throw new Errors.AnthropicError(\n        'Streaming is required for operations that may take longer than 10 minutes. ' +\n          'See https://github.com/anthropics/anthropic-sdk-typescript#streaming-responses for more details',\n      );\n    }\n    return defaultTimeout * 1000;\n  }\n\n  /**\n   * Used as a callback for mutating the given `FinalRequestOptions` object.\n   */\n  protected async prepareOptions(options: FinalRequestOptions): Promise<void> {}\n\n  /**\n   * Used as a callback for mutating the given `RequestInit` object.\n   *\n   * This is useful for cases where you want to add certain headers based off of\n   * the request properties, e.g. `method` or `url`.\n   */\n  protected async prepareRequest(\n    request: RequestInit,\n    { url, options }: { url: string; options: FinalRequestOptions },\n  ): Promise<void> {}\n\n  get<Rsp>(path: string, opts?: PromiseOrValue<RequestOptions>): APIPromise<Rsp> {\n    return this.methodRequest('get', path, opts);\n  }\n\n  post<Rsp>(path: string, opts?: PromiseOrValue<RequestOptions>): APIPromise<Rsp> {\n    return this.methodRequest('post', path, opts);\n  }\n\n  patch<Rsp>(path: string, opts?: PromiseOrValue<RequestOptions>): APIPromise<Rsp> {\n    return this.methodRequest('patch', path, opts);\n  }\n\n  put<Rsp>(path: string, opts?: PromiseOrValue<RequestOptions>): APIPromise<Rsp> {\n    return this.methodRequest('put', path, opts);\n  }\n\n  delete<Rsp>(path: string, opts?: PromiseOrValue<RequestOptions>): APIPromise<Rsp> {\n    return this.methodRequest('delete', path, opts);\n  }\n\n  private methodRequest<Rsp>(\n    method: HTTPMethod,\n    path: string,\n    opts?: PromiseOrValue<RequestOptions>,\n  ): APIPromise<Rsp> {\n    return this.request(\n      Promise.resolve(opts).then((opts) => {\n        return { method, path, ...opts };\n      }),\n    );\n  }\n\n  request<Rsp>(\n    options: PromiseOrValue<FinalRequestOptions>,\n    remainingRetries: number | null = null,\n  ): APIPromise<Rsp> {\n    return new APIPromise(this, this.makeRequest(options, remainingRetries, undefined));\n  }\n\n  private async makeRequest(\n    optionsInput: PromiseOrValue<FinalRequestOptions>,\n    retriesRemaining: number | null,\n    retryOfRequestLogID: string | undefined,\n  ): Promise<APIResponseProps> {\n    const options = await optionsInput;\n    const maxRetries = options.maxRetries ?? this.maxRetries;\n    if (retriesRemaining == null) {\n      retriesRemaining = maxRetries;\n    }\n\n    await this.prepareOptions(options);\n\n    const { req, url, timeout } = await this.buildRequest(options, {\n      retryCount: maxRetries - retriesRemaining,\n    });\n\n    await this.prepareRequest(req, { url, options });\n\n    /** Not an API request ID, just for correlating local log entries. */\n    const requestLogID = 'log_' + ((Math.random() * (1 << 24)) | 0).toString(16).padStart(6, '0');\n    const retryLogStr = retryOfRequestLogID === undefined ? '' : `, retryOf: ${retryOfRequestLogID}`;\n    const startTime = Date.now();\n\n    loggerFor(this).debug(\n      `[${requestLogID}] sending request`,\n      formatRequestDetails({\n        retryOfRequestLogID,\n        method: options.method,\n        url,\n        options,\n        headers: req.headers,\n      }),\n    );\n\n    if (options.signal?.aborted) {\n      throw new Errors.APIUserAbortError();\n    }\n\n    const controller = new AbortController();\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n    const headersTime = Date.now();\n\n    if (response instanceof globalThis.Error) {\n      const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n      if (options.signal?.aborted) {\n        throw new Errors.APIUserAbortError();\n      }\n      // detect native connection timeout errors\n      // deno throws \"TypeError: error sending request for url (https://example/): client error (Connect): tcp connect error: Operation timed out (os error 60): Operation timed out (os error 60)\"\n      // undici throws \"TypeError: fetch failed\" with cause \"ConnectTimeoutError: Connect Timeout Error (attempted address: example:443, timeout: 1ms)\"\n      // others do not provide enough information to distinguish timeouts from other connection errors\n      const isTimeout =\n        isAbortError(response) ||\n        /timed? ?out/i.test(String(response) + ('cause' in response ? String(response.cause) : ''));\n      if (retriesRemaining) {\n        loggerFor(this).info(\n          `[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} - ${retryMessage}`,\n        );\n        loggerFor(this).debug(\n          `[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} (${retryMessage})`,\n          formatRequestDetails({\n            retryOfRequestLogID,\n            url,\n            durationMs: headersTime - startTime,\n            message: response.message,\n          }),\n        );\n        return this.retryRequest(options, retriesRemaining, retryOfRequestLogID ?? requestLogID);\n      }\n      loggerFor(this).info(\n        `[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} - error; no more retries left`,\n      );\n      loggerFor(this).debug(\n        `[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} (error; no more retries left)`,\n        formatRequestDetails({\n          retryOfRequestLogID,\n          url,\n          durationMs: headersTime - startTime,\n          message: response.message,\n        }),\n      );\n      if (isTimeout) {\n        throw new Errors.APIConnectionTimeoutError();\n      }\n      throw new Errors.APIConnectionError({ cause: response });\n    }\n\n    const specialHeaders = [...response.headers.entries()]\n      .filter(([name]) => name === 'request-id')\n      .map(([name, value]) => ', ' + name + ': ' + JSON.stringify(value))\n      .join('');\n    const responseInfo = `[${requestLogID}${retryLogStr}${specialHeaders}] ${req.method} ${url} ${\n      response.ok ? 'succeeded' : 'failed'\n    } with status ${response.status} in ${headersTime - startTime}ms`;\n\n    if (!response.ok) {\n      const shouldRetry = await this.shouldRetry(response);\n      if (retriesRemaining && shouldRetry) {\n        const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n\n        // We don't need the body of this response.\n        await Shims.CancelReadableStream(response.body);\n        loggerFor(this).info(`${responseInfo} - ${retryMessage}`);\n        loggerFor(this).debug(\n          `[${requestLogID}] response error (${retryMessage})`,\n          formatRequestDetails({\n            retryOfRequestLogID,\n            url: response.url,\n            status: response.status,\n            headers: response.headers,\n            durationMs: headersTime - startTime,\n          }),\n        );\n        return this.retryRequest(\n          options,\n          retriesRemaining,\n          retryOfRequestLogID ?? requestLogID,\n          response.headers,\n        );\n      }\n\n      const retryMessage = shouldRetry ? `error; no more retries left` : `error; not retryable`;\n\n      loggerFor(this).info(`${responseInfo} - ${retryMessage}`);\n\n      const errText = await response.text().catch((err: any) => castToError(err).message);\n      const errJSON = safeJSON(errText);\n      const errMessage = errJSON ? undefined : errText;\n\n      loggerFor(this).debug(\n        `[${requestLogID}] response error (${retryMessage})`,\n        formatRequestDetails({\n          retryOfRequestLogID,\n          url: response.url,\n          status: response.status,\n          headers: response.headers,\n          message: errMessage,\n          durationMs: Date.now() - startTime,\n        }),\n      );\n\n      const err = this.makeStatusError(response.status, errJSON, errMessage, response.headers);\n      throw err;\n    }\n\n    loggerFor(this).info(responseInfo);\n    loggerFor(this).debug(\n      `[${requestLogID}] response start`,\n      formatRequestDetails({\n        retryOfRequestLogID,\n        url: response.url,\n        status: response.status,\n        headers: response.headers,\n        durationMs: headersTime - startTime,\n      }),\n    );\n\n    return { response, options, controller, requestLogID, retryOfRequestLogID, startTime };\n  }\n\n  getAPIList<Item, PageClass extends Pagination.AbstractPage<Item> = Pagination.AbstractPage<Item>>(\n    path: string,\n    Page: new (...args: any[]) => PageClass,\n    opts?: RequestOptions,\n  ): Pagination.PagePromise<PageClass, Item> {\n    return this.requestAPIList(Page, { method: 'get', path, ...opts });\n  }\n\n  requestAPIList<\n    Item = unknown,\n    PageClass extends Pagination.AbstractPage<Item> = Pagination.AbstractPage<Item>,\n  >(\n    Page: new (...args: ConstructorParameters<typeof Pagination.AbstractPage>) => PageClass,\n    options: FinalRequestOptions,\n  ): Pagination.PagePromise<PageClass, Item> {\n    const request = this.makeRequest(options, null, undefined);\n    return new Pagination.PagePromise<PageClass, Item>(this as any as Anthropic, request, Page);\n  }\n\n  async fetchWithTimeout(\n    url: RequestInfo,\n    init: RequestInit | undefined,\n    ms: number,\n    controller: AbortController,\n  ): Promise<Response> {\n    const { signal, method, ...options } = init || {};\n    if (signal) signal.addEventListener('abort', () => controller.abort());\n\n    const timeout = setTimeout(() => controller.abort(), ms);\n\n    const isReadableBody =\n      ((globalThis as any).ReadableStream && options.body instanceof (globalThis as any).ReadableStream) ||\n      (typeof options.body === 'object' && options.body !== null && Symbol.asyncIterator in options.body);\n\n    const fetchOptions: RequestInit = {\n      signal: controller.signal as any,\n      ...(isReadableBody ? { duplex: 'half' } : {}),\n      method: 'GET',\n      ...options,\n    };\n    if (method) {\n      // Custom methods like 'patch' need to be uppercased\n      // See https://github.com/nodejs/undici/issues/2294\n      fetchOptions.method = method.toUpperCase();\n    }\n\n    try {\n      // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n      return await this.fetch.call(undefined, url, fetchOptions);\n    } finally {\n      clearTimeout(timeout);\n    }\n  }\n\n  private async shouldRetry(response: Response): Promise<boolean> {\n    // Note this is not a standard header.\n    const shouldRetryHeader = response.headers.get('x-should-retry');\n\n    // If the server explicitly says whether or not to retry, obey.\n    if (shouldRetryHeader === 'true') return true;\n    if (shouldRetryHeader === 'false') return false;\n\n    // Retry on request timeouts.\n    if (response.status === 408) return true;\n\n    // Retry on lock timeouts.\n    if (response.status === 409) return true;\n\n    // Retry on rate limits.\n    if (response.status === 429) return true;\n\n    // Retry internal errors.\n    if (response.status >= 500) return true;\n\n    return false;\n  }\n\n  private async retryRequest(\n    options: FinalRequestOptions,\n    retriesRemaining: number,\n    requestLogID: string,\n    responseHeaders?: Headers | undefined,\n  ): Promise<APIResponseProps> {\n    let timeoutMillis: number | undefined;\n\n    // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n    const retryAfterMillisHeader = responseHeaders?.get('retry-after-ms');\n    if (retryAfterMillisHeader) {\n      const timeoutMs = parseFloat(retryAfterMillisHeader);\n      if (!Number.isNaN(timeoutMs)) {\n        timeoutMillis = timeoutMs;\n      }\n    }\n\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n    const retryAfterHeader = responseHeaders?.get('retry-after');\n    if (retryAfterHeader && !timeoutMillis) {\n      const timeoutSeconds = parseFloat(retryAfterHeader);\n      if (!Number.isNaN(timeoutSeconds)) {\n        timeoutMillis = timeoutSeconds * 1000;\n      } else {\n        timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n      }\n    }\n\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n    // just do what it says, but otherwise calculate a default\n    if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n      const maxRetries = options.maxRetries ?? this.maxRetries;\n      timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n    }\n    await sleep(timeoutMillis);\n\n    return this.makeRequest(options, retriesRemaining - 1, requestLogID);\n  }\n\n  private calculateDefaultRetryTimeoutMillis(retriesRemaining: number, maxRetries: number): number {\n    const initialRetryDelay = 0.5;\n    const maxRetryDelay = 8.0;\n\n    const numRetries = maxRetries - retriesRemaining;\n\n    // Apply exponential backoff, but not more than the max.\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n\n    // Apply some jitter, take up to at most 25 percent of the retry time.\n    const jitter = 1 - Math.random() * 0.25;\n\n    return sleepSeconds * jitter * 1000;\n  }\n\n  public calculateNonstreamingTimeout(maxTokens: number, maxNonstreamingTokens?: number): number {\n    const maxTime = 60 * 60 * 1000; // 60 minutes\n    const defaultTime = 60 * 10 * 1000; // 10 minutes\n\n    const expectedTime = (maxTime * maxTokens) / 128000;\n    if (expectedTime > defaultTime || (maxNonstreamingTokens != null && maxTokens > maxNonstreamingTokens)) {\n      throw new Errors.AnthropicError(\n        'Streaming is required for operations that may take longer than 10 minutes. See https://github.com/anthropics/anthropic-sdk-typescript#long-requests for more details',\n      );\n    }\n\n    return defaultTime;\n  }\n\n  async buildRequest(\n    inputOptions: FinalRequestOptions,\n    { retryCount = 0 }: { retryCount?: number } = {},\n  ): Promise<{ req: FinalizedRequestInit; url: string; timeout: number }> {\n    const options = { ...inputOptions };\n    const { method, path, query, defaultBaseURL } = options;\n\n    const url = this.buildURL(path!, query as Record<string, unknown>, defaultBaseURL);\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n    options.timeout = options.timeout ?? this.timeout;\n    const { bodyHeaders, body } = this.buildBody({ options });\n    const reqHeaders = await this.buildHeaders({ options: inputOptions, method, bodyHeaders, retryCount });\n\n    const req: FinalizedRequestInit = {\n      method,\n      headers: reqHeaders,\n      ...(options.signal && { signal: options.signal }),\n      ...((globalThis as any).ReadableStream &&\n        body instanceof (globalThis as any).ReadableStream && { duplex: 'half' }),\n      ...(body && { body }),\n      ...((this.fetchOptions as any) ?? {}),\n      ...((options.fetchOptions as any) ?? {}),\n    };\n\n    return { req, url, timeout: options.timeout };\n  }\n\n  private async buildHeaders({\n    options,\n    method,\n    bodyHeaders,\n    retryCount,\n  }: {\n    options: FinalRequestOptions;\n    method: HTTPMethod;\n    bodyHeaders: HeadersLike;\n    retryCount: number;\n  }): Promise<Headers> {\n    let idempotencyHeaders: HeadersLike = {};\n    if (this.idempotencyHeader && method !== 'get') {\n      if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n      idempotencyHeaders[this.idempotencyHeader] = options.idempotencyKey;\n    }\n\n    const headers = buildHeaders([\n      idempotencyHeaders,\n      {\n        Accept: 'application/json',\n        'User-Agent': this.getUserAgent(),\n        'X-Stainless-Retry-Count': String(retryCount),\n        ...(options.timeout ? { 'X-Stainless-Timeout': String(Math.trunc(options.timeout / 1000)) } : {}),\n        ...getPlatformHeaders(),\n        ...(this._options.dangerouslyAllowBrowser ?\n          { 'anthropic-dangerous-direct-browser-access': 'true' }\n        : undefined),\n        'anthropic-version': '2023-06-01',\n      },\n      await this.authHeaders(options),\n      this._options.defaultHeaders,\n      bodyHeaders,\n      options.headers,\n    ]);\n\n    this.validateHeaders(headers);\n\n    return headers.values;\n  }\n\n  private buildBody({ options: { body, headers: rawHeaders } }: { options: FinalRequestOptions }): {\n    bodyHeaders: HeadersLike;\n    body: BodyInit | undefined;\n  } {\n    if (!body) {\n      return { bodyHeaders: undefined, body: undefined };\n    }\n    const headers = buildHeaders([rawHeaders]);\n    if (\n      // Pass raw type verbatim\n      ArrayBuffer.isView(body) ||\n      body instanceof ArrayBuffer ||\n      body instanceof DataView ||\n      (typeof body === 'string' &&\n        // Preserve legacy string encoding behavior for now\n        headers.values.has('content-type')) ||\n      // `Blob` is superset of `File`\n      ((globalThis as any).Blob && body instanceof (globalThis as any).Blob) ||\n      // `FormData` -> `multipart/form-data`\n      body instanceof FormData ||\n      // `URLSearchParams` -> `application/x-www-form-urlencoded`\n      body instanceof URLSearchParams ||\n      // Send chunked stream (each chunk has own `length`)\n      ((globalThis as any).ReadableStream && body instanceof (globalThis as any).ReadableStream)\n    ) {\n      return { bodyHeaders: undefined, body: body as BodyInit };\n    } else if (\n      typeof body === 'object' &&\n      (Symbol.asyncIterator in body ||\n        (Symbol.iterator in body && 'next' in body && typeof body.next === 'function'))\n    ) {\n      return { bodyHeaders: undefined, body: Shims.ReadableStreamFrom(body as AsyncIterable<Uint8Array>) };\n    } else {\n      return this.#encoder({ body, headers });\n    }\n  }\n\n  static Anthropic = this;\n  static HUMAN_PROMPT = HUMAN_PROMPT;\n  static AI_PROMPT = AI_PROMPT;\n  static DEFAULT_TIMEOUT = 600000; // 10 minutes\n\n  static AnthropicError = Errors.AnthropicError;\n  static APIError = Errors.APIError;\n  static APIConnectionError = Errors.APIConnectionError;\n  static APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\n  static APIUserAbortError = Errors.APIUserAbortError;\n  static NotFoundError = Errors.NotFoundError;\n  static ConflictError = Errors.ConflictError;\n  static RateLimitError = Errors.RateLimitError;\n  static BadRequestError = Errors.BadRequestError;\n  static AuthenticationError = Errors.AuthenticationError;\n  static InternalServerError = Errors.InternalServerError;\n  static PermissionDeniedError = Errors.PermissionDeniedError;\n  static UnprocessableEntityError = Errors.UnprocessableEntityError;\n\n  static toFile = Uploads.toFile;\n}\n\n/**\n * API Client for interfacing with the Anthropic API.\n */\nexport class Anthropic extends BaseAnthropic {\n  completions: API.Completions = new API.Completions(this);\n  messages: API.Messages = new API.Messages(this);\n  models: API.Models = new API.Models(this);\n  beta: API.Beta = new API.Beta(this);\n}\n\nAnthropic.Completions = Completions;\nAnthropic.Messages = Messages;\nAnthropic.Models = Models;\nAnthropic.Beta = Beta;\n\nexport declare namespace Anthropic {\n  export type RequestOptions = Opts.RequestOptions;\n\n  export import Page = Pagination.Page;\n  export { type PageParams as PageParams, type PageResponse as PageResponse };\n\n  export import TokenPage = Pagination.TokenPage;\n  export { type TokenPageParams as TokenPageParams, type TokenPageResponse as TokenPageResponse };\n\n  export import PageCursor = Pagination.PageCursor;\n  export { type PageCursorParams as PageCursorParams, type PageCursorResponse as PageCursorResponse };\n\n  export {\n    Completions as Completions,\n    type Completion as Completion,\n    type CompletionCreateParams as CompletionCreateParams,\n    type CompletionCreateParamsNonStreaming as CompletionCreateParamsNonStreaming,\n    type CompletionCreateParamsStreaming as CompletionCreateParamsStreaming,\n  };\n\n  export {\n    Messages as Messages,\n    type Base64ImageSource as Base64ImageSource,\n    type Base64PDFSource as Base64PDFSource,\n    type CacheControlEphemeral as CacheControlEphemeral,\n    type CacheCreation as CacheCreation,\n    type CitationCharLocation as CitationCharLocation,\n    type CitationCharLocationParam as CitationCharLocationParam,\n    type CitationContentBlockLocation as CitationContentBlockLocation,\n    type CitationContentBlockLocationParam as CitationContentBlockLocationParam,\n    type CitationPageLocation as CitationPageLocation,\n    type CitationPageLocationParam as CitationPageLocationParam,\n    type CitationSearchResultLocationParam as CitationSearchResultLocationParam,\n    type CitationWebSearchResultLocationParam as CitationWebSearchResultLocationParam,\n    type CitationsConfigParam as CitationsConfigParam,\n    type CitationsDelta as CitationsDelta,\n    type CitationsSearchResultLocation as CitationsSearchResultLocation,\n    type CitationsWebSearchResultLocation as CitationsWebSearchResultLocation,\n    type ContentBlock as ContentBlock,\n    type ContentBlockDeltaEvent as ContentBlockDeltaEvent,\n    type ContentBlockParam as ContentBlockParam,\n    type ContentBlockStartEvent as ContentBlockStartEvent,\n    type ContentBlockStopEvent as ContentBlockStopEvent,\n    type ContentBlockSource as ContentBlockSource,\n    type ContentBlockSourceContent as ContentBlockSourceContent,\n    type DocumentBlockParam as DocumentBlockParam,\n    type ImageBlockParam as ImageBlockParam,\n    type InputJSONDelta as InputJSONDelta,\n    type Message as Message,\n    type MessageCountTokensTool as MessageCountTokensTool,\n    type MessageDeltaEvent as MessageDeltaEvent,\n    type MessageDeltaUsage as MessageDeltaUsage,\n    type MessageParam as MessageParam,\n    type MessageStartEvent as MessageStartEvent,\n    type MessageStopEvent as MessageStopEvent,\n    type MessageStreamEvent as MessageStreamEvent,\n    type MessageTokensCount as MessageTokensCount,\n    type Metadata as Metadata,\n    type Model as Model,\n    type PlainTextSource as PlainTextSource,\n    type RawContentBlockDelta as RawContentBlockDelta,\n    type RawContentBlockDeltaEvent as RawContentBlockDeltaEvent,\n    type RawContentBlockStartEvent as RawContentBlockStartEvent,\n    type RawContentBlockStopEvent as RawContentBlockStopEvent,\n    type RawMessageDeltaEvent as RawMessageDeltaEvent,\n    type RawMessageStartEvent as RawMessageStartEvent,\n    type RawMessageStopEvent as RawMessageStopEvent,\n    type RawMessageStreamEvent as RawMessageStreamEvent,\n    type RedactedThinkingBlock as RedactedThinkingBlock,\n    type RedactedThinkingBlockParam as RedactedThinkingBlockParam,\n    type SearchResultBlockParam as SearchResultBlockParam,\n    type ServerToolUsage as ServerToolUsage,\n    type ServerToolUseBlock as ServerToolUseBlock,\n    type ServerToolUseBlockParam as ServerToolUseBlockParam,\n    type SignatureDelta as SignatureDelta,\n    type StopReason as StopReason,\n    type TextBlock as TextBlock,\n    type TextBlockParam as TextBlockParam,\n    type TextCitation as TextCitation,\n    type TextCitationParam as TextCitationParam,\n    type TextDelta as TextDelta,\n    type ThinkingBlock as ThinkingBlock,\n    type ThinkingBlockParam as ThinkingBlockParam,\n    type ThinkingConfigDisabled as ThinkingConfigDisabled,\n    type ThinkingConfigEnabled as ThinkingConfigEnabled,\n    type ThinkingConfigParam as ThinkingConfigParam,\n    type ThinkingDelta as ThinkingDelta,\n    type Tool as Tool,\n    type ToolBash20250124 as ToolBash20250124,\n    type ToolChoice as ToolChoice,\n    type ToolChoiceAny as ToolChoiceAny,\n    type ToolChoiceAuto as ToolChoiceAuto,\n    type ToolChoiceNone as ToolChoiceNone,\n    type ToolChoiceTool as ToolChoiceTool,\n    type ToolResultBlockParam as ToolResultBlockParam,\n    type ToolTextEditor20250124 as ToolTextEditor20250124,\n    type ToolTextEditor20250429 as ToolTextEditor20250429,\n    type ToolTextEditor20250728 as ToolTextEditor20250728,\n    type ToolUnion as ToolUnion,\n    type ToolUseBlock as ToolUseBlock,\n    type ToolUseBlockParam as ToolUseBlockParam,\n    type URLImageSource as URLImageSource,\n    type URLPDFSource as URLPDFSource,\n    type Usage as Usage,\n    type WebSearchResultBlock as WebSearchResultBlock,\n    type WebSearchResultBlockParam as WebSearchResultBlockParam,\n    type WebSearchTool20250305 as WebSearchTool20250305,\n    type WebSearchToolRequestError as WebSearchToolRequestError,\n    type WebSearchToolResultBlock as WebSearchToolResultBlock,\n    type WebSearchToolResultBlockContent as WebSearchToolResultBlockContent,\n    type WebSearchToolResultBlockParam as WebSearchToolResultBlockParam,\n    type WebSearchToolResultBlockParamContent as WebSearchToolResultBlockParamContent,\n    type WebSearchToolResultError as WebSearchToolResultError,\n    type MessageCreateParams as MessageCreateParams,\n    type MessageCreateParamsNonStreaming as MessageCreateParamsNonStreaming,\n    type MessageCreateParamsStreaming as MessageCreateParamsStreaming,\n    type MessageStreamParams as MessageStreamParams,\n    type MessageCountTokensParams as MessageCountTokensParams,\n  };\n\n  export {\n    Models as Models,\n    type ModelInfo as ModelInfo,\n    type ModelInfosPage as ModelInfosPage,\n    type ModelRetrieveParams as ModelRetrieveParams,\n    type ModelListParams as ModelListParams,\n  };\n\n  export {\n    Beta as Beta,\n    type AnthropicBeta as AnthropicBeta,\n    type BetaAPIError as BetaAPIError,\n    type BetaAuthenticationError as BetaAuthenticationError,\n    type BetaBillingError as BetaBillingError,\n    type BetaError as BetaError,\n    type BetaErrorResponse as BetaErrorResponse,\n    type BetaGatewayTimeoutError as BetaGatewayTimeoutError,\n    type BetaInvalidRequestError as BetaInvalidRequestError,\n    type BetaNotFoundError as BetaNotFoundError,\n    type BetaOverloadedError as BetaOverloadedError,\n    type BetaPermissionError as BetaPermissionError,\n    type BetaRateLimitError as BetaRateLimitError,\n  };\n\n  export type APIErrorObject = API.APIErrorObject;\n  export type AuthenticationError = API.AuthenticationError;\n  export type BillingError = API.BillingError;\n  export type ErrorObject = API.ErrorObject;\n  export type ErrorResponse = API.ErrorResponse;\n  export type GatewayTimeoutError = API.GatewayTimeoutError;\n  export type InvalidRequestError = API.InvalidRequestError;\n  export type NotFoundError = API.NotFoundError;\n  export type OverloadedError = API.OverloadedError;\n  export type PermissionError = API.PermissionError;\n  export type RateLimitError = API.RateLimitError;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5573, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@anthropic-ai/sdk/index.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40anthropic-ai/sdk/src/index.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nexport { Anthropic as default } from './client';\n\nexport { type Uploadable, toFile } from './core/uploads';\nexport { APIPromise } from './core/api-promise';\nexport { BaseAnthropic, Anthropic, type ClientOptions, HUMAN_PROMPT, AI_PROMPT } from './client';\nexport { PagePromise } from './core/pagination';\nexport {\n  AnthropicError,\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n  NotFoundError,\n  ConflictError,\n  RateLimitError,\n  BadRequestError,\n  AuthenticationError,\n  InternalServerError,\n  PermissionDeniedError,\n  UnprocessableEntityError,\n} from './core/error';\n"],"names":[],"mappings":"AAAA,sFAAsF;;OAE/E,EAAE,SAAS,IAAI,OAAO,EAAE;OAExB,EAAmB,MAAM,EAAE;OAC3B,EAAE,UAAU,EAAE;OAEd,EAAE,WAAW,EAAE;OACf,EACL,cAAc,EACd,QAAQ,EACR,kBAAkB,EAClB,yBAAyB,EACzB,iBAAiB,EACjB,aAAa,EACb,aAAa,EACb,cAAc,EACd,eAAe,EACf,mBAAmB,EACnB,mBAAmB,EACnB,qBAAqB,EACrB,wBAAwB,GACzB","debugId":null}}]
}