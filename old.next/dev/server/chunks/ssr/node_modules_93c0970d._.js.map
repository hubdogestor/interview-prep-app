{
  "version": 3,
  "sources": [],
  "debugId": "afbcc1d7-47c3-ddc6-61c0-39bde99d5d31",
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,QAAQ;;KAElC;IACL,IAAIF,QAAQC,GAAG,CAACK,yBAAyB,EAAE;;SAcpC;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;QAGT,OAAO;;IAOT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/query-core/src/timeoutManager.ts"],"sourcesContent":["/**\n * {@link TimeoutManager} does not support passing arguments to the callback.\n *\n * `(_: void)` is the argument type inferred by TypeScript's default typings for\n * `setTimeout(cb, number)`.\n * If we don't accept a single void argument, then\n * `new Promise(resolve => timeoutManager.setTimeout(resolve, N))` is a type error.\n */\nexport type TimeoutCallback = (_: void) => void\n\n/**\n * Wrapping `setTimeout` is awkward from a typing perspective because platform\n * typings may extend the return type of `setTimeout`. For example, NodeJS\n * typings add `NodeJS.Timeout`; but a non-default `timeoutManager` may not be\n * able to return such a type.\n */\nexport type ManagedTimerId = number | { [Symbol.toPrimitive]: () => number }\n\n/**\n * Backend for timer functions.\n */\nexport type TimeoutProvider<TTimerId extends ManagedTimerId = ManagedTimerId> =\n  {\n    readonly setTimeout: (callback: TimeoutCallback, delay: number) => TTimerId\n    readonly clearTimeout: (timeoutId: TTimerId | undefined) => void\n\n    readonly setInterval: (callback: TimeoutCallback, delay: number) => TTimerId\n    readonly clearInterval: (intervalId: TTimerId | undefined) => void\n  }\n\nexport const defaultTimeoutProvider: TimeoutProvider<\n  ReturnType<typeof setTimeout>\n> = {\n  // We need the wrapper function syntax below instead of direct references to\n  // global setTimeout etc.\n  //\n  // BAD: `setTimeout: setTimeout`\n  // GOOD: `setTimeout: (cb, delay) => setTimeout(cb, delay)`\n  //\n  // If we use direct references here, then anything that wants to spy on or\n  // replace the global setTimeout (like tests) won't work since we'll already\n  // have a hard reference to the original implementation at the time when this\n  // file was imported.\n  setTimeout: (callback, delay) => setTimeout(callback, delay),\n  clearTimeout: (timeoutId) => clearTimeout(timeoutId),\n\n  setInterval: (callback, delay) => setInterval(callback, delay),\n  clearInterval: (intervalId) => clearInterval(intervalId),\n}\n\n/**\n * Allows customization of how timeouts are created.\n *\n * @tanstack/query-core makes liberal use of timeouts to implement `staleTime`\n * and `gcTime`. The default TimeoutManager provider uses the platform's global\n * `setTimeout` implementation, which is known to have scalability issues with\n * thousands of timeouts on the event loop.\n *\n * If you hit this limitation, consider providing a custom TimeoutProvider that\n * coalesces timeouts.\n */\nexport class TimeoutManager implements Omit<TimeoutProvider, 'name'> {\n  // We cannot have TimeoutManager<T> as we must instantiate it with a concrete\n  // type at app boot; and if we leave that type, then any new timer provider\n  // would need to support ReturnType<typeof setTimeout>, which is infeasible.\n  //\n  // We settle for type safety for the TimeoutProvider type, and accept that\n  // this class is unsafe internally to allow for extension.\n  #provider: TimeoutProvider<any> = defaultTimeoutProvider\n  #providerCalled = false\n\n  setTimeoutProvider<TTimerId extends ManagedTimerId>(\n    provider: TimeoutProvider<TTimerId>,\n  ): void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.#providerCalled && provider !== this.#provider) {\n        // After changing providers, `clearTimeout` will not work as expected for\n        // timeouts from the previous provider.\n        //\n        // Since they may allocate the same timeout ID, clearTimeout may cancel an\n        // arbitrary different timeout, or unexpected no-op.\n        //\n        // We could protect against this by mixing the timeout ID bits\n        // deterministically with some per-provider bits.\n        //\n        // We could internally queue `setTimeout` calls to `TimeoutManager` until\n        // some API call to set the initial provider.\n        console.error(\n          `[timeoutManager]: Switching provider after calls to previous provider might result in unexpected behavior.`,\n          { previous: this.#provider, provider },\n        )\n      }\n    }\n\n    this.#provider = provider\n    if (process.env.NODE_ENV !== 'production') {\n      this.#providerCalled = false\n    }\n  }\n\n  setTimeout(callback: TimeoutCallback, delay: number): ManagedTimerId {\n    if (process.env.NODE_ENV !== 'production') {\n      this.#providerCalled = true\n    }\n    return this.#provider.setTimeout(callback, delay)\n  }\n\n  clearTimeout(timeoutId: ManagedTimerId | undefined): void {\n    this.#provider.clearTimeout(timeoutId)\n  }\n\n  setInterval(callback: TimeoutCallback, delay: number): ManagedTimerId {\n    if (process.env.NODE_ENV !== 'production') {\n      this.#providerCalled = true\n    }\n    return this.#provider.setInterval(callback, delay)\n  }\n\n  clearInterval(intervalId: ManagedTimerId | undefined): void {\n    this.#provider.clearInterval(intervalId)\n  }\n}\n\nexport const timeoutManager = new TimeoutManager()\n\n/**\n * In many cases code wants to delay to the next event loop tick; this is not\n * mediated by {@link timeoutManager}.\n *\n * This function is provided to make auditing the `tanstack/query-core` for\n * incorrect use of system `setTimeout` easier.\n */\nexport function systemSetTimeoutZero(callback: TimeoutCallback): void {\n  setTimeout(callback, 0)\n}\n"],"names":[],"mappings":";;;;;;;;;;;AA8BO,IAAM,yBAET;IAAA,4EAAA;IAAA,yBAAA;IAAA,EAAA;IAAA,gCAAA;IAAA,2DAAA;IAAA,EAAA;IAAA,0EAAA;IAAA,4EAAA;IAAA,6EAAA;IAAA,qBAAA;IAWF,YAAY,CAAC,UAAU,QAAU,WAAW,UAAU,KAAK;IAC3D,cAAc,CAAC,YAAc,aAAa,SAAS;IAEnD,aAAa,CAAC,UAAU,QAAU,YAAY,UAAU,KAAK;IAC7D,eAAe,CAAC,aAAe,cAAc,UAAU;AACzD;AAaO,IAAM,iBAAN,MAA8D;IAAA,6EAAA;IAAA,2EAAA;IAAA,4EAAA;IAAA,EAAA;IAAA,0EAAA;IAAA,0DAAA;KAOnE,QAAA,GAAkC,uBAAA;KAClC,cAAA,GAAkB,MAAA;IAElB,mBACE,QAAA,EACM;QACN,IAAI,QAAQ,IAAI,aAAa,WAAc;YACzC,IAAI,IAAA,EAAK,cAAA,IAAmB,aAAa,IAAA,EAAK,QAAA,EAAW;gBAYvD,QAAQ,KAAA,CACN,CAAA,0GAAA,CAAA,EACA;oBAAE,UAAU,IAAA,EAAK,QAAA;oBAAW;gBAAS;YAEzC;QACF;QAEA,IAAA,EAAK,QAAA,GAAY;QACjB,IAAI,QAAQ,IAAI,wCAAa,cAAc;YACzC,IAAA,EAAK,cAAA,GAAkB;QACzB;IACF;IAEA,WAAW,QAAA,EAA2B,KAAA,EAA+B;QACnE,IAAI,QAAQ,IAAI,wCAAa,cAAc;YACzC,IAAA,EAAK,cAAA,GAAkB;QACzB;QACA,OAAO,IAAA,EAAK,QAAA,CAAU,UAAA,CAAW,UAAU,KAAK;IAClD;IAEA,aAAa,SAAA,EAA6C;QACxD,IAAA,EAAK,QAAA,CAAU,YAAA,CAAa,SAAS;IACvC;IAEA,YAAY,QAAA,EAA2B,KAAA,EAA+B;QACpE,IAAI,QAAQ,IAAI,wCAAa,cAAc;YACzC,IAAA,EAAK,cAAA,GAAkB;QACzB;QACA,OAAO,IAAA,EAAK,QAAA,CAAU,WAAA,CAAY,UAAU,KAAK;IACnD;IAEA,cAAc,UAAA,EAA8C;QAC1D,IAAA,EAAK,QAAA,CAAU,aAAA,CAAc,UAAU;IACzC;AACF;AAEO,IAAM,iBAAiB,IAAI,eAAe;AAS1C,SAAS,qBAAqB,QAAA,EAAiC;IACpE,WAAW,UAAU,CAAC;AACxB","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/query-core/src/utils.ts"],"sourcesContent":["import { timeoutManager } from './timeoutManager'\nimport type {\n  DefaultError,\n  Enabled,\n  FetchStatus,\n  MutationKey,\n  MutationStatus,\n  QueryFunction,\n  QueryKey,\n  QueryOptions,\n  StaleTime,\n  StaleTimeFunction,\n} from './types'\nimport type { Mutation } from './mutation'\nimport type { FetchOptions, Query } from './query'\n\n// TYPES\n\nexport interface QueryFilters<TQueryKey extends QueryKey = QueryKey> {\n  /**\n   * Filter to active queries, inactive queries or all queries\n   */\n  type?: QueryTypeFilter\n  /**\n   * Match query key exactly\n   */\n  exact?: boolean\n  /**\n   * Include queries matching this predicate function\n   */\n  predicate?: (query: Query) => boolean\n  /**\n   * Include queries matching this query key\n   */\n  queryKey?: TQueryKey\n  /**\n   * Include or exclude stale queries\n   */\n  stale?: boolean\n  /**\n   * Include queries matching their fetchStatus\n   */\n  fetchStatus?: FetchStatus\n}\n\nexport interface MutationFilters<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = unknown,\n  TOnMutateResult = unknown,\n> {\n  /**\n   * Match mutation key exactly\n   */\n  exact?: boolean\n  /**\n   * Include mutations matching this predicate function\n   */\n  predicate?: (\n    mutation: Mutation<TData, TError, TVariables, TOnMutateResult>,\n  ) => boolean\n  /**\n   * Include mutations matching this mutation key\n   */\n  mutationKey?: MutationKey\n  /**\n   * Filter by mutation status\n   */\n  status?: MutationStatus\n}\n\nexport type Updater<TInput, TOutput> = TOutput | ((input: TInput) => TOutput)\n\nexport type QueryTypeFilter = 'all' | 'active' | 'inactive'\n\n// UTILS\n\nexport const isServer = typeof window === 'undefined' || 'Deno' in globalThis\n\nexport function noop(): void\nexport function noop(): undefined\nexport function noop() {}\n\nexport function functionalUpdate<TInput, TOutput>(\n  updater: Updater<TInput, TOutput>,\n  input: TInput,\n): TOutput {\n  return typeof updater === 'function'\n    ? (updater as (_: TInput) => TOutput)(input)\n    : updater\n}\n\nexport function isValidTimeout(value: unknown): value is number {\n  return typeof value === 'number' && value >= 0 && value !== Infinity\n}\n\nexport function timeUntilStale(updatedAt: number, staleTime?: number): number {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0)\n}\n\nexport function resolveStaleTime<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  staleTime:\n    | undefined\n    | StaleTimeFunction<TQueryFnData, TError, TData, TQueryKey>,\n  query: Query<TQueryFnData, TError, TData, TQueryKey>,\n): StaleTime | undefined {\n  return typeof staleTime === 'function' ? staleTime(query) : staleTime\n}\n\nexport function resolveEnabled<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  enabled: undefined | Enabled<TQueryFnData, TError, TData, TQueryKey>,\n  query: Query<TQueryFnData, TError, TData, TQueryKey>,\n): boolean | undefined {\n  return typeof enabled === 'function' ? enabled(query) : enabled\n}\n\nexport function matchQuery(\n  filters: QueryFilters,\n  query: Query<any, any, any, any>,\n): boolean {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale,\n  } = filters\n\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive()\n    if (type === 'active' && !isActive) {\n      return false\n    }\n    if (type === 'inactive' && isActive) {\n      return false\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false\n  }\n\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false\n  }\n\n  if (predicate && !predicate(query)) {\n    return false\n  }\n\n  return true\n}\n\nexport function matchMutation(\n  filters: MutationFilters,\n  mutation: Mutation<any, any>,\n): boolean {\n  const { exact, status, predicate, mutationKey } = filters\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false\n    }\n  }\n\n  if (status && mutation.state.status !== status) {\n    return false\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false\n  }\n\n  return true\n}\n\nexport function hashQueryKeyByOptions<TQueryKey extends QueryKey = QueryKey>(\n  queryKey: TQueryKey,\n  options?: Pick<QueryOptions<any, any, any, any>, 'queryKeyHashFn'>,\n): string {\n  const hashFn = options?.queryKeyHashFn || hashKey\n  return hashFn(queryKey)\n}\n\n/**\n * Default query & mutation keys hash function.\n * Hashes the value into a stable hash.\n */\nexport function hashKey(queryKey: QueryKey | MutationKey): string {\n  return JSON.stringify(queryKey, (_, val) =>\n    isPlainObject(val)\n      ? Object.keys(val)\n          .sort()\n          .reduce((result, key) => {\n            result[key] = val[key]\n            return result\n          }, {} as any)\n      : val,\n  )\n}\n\n/**\n * Checks if key `b` partially matches with key `a`.\n */\nexport function partialMatchKey(a: QueryKey, b: QueryKey): boolean\nexport function partialMatchKey(a: any, b: any): boolean {\n  if (a === b) {\n    return true\n  }\n\n  if (typeof a !== typeof b) {\n    return false\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]))\n  }\n\n  return false\n}\n\nconst hasOwn = Object.prototype.hasOwnProperty\n\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\nexport function replaceEqualDeep<T>(a: unknown, b: T): T\nexport function replaceEqualDeep(a: any, b: any): any {\n  if (a === b) {\n    return a\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b)\n\n  if (!array && !(isPlainObject(a) && isPlainObject(b))) return b\n\n  const aItems = array ? a : Object.keys(a)\n  const aSize = aItems.length\n  const bItems = array ? b : Object.keys(b)\n  const bSize = bItems.length\n  const copy: any = array ? new Array(bSize) : {}\n\n  let equalItems = 0\n\n  for (let i = 0; i < bSize; i++) {\n    const key: any = array ? i : bItems[i]\n    const aItem = a[key]\n    const bItem = b[key]\n\n    if (aItem === bItem) {\n      copy[key] = aItem\n      if (array ? i < aSize : hasOwn.call(a, key)) equalItems++\n      continue\n    }\n\n    if (\n      aItem === null ||\n      bItem === null ||\n      typeof aItem !== 'object' ||\n      typeof bItem !== 'object'\n    ) {\n      copy[key] = bItem\n      continue\n    }\n\n    const v = replaceEqualDeep(aItem, bItem)\n    copy[key] = v\n    if (v === aItem) equalItems++\n  }\n\n  return aSize === bSize && equalItems === aSize ? a : copy\n}\n\n/**\n * Shallow compare objects.\n */\nexport function shallowEqualObjects<T extends Record<string, any>>(\n  a: T,\n  b: T | undefined,\n): boolean {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function isPlainArray(value: unknown): value is Array<unknown> {\n  return Array.isArray(value) && value.length === Object.keys(value).length\n}\n\n// Copied from: https://github.com/jonschlinkert/is-plain-object\nexport function isPlainObject(o: any): o is Record<PropertyKey, unknown> {\n  if (!hasObjectPrototype(o)) {\n    return false\n  }\n\n  // If has no constructor\n  const ctor = o.constructor\n  if (ctor === undefined) {\n    return true\n  }\n\n  // If has modified prototype\n  const prot = ctor.prototype\n  if (!hasObjectPrototype(prot)) {\n    return false\n  }\n\n  // If constructor does not have an Object-specific method\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false\n  }\n\n  // Handles Objects created by Object.create(<arbitrary prototype>)\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false\n  }\n\n  // Most likely a plain Object\n  return true\n}\n\nfunction hasObjectPrototype(o: any): boolean {\n  return Object.prototype.toString.call(o) === '[object Object]'\n}\n\nexport function sleep(timeout: number): Promise<void> {\n  return new Promise((resolve) => {\n    timeoutManager.setTimeout(resolve, timeout)\n  })\n}\n\nexport function replaceData<\n  TData,\n  TOptions extends QueryOptions<any, any, any, any>,\n>(prevData: TData | undefined, data: TData, options: TOptions): TData {\n  if (typeof options.structuralSharing === 'function') {\n    return options.structuralSharing(prevData, data) as TData\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== 'production') {\n      try {\n        return replaceEqualDeep(prevData, data)\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`,\n        )\n\n        // Prevent the replaceEqualDeep from being called again down below.\n        throw error\n      }\n    }\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data)\n  }\n  return data\n}\n\nexport function keepPreviousData<T>(\n  previousData: T | undefined,\n): T | undefined {\n  return previousData\n}\n\nexport function addToEnd<T>(items: Array<T>, item: T, max = 0): Array<T> {\n  const newItems = [...items, item]\n  return max && newItems.length > max ? newItems.slice(1) : newItems\n}\n\nexport function addToStart<T>(items: Array<T>, item: T, max = 0): Array<T> {\n  const newItems = [item, ...items]\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems\n}\n\nexport const skipToken = Symbol()\nexport type SkipToken = typeof skipToken\n\nexport function ensureQueryFn<\n  TQueryFnData = unknown,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: {\n    queryFn?: QueryFunction<TQueryFnData, TQueryKey> | SkipToken\n    queryHash?: string\n  },\n  fetchOptions?: FetchOptions<TQueryFnData>,\n): QueryFunction<TQueryFnData, TQueryKey> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`,\n      )\n    }\n  }\n\n  // if we attempt to retry a fetch that was triggered from an initialPromise\n  // when we don't have a queryFn yet, we can't retry, so we just return the already rejected initialPromise\n  // if an observer has already mounted, we will be able to retry with that queryFn\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise!\n  }\n\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () =>\n      Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`))\n  }\n\n  return options.queryFn\n}\n\nexport function shouldThrowError<T extends (...args: Array<any>) => boolean>(\n  throwOnError: boolean | T | undefined,\n  params: Parameters<T>,\n): boolean {\n  // Allow throwOnError function to override throwing behavior on a per-error basis\n  if (typeof throwOnError === 'function') {\n    return throwOnError(...params)\n  }\n\n  return !!throwOnError\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/query-core/src/notifyManager.ts"],"sourcesContent":["// TYPES\n\nimport { systemSetTimeoutZero } from './timeoutManager'\n\ntype NotifyCallback = () => void\n\ntype NotifyFunction = (callback: () => void) => void\n\ntype BatchNotifyFunction = (callback: () => void) => void\n\ntype BatchCallsCallback<T extends Array<unknown>> = (...args: T) => void\n\ntype ScheduleFunction = (callback: () => void) => void\n\nexport const defaultScheduler: ScheduleFunction = systemSetTimeoutZero\n\nexport function createNotifyManager() {\n  let queue: Array<NotifyCallback> = []\n  let transactions = 0\n  let notifyFn: NotifyFunction = (callback) => {\n    callback()\n  }\n  let batchNotifyFn: BatchNotifyFunction = (callback: () => void) => {\n    callback()\n  }\n  let scheduleFn = defaultScheduler\n\n  const schedule = (callback: NotifyCallback): void => {\n    if (transactions) {\n      queue.push(callback)\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback)\n      })\n    }\n  }\n  const flush = (): void => {\n    const originalQueue = queue\n    queue = []\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback)\n          })\n        })\n      })\n    }\n  }\n\n  return {\n    batch: <T>(callback: () => T): T => {\n      let result\n      transactions++\n      try {\n        result = callback()\n      } finally {\n        transactions--\n        if (!transactions) {\n          flush()\n        }\n      }\n      return result\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: <T extends Array<unknown>>(\n      callback: BatchCallsCallback<T>,\n    ): BatchCallsCallback<T> => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args)\n        })\n      }\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn: NotifyFunction) => {\n      notifyFn = fn\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn: BatchNotifyFunction) => {\n      batchNotifyFn = fn\n    },\n    setScheduler: (fn: ScheduleFunction) => {\n      scheduleFn = fn\n    },\n  } as const\n}\n\n// SINGLETON\nexport const notifyManager = createNotifyManager()\n"],"names":[],"mappings":";;;;;;;;;AAEA,SAAS,4BAA4B;;AAY9B,IAAM,mBAAqC,wMAAA;AAE3C,SAAS,sBAAsB;IACpC,IAAI,QAA+B,CAAC,CAAA;IACpC,IAAI,eAAe;IACnB,IAAI,WAA2B,CAAC,aAAa;QAC3C,SAAS;IACX;IACA,IAAI,gBAAqC,CAAC,aAAyB;QACjE,SAAS;IACX;IACA,IAAI,aAAa;IAEjB,MAAM,WAAW,CAAC,aAAmC;QACnD,IAAI,cAAc;YAChB,MAAM,IAAA,CAAK,QAAQ;QACrB,OAAO;YACL,WAAW,MAAM;gBACf,SAAS,QAAQ;YACnB,CAAC;QACH;IACF;IACA,MAAM,QAAQ,MAAY;QACxB,MAAM,gBAAgB;QACtB,QAAQ,CAAC,CAAA;QACT,IAAI,cAAc,MAAA,EAAQ;YACxB,WAAW,MAAM;gBACf,cAAc,MAAM;oBAClB,cAAc,OAAA,CAAQ,CAAC,aAAa;wBAClC,SAAS,QAAQ;oBACnB,CAAC;gBACH,CAAC;YACH,CAAC;QACH;IACF;IAEA,OAAO;QACL,OAAO,CAAI,aAAyB;YAClC,IAAI;YACJ;YACA,IAAI;gBACF,SAAS,SAAS;YACpB,SAAE;gBACA;gBACA,IAAI,CAAC,cAAc;oBACjB,MAAM;gBACR;YACF;YACA,OAAO;QACT;QAAA;;KAAA,GAIA,YAAY,CACV,aAC0B;YAC1B,OAAO,CAAA,GAAI,SAAS;gBAClB,SAAS,MAAM;oBACb,SAAS,GAAG,IAAI;gBAClB,CAAC;YACH;QACF;QACA;QAAA;;;KAAA,GAKA,mBAAmB,CAAC,OAAuB;YACzC,WAAW;QACb;QAAA;;;KAAA,GAKA,wBAAwB,CAAC,OAA4B;YACnD,gBAAgB;QAClB;QACA,cAAc,CAAC,OAAyB;YACtC,aAAa;QACf;IACF;AACF;AAGO,IAAM,gBAAgB,oBAAoB","debugId":null}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/query-core/src/subscribable.ts"],"sourcesContent":["export class Subscribable<TListener extends Function> {\n  protected listeners = new Set<TListener>()\n\n  constructor() {\n    this.subscribe = this.subscribe.bind(this)\n  }\n\n  subscribe(listener: TListener): () => void {\n    this.listeners.add(listener)\n\n    this.onSubscribe()\n\n    return () => {\n      this.listeners.delete(listener)\n      this.onUnsubscribe()\n    }\n  }\n\n  hasListeners(): boolean {\n    return this.listeners.size > 0\n  }\n\n  protected onSubscribe(): void {\n    // Do nothing\n  }\n\n  protected onUnsubscribe(): void {\n    // Do nothing\n  }\n}\n"],"names":[],"mappings":";;;;;AAAO,IAAM,eAAN,MAA+C;IAGpD,aAAc;QAFd,IAAA,CAAU,SAAA,GAAY,aAAA,GAAA,IAAI,IAAe;QAGvC,IAAA,CAAK,SAAA,GAAY,IAAA,CAAK,SAAA,CAAU,IAAA,CAAK,IAAI;IAC3C;IAEA,UAAU,QAAA,EAAiC;QACzC,IAAA,CAAK,SAAA,CAAU,GAAA,CAAI,QAAQ;QAE3B,IAAA,CAAK,WAAA,CAAY;QAEjB,OAAO,MAAM;YACX,IAAA,CAAK,SAAA,CAAU,MAAA,CAAO,QAAQ;YAC9B,IAAA,CAAK,aAAA,CAAc;QACrB;IACF;IAEA,eAAwB;QACtB,OAAO,IAAA,CAAK,SAAA,CAAU,IAAA,GAAO;IAC/B;IAEU,cAAoB,CAE9B;IAEU,gBAAsB,CAEhC;AACF","debugId":null}},
    {"offset": {"line": 509, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/query-core/src/focusManager.ts"],"sourcesContent":["import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype Listener = (focused: boolean) => void\n\ntype SetupFn = (\n  setFocused: (focused?: boolean) => void,\n) => (() => void) | undefined\n\nexport class FocusManager extends Subscribable<Listener> {\n  #focused?: boolean\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onFocus) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus()\n        // Listen to visibilitychange\n        window.addEventListener('visibilitychange', listener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener)\n        }\n      }\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused)\n      } else {\n        this.onFocus()\n      }\n    })\n  }\n\n  setFocused(focused?: boolean): void {\n    const changed = this.#focused !== focused\n    if (changed) {\n      this.#focused = focused\n      this.onFocus()\n    }\n  }\n\n  onFocus(): void {\n    const isFocused = this.isFocused()\n    this.listeners.forEach((listener) => {\n      listener(isFocused)\n    })\n  }\n\n  isFocused(): boolean {\n    if (typeof this.#focused === 'boolean') {\n      return this.#focused\n    }\n\n    // document global can be unavailable in react native\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    return globalThis.document?.visibilityState !== 'hidden'\n  }\n}\n\nexport const focusManager = new FocusManager()\n"],"names":[],"mappings":";;;;;;;AAAA,SAAS,oBAAoB;AAC7B,SAAS,gBAAgB;;;AAQlB,IAAM,eAAN,cAA2B,8LAAA,CAAuB;KACvD,OAAA,CAAA;KACA,OAAA,CAAA;KAEA,KAAA,CAAA;IAEA,aAAc;QACZ,KAAA,CAAM;QACN,IAAA,EAAK,KAAA,GAAS,CAAC,YAAY;YAGzB,IAAI,CAAC,mLAAA,IAAY,OAAO,gBAAA,EAAkB;gBACxC,MAAM,WAAW,IAAM,QAAQ;gBAE/B,OAAO,gBAAA,CAAiB,oBAAoB,UAAU,KAAK;gBAE3D,OAAO,MAAM;oBAEX,OAAO,mBAAA,CAAoB,oBAAoB,QAAQ;gBACzD;YACF;YACA;QACF;IACF;IAEU,cAAoB;QAC5B,IAAI,CAAC,IAAA,EAAK,OAAA,EAAU;YAClB,IAAA,CAAK,gBAAA,CAAiB,IAAA,EAAK,KAAM;QACnC;IACF;IAEU,gBAAgB;QACxB,IAAI,CAAC,IAAA,CAAK,YAAA,CAAa,GAAG;YACxB,IAAA,EAAK,OAAA,GAAW;YAChB,IAAA,EAAK,OAAA,GAAW,KAAA;QAClB;IACF;IAEA,iBAAiB,KAAA,EAAsB;QACrC,IAAA,EAAK,KAAA,GAAS;QACd,IAAA,EAAK,OAAA,GAAW;QAChB,IAAA,EAAK,OAAA,GAAW,MAAM,CAAC,YAAY;YACjC,IAAI,OAAO,YAAY,WAAW;gBAChC,IAAA,CAAK,UAAA,CAAW,OAAO;YACzB,OAAO;gBACL,IAAA,CAAK,OAAA,CAAQ;YACf;QACF,CAAC;IACH;IAEA,WAAW,OAAA,EAAyB;QAClC,MAAM,UAAU,IAAA,EAAK,OAAA,KAAa;QAClC,IAAI,SAAS;YACX,IAAA,EAAK,OAAA,GAAW;YAChB,IAAA,CAAK,OAAA,CAAQ;QACf;IACF;IAEA,UAAgB;QACd,MAAM,YAAY,IAAA,CAAK,SAAA,CAAU;QACjC,IAAA,CAAK,SAAA,CAAU,OAAA,CAAQ,CAAC,aAAa;YACnC,SAAS,SAAS;QACpB,CAAC;IACH;IAEA,YAAqB;QACnB,IAAI,OAAO,IAAA,EAAK,OAAA,KAAa,WAAW;YACtC,OAAO,IAAA,EAAK,OAAA;QACd;QAIA,OAAO,WAAW,QAAA,EAAU,oBAAoB;IAClD;AACF;AAEO,IAAM,eAAe,IAAI,aAAa","debugId":null}},
    {"offset": {"line": 586, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/query-core/src/onlineManager.ts"],"sourcesContent":["import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype Listener = (online: boolean) => void\ntype SetupFn = (setOnline: Listener) => (() => void) | undefined\n\nexport class OnlineManager extends Subscribable<Listener> {\n  #online = true\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onOnline) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true)\n        const offlineListener = () => onOnline(false)\n        // Listen to online\n        window.addEventListener('online', onlineListener, false)\n        window.addEventListener('offline', offlineListener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('online', onlineListener)\n          window.removeEventListener('offline', offlineListener)\n        }\n      }\n\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup(this.setOnline.bind(this))\n  }\n\n  setOnline(online: boolean): void {\n    const changed = this.#online !== online\n\n    if (changed) {\n      this.#online = online\n      this.listeners.forEach((listener) => {\n        listener(online)\n      })\n    }\n  }\n\n  isOnline(): boolean {\n    return this.#online\n  }\n}\n\nexport const onlineManager = new OnlineManager()\n"],"names":[],"mappings":";;;;;;;AAAA,SAAS,oBAAoB;AAC7B,SAAS,gBAAgB;;;AAKlB,IAAM,gBAAN,cAA4B,8LAAA,CAAuB;KACxD,MAAA,GAAU,KAAA;KACV,OAAA,CAAA;KAEA,KAAA,CAAA;IAEA,aAAc;QACZ,KAAA,CAAM;QACN,IAAA,EAAK,KAAA,GAAS,CAAC,aAAa;YAG1B,IAAI,CAAC,mLAAA,IAAY,OAAO,gBAAA,EAAkB;gBACxC,MAAM,iBAAiB,IAAM,SAAS,IAAI;gBAC1C,MAAM,kBAAkB,IAAM,SAAS,KAAK;gBAE5C,OAAO,gBAAA,CAAiB,UAAU,gBAAgB,KAAK;gBACvD,OAAO,gBAAA,CAAiB,WAAW,iBAAiB,KAAK;gBAEzD,OAAO,MAAM;oBAEX,OAAO,mBAAA,CAAoB,UAAU,cAAc;oBACnD,OAAO,mBAAA,CAAoB,WAAW,eAAe;gBACvD;YACF;YAEA;QACF;IACF;IAEU,cAAoB;QAC5B,IAAI,CAAC,IAAA,EAAK,OAAA,EAAU;YAClB,IAAA,CAAK,gBAAA,CAAiB,IAAA,EAAK,KAAM;QACnC;IACF;IAEU,gBAAgB;QACxB,IAAI,CAAC,IAAA,CAAK,YAAA,CAAa,GAAG;YACxB,IAAA,EAAK,OAAA,GAAW;YAChB,IAAA,EAAK,OAAA,GAAW,KAAA;QAClB;IACF;IAEA,iBAAiB,KAAA,EAAsB;QACrC,IAAA,EAAK,KAAA,GAAS;QACd,IAAA,EAAK,OAAA,GAAW;QAChB,IAAA,EAAK,OAAA,GAAW,MAAM,IAAA,CAAK,SAAA,CAAU,IAAA,CAAK,IAAI,CAAC;IACjD;IAEA,UAAU,MAAA,EAAuB;QAC/B,MAAM,UAAU,IAAA,EAAK,MAAA,KAAY;QAEjC,IAAI,SAAS;YACX,IAAA,EAAK,MAAA,GAAU;YACf,IAAA,CAAK,SAAA,CAAU,OAAA,CAAQ,CAAC,aAAa;gBACnC,SAAS,MAAM;YACjB,CAAC;QACH;IACF;IAEA,WAAoB;QAClB,OAAO,IAAA,EAAK,MAAA;IACd;AACF;AAEO,IAAM,gBAAgB,IAAI,cAAc","debugId":null}},
    {"offset": {"line": 653, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/query-core/src/thenable.ts"],"sourcesContent":["/**\n * Thenable types which matches React's types for promises\n *\n * React seemingly uses `.status`, `.value` and `.reason` properties on a promises to optimistically unwrap data from promises\n *\n * @see https://github.com/facebook/react/blob/main/packages/shared/ReactTypes.js#L112-L138\n * @see https://github.com/facebook/react/blob/4f604941569d2e8947ce1460a0b2997e835f37b9/packages/react-debug-tools/src/ReactDebugHooks.js#L224-L227\n */\n\nimport { noop } from './utils'\n\ninterface Fulfilled<T> {\n  status: 'fulfilled'\n  value: T\n}\ninterface Rejected {\n  status: 'rejected'\n  reason: unknown\n}\ninterface Pending<T> {\n  status: 'pending'\n\n  /**\n   * Resolve the promise with a value.\n   * Will remove the `resolve` and `reject` properties from the promise.\n   */\n  resolve: (value: T) => void\n  /**\n   * Reject the promise with a reason.\n   * Will remove the `resolve` and `reject` properties from the promise.\n   */\n  reject: (reason: unknown) => void\n}\n\nexport type FulfilledThenable<T> = Promise<T> & Fulfilled<T>\nexport type RejectedThenable<T> = Promise<T> & Rejected\nexport type PendingThenable<T> = Promise<T> & Pending<T>\n\nexport type Thenable<T> =\n  | FulfilledThenable<T>\n  | RejectedThenable<T>\n  | PendingThenable<T>\n\nexport function pendingThenable<T>(): PendingThenable<T> {\n  let resolve: Pending<T>['resolve']\n  let reject: Pending<T>['reject']\n  // this could use `Promise.withResolvers()` in the future\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve\n    reject = _reject\n  }) as PendingThenable<T>\n\n  thenable.status = 'pending'\n  thenable.catch(() => {\n    // prevent unhandled rejection errors\n  })\n\n  function finalize(data: Fulfilled<T> | Rejected) {\n    Object.assign(thenable, data)\n\n    // clear pending props props to avoid calling them twice\n    delete (thenable as Partial<PendingThenable<T>>).resolve\n    delete (thenable as Partial<PendingThenable<T>>).reject\n  }\n\n  thenable.resolve = (value) => {\n    finalize({\n      status: 'fulfilled',\n      value,\n    })\n\n    resolve(value)\n  }\n  thenable.reject = (reason) => {\n    finalize({\n      status: 'rejected',\n      reason,\n    })\n\n    reject(reason)\n  }\n\n  return thenable\n}\n\n/**\n * This function takes a Promise-like input and detects whether the data\n * is synchronously available or not.\n *\n * It does not inspect .status, .value or .reason properties of the promise,\n * as those are not always available, and the .status of React's promises\n * should not be considered part of the public API.\n */\nexport function tryResolveSync(promise: Promise<unknown> | Thenable<unknown>) {\n  let data: unknown\n\n  promise\n    .then((result) => {\n      data = result\n      return result\n    }, noop)\n    // .catch can be unavailable on certain kinds of thenable's\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    ?.catch(noop)\n\n  if (data !== undefined) {\n    return { data }\n  }\n\n  return undefined\n}\n"],"names":[],"mappings":";;;;;;;AASA,SAAS,YAAY;;AAkCd,SAAS,kBAAyC;IACvD,IAAI;IACJ,IAAI;IAEJ,MAAM,WAAW,IAAI,QAAQ,CAAC,UAAU,YAAY;QAClD,UAAU;QACV,SAAS;IACX,CAAC;IAED,SAAS,MAAA,GAAS;IAClB,SAAS,KAAA,CAAM,KAEf,CAFqB,AAEpB;IAED,SAAS,SAAS,IAAA,EAA+B;QAC/C,OAAO,MAAA,CAAO,UAAU,IAAI;QAG5B,OAAQ,SAAyC,OAAA;QACjD,OAAQ,SAAyC,MAAA;IACnD;IAEA,SAAS,OAAA,GAAU,CAAC,UAAU;QAC5B,SAAS;YACP,QAAQ;YACR;QACF,CAAC;QAED,QAAQ,KAAK;IACf;IACA,SAAS,MAAA,GAAS,CAAC,WAAW;QAC5B,SAAS;YACP,QAAQ;YACR;QACF,CAAC;QAED,OAAO,MAAM;IACf;IAEA,OAAO;AACT;AAUO,SAAS,eAAe,OAAA,EAA+C;IAC5E,IAAI;IAEJ,QACG,IAAA,CAAK,CAAC,WAAW;QAChB,OAAO;QACP,OAAO;IACT,GAAG,+KAAI,GAGL,MAAM,+KAAI;IAEd,IAAI,SAAS,KAAA,GAAW;QACtB,OAAO;YAAE;QAAK;IAChB;IAEA,OAAO,KAAA;AACT","debugId":null}},
    {"offset": {"line": 711, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/query-core/src/retryer.ts"],"sourcesContent":["import { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { pendingThenable } from './thenable'\nimport { isServer, sleep } from './utils'\nimport type { Thenable } from './thenable'\nimport type { CancelOptions, DefaultError, NetworkMode } from './types'\n\n// TYPES\n\ninterface RetryerConfig<TData = unknown, TError = DefaultError> {\n  fn: () => TData | Promise<TData>\n  initialPromise?: Promise<TData>\n  onCancel?: (error: TError) => void\n  onFail?: (failureCount: number, error: TError) => void\n  onPause?: () => void\n  onContinue?: () => void\n  retry?: RetryValue<TError>\n  retryDelay?: RetryDelayValue<TError>\n  networkMode: NetworkMode | undefined\n  canRun: () => boolean\n}\n\nexport interface Retryer<TData = unknown> {\n  promise: Promise<TData>\n  cancel: (cancelOptions?: CancelOptions) => void\n  continue: () => Promise<unknown>\n  cancelRetry: () => void\n  continueRetry: () => void\n  canStart: () => boolean\n  start: () => Promise<TData>\n  status: () => 'pending' | 'resolved' | 'rejected'\n}\n\nexport type RetryValue<TError> = boolean | number | ShouldRetryFunction<TError>\n\ntype ShouldRetryFunction<TError = DefaultError> = (\n  failureCount: number,\n  error: TError,\n) => boolean\n\nexport type RetryDelayValue<TError> = number | RetryDelayFunction<TError>\n\ntype RetryDelayFunction<TError = DefaultError> = (\n  failureCount: number,\n  error: TError,\n) => number\n\nfunction defaultRetryDelay(failureCount: number) {\n  return Math.min(1000 * 2 ** failureCount, 30000)\n}\n\nexport function canFetch(networkMode: NetworkMode | undefined): boolean {\n  return (networkMode ?? 'online') === 'online'\n    ? onlineManager.isOnline()\n    : true\n}\n\nexport class CancelledError extends Error {\n  revert?: boolean\n  silent?: boolean\n  constructor(options?: CancelOptions) {\n    super('CancelledError')\n    this.revert = options?.revert\n    this.silent = options?.silent\n  }\n}\n\n/**\n * @deprecated Use instanceof `CancelledError` instead.\n */\nexport function isCancelledError(value: any): value is CancelledError {\n  return value instanceof CancelledError\n}\n\nexport function createRetryer<TData = unknown, TError = DefaultError>(\n  config: RetryerConfig<TData, TError>,\n): Retryer<TData> {\n  let isRetryCancelled = false\n  let failureCount = 0\n  let continueFn: ((value?: unknown) => void) | undefined\n\n  const thenable = pendingThenable<TData>()\n\n  const isResolved = () =>\n    (thenable.status as Thenable<TData>['status']) !== 'pending'\n\n  const cancel = (cancelOptions?: CancelOptions): void => {\n    if (!isResolved()) {\n      const error = new CancelledError(cancelOptions) as TError\n      reject(error)\n\n      config.onCancel?.(error)\n    }\n  }\n  const cancelRetry = () => {\n    isRetryCancelled = true\n  }\n\n  const continueRetry = () => {\n    isRetryCancelled = false\n  }\n\n  const canContinue = () =>\n    focusManager.isFocused() &&\n    (config.networkMode === 'always' || onlineManager.isOnline()) &&\n    config.canRun()\n\n  const canStart = () => canFetch(config.networkMode) && config.canRun()\n\n  const resolve = (value: any) => {\n    if (!isResolved()) {\n      continueFn?.()\n      thenable.resolve(value)\n    }\n  }\n\n  const reject = (value: any) => {\n    if (!isResolved()) {\n      continueFn?.()\n      thenable.reject(value)\n    }\n  }\n\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved() || canContinue()) {\n          continueResolve(value)\n        }\n      }\n      config.onPause?.()\n    }).then(() => {\n      continueFn = undefined\n      if (!isResolved()) {\n        config.onContinue?.()\n      }\n    })\n  }\n\n  // Create loop function\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved()) {\n      return\n    }\n\n    let promiseOrValue: any\n\n    // we can re-use config.initialPromise on the first call of run()\n    const initialPromise =\n      failureCount === 0 ? config.initialPromise : undefined\n\n    // Execute query\n    try {\n      promiseOrValue = initialPromise ?? config.fn()\n    } catch (error) {\n      promiseOrValue = Promise.reject(error)\n    }\n\n    Promise.resolve(promiseOrValue)\n      .then(resolve)\n      .catch((error) => {\n        // Stop if the fetch is already resolved\n        if (isResolved()) {\n          return\n        }\n\n        // Do we need to retry the request?\n        const retry = config.retry ?? (isServer ? 0 : 3)\n        const retryDelay = config.retryDelay ?? defaultRetryDelay\n        const delay =\n          typeof retryDelay === 'function'\n            ? retryDelay(failureCount, error)\n            : retryDelay\n        const shouldRetry =\n          retry === true ||\n          (typeof retry === 'number' && failureCount < retry) ||\n          (typeof retry === 'function' && retry(failureCount, error))\n\n        if (isRetryCancelled || !shouldRetry) {\n          // We are done if the query does not need to be retried\n          reject(error)\n          return\n        }\n\n        failureCount++\n\n        // Notify on fail\n        config.onFail?.(failureCount, error)\n\n        // Delay\n        sleep(delay)\n          // Pause if the document is not visible or when the device is offline\n          .then(() => {\n            return canContinue() ? undefined : pause()\n          })\n          .then(() => {\n            if (isRetryCancelled) {\n              reject(error)\n            } else {\n              run()\n            }\n          })\n      })\n  }\n\n  return {\n    promise: thenable,\n    status: () => thenable.status,\n    cancel,\n    continue: () => {\n      continueFn?.()\n      return thenable\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      // Start loop\n      if (canStart()) {\n        run()\n      } else {\n        pause().then(run)\n      }\n      return thenable\n    },\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 857, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/query-core/src/removable.ts"],"sourcesContent":["import { timeoutManager } from './timeoutManager'\nimport { isServer, isValidTimeout } from './utils'\nimport type { ManagedTimerId } from './timeoutManager'\n\nexport abstract class Removable {\n  gcTime!: number\n  #gcTimeout?: ManagedTimerId\n\n  destroy(): void {\n    this.clearGcTimeout()\n  }\n\n  protected scheduleGc(): void {\n    this.clearGcTimeout()\n\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = timeoutManager.setTimeout(() => {\n        this.optionalRemove()\n      }, this.gcTime)\n    }\n  }\n\n  protected updateGcTime(newGcTime: number | undefined): void {\n    // Default to 5 minutes (Infinity for server-side) if no gcTime is set\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1000),\n    )\n  }\n\n  protected clearGcTimeout() {\n    if (this.#gcTimeout) {\n      timeoutManager.clearTimeout(this.#gcTimeout)\n      this.#gcTimeout = undefined\n    }\n  }\n\n  protected abstract optionalRemove(): void\n}\n"],"names":[],"mappings":";;;;;AAAA,SAAS,sBAAsB;AAC/B,SAAS,UAAU,sBAAsB;;;AAGlC,IAAe,YAAf,MAAyB;KAE9B,SAAA,CAAA;IAEA,UAAgB;QACd,IAAA,CAAK,cAAA,CAAe;IACtB;IAEU,aAAmB;QAC3B,IAAA,CAAK,cAAA,CAAe;QAEpB,QAAI,yLAAA,EAAe,IAAA,CAAK,MAAM,GAAG;YAC/B,IAAA,EAAK,SAAA,GAAa,kMAAA,CAAe,UAAA,CAAW,MAAM;gBAChD,IAAA,CAAK,cAAA,CAAe;YACtB,GAAG,IAAA,CAAK,MAAM;QAChB;IACF;IAEU,aAAa,SAAA,EAAqC;QAE1D,IAAA,CAAK,MAAA,GAAS,KAAK,GAAA,CACjB,IAAA,CAAK,MAAA,IAAU,GACf,aAAA,CAAc,mLAAA,GAAW,WAAW,IAAI,KAAK,GAAA;IAEjD;IAEU,iBAAiB;QACzB,IAAI,IAAA,EAAK,SAAA,EAAY;YACnB,kMAAA,CAAe,YAAA,CAAa,IAAA,EAAK,SAAU;YAC3C,IAAA,EAAK,SAAA,GAAa,KAAA;QACpB;IACF;AAGF","debugId":null}},
    {"offset": {"line": 895, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/query-core/src/query.ts"],"sourcesContent":["import {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale,\n} from './utils'\nimport { notifyManager } from './notifyManager'\nimport { CancelledError, canFetch, createRetryer } from './retryer'\nimport { Removable } from './removable'\nimport type { QueryCache } from './queryCache'\nimport type { QueryClient } from './queryClient'\nimport type {\n  CancelOptions,\n  DefaultError,\n  FetchStatus,\n  InitialDataFunction,\n  OmitKeyof,\n  QueryFunctionContext,\n  QueryKey,\n  QueryMeta,\n  QueryOptions,\n  QueryStatus,\n  SetDataOptions,\n  StaleTime,\n} from './types'\nimport type { QueryObserver } from './queryObserver'\nimport type { Retryer } from './retryer'\n\n// TYPES\n\ninterface QueryConfig<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  client: QueryClient\n  queryKey: TQueryKey\n  queryHash: string\n  options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  state?: QueryState<TData, TError>\n}\n\nexport interface QueryState<TData = unknown, TError = DefaultError> {\n  data: TData | undefined\n  dataUpdateCount: number\n  dataUpdatedAt: number\n  error: TError | null\n  errorUpdateCount: number\n  errorUpdatedAt: number\n  fetchFailureCount: number\n  fetchFailureReason: TError | null\n  fetchMeta: FetchMeta | null\n  isInvalidated: boolean\n  status: QueryStatus\n  fetchStatus: FetchStatus\n}\n\nexport interface FetchContext<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  fetchFn: () => unknown | Promise<unknown>\n  fetchOptions?: FetchOptions\n  signal: AbortSignal\n  options: QueryOptions<TQueryFnData, TError, TData, any>\n  client: QueryClient\n  queryKey: TQueryKey\n  state: QueryState<TData, TError>\n}\n\nexport interface QueryBehavior<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  onFetch: (\n    context: FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n    query: Query,\n  ) => void\n}\n\nexport type FetchDirection = 'forward' | 'backward'\n\nexport interface FetchMeta {\n  fetchMore?: { direction: FetchDirection }\n}\n\nexport interface FetchOptions<TData = unknown> {\n  cancelRefetch?: boolean\n  meta?: FetchMeta\n  initialPromise?: Promise<TData>\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError\n}\n\ninterface FetchAction {\n  type: 'fetch'\n  meta?: FetchMeta\n}\n\ninterface SuccessAction<TData> {\n  data: TData | undefined\n  type: 'success'\n  dataUpdatedAt?: number\n  manual?: boolean\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface InvalidateAction {\n  type: 'invalidate'\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\ninterface SetStateAction<TData, TError> {\n  type: 'setState'\n  state: Partial<QueryState<TData, TError>>\n  setStateOptions?: SetStateOptions\n}\n\nexport type Action<TData, TError> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | FetchAction\n  | InvalidateAction\n  | PauseAction\n  | SetStateAction<TData, TError>\n  | SuccessAction<TData>\n\nexport interface SetStateOptions {\n  meta?: any\n}\n\n// CLASS\n\nexport class Query<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Removable {\n  queryKey: TQueryKey\n  queryHash: string\n  options!: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  state: QueryState<TData, TError>\n\n  #initialState: QueryState<TData, TError>\n  #revertState?: QueryState<TData, TError>\n  #cache: QueryCache\n  #client: QueryClient\n  #retryer?: Retryer<TData>\n  observers: Array<QueryObserver<any, any, any, any, any>>\n  #defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  #abortSignalConsumed: boolean\n\n  constructor(config: QueryConfig<TQueryFnData, TError, TData, TQueryKey>) {\n    super()\n\n    this.#abortSignalConsumed = false\n    this.#defaultOptions = config.defaultOptions\n    this.setOptions(config.options)\n    this.observers = []\n    this.#client = config.client\n    this.#cache = this.#client.getQueryCache()\n    this.queryKey = config.queryKey\n    this.queryHash = config.queryHash\n    this.#initialState = getDefaultState(this.options)\n    this.state = config.state ?? this.#initialState\n    this.scheduleGc()\n  }\n  get meta(): QueryMeta | undefined {\n    return this.options.meta\n  }\n\n  get promise(): Promise<TData> | undefined {\n    return this.#retryer?.promise\n  }\n\n  setOptions(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): void {\n    this.options = { ...this.#defaultOptions, ...options }\n\n    this.updateGcTime(this.options.gcTime)\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (this.state && this.state.data === undefined) {\n      const defaultState = getDefaultState(this.options)\n      if (defaultState.data !== undefined) {\n        this.setData(defaultState.data, {\n          updatedAt: defaultState.dataUpdatedAt,\n          manual: true,\n        })\n        this.#initialState = defaultState\n      }\n    }\n  }\n\n  protected optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === 'idle') {\n      this.#cache.remove(this)\n    }\n  }\n\n  setData(\n    newData: TData,\n    options?: SetDataOptions & { manual: boolean },\n  ): TData {\n    const data = replaceData(this.state.data, newData, this.options)\n\n    // Set data and mark it as cached\n    this.#dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual,\n    })\n\n    return data\n  }\n\n  setState(\n    state: Partial<QueryState<TData, TError>>,\n    setStateOptions?: SetStateOptions,\n  ): void {\n    this.#dispatch({ type: 'setState', state, setStateOptions })\n  }\n\n  cancel(options?: CancelOptions): Promise<void> {\n    const promise = this.#retryer?.promise\n    this.#retryer?.cancel(options)\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve()\n  }\n\n  destroy(): void {\n    super.destroy()\n\n    this.cancel({ silent: true })\n  }\n\n  reset(): void {\n    this.destroy()\n    this.setState(this.#initialState)\n  }\n\n  isActive(): boolean {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false,\n    )\n  }\n\n  isDisabled(): boolean {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive()\n    }\n    // if a query has no observers, it should still be considered disabled if it never attempted a fetch\n    return (\n      this.options.queryFn === skipToken ||\n      this.state.dataUpdateCount + this.state.errorUpdateCount === 0\n    )\n  }\n\n  isStatic(): boolean {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) =>\n          resolveStaleTime(observer.options.staleTime, this) === 'static',\n      )\n    }\n\n    return false\n  }\n\n  isStale(): boolean {\n    // check observers first, their `isStale` has the source of truth\n    // calculated with `isStaleByTime` and it takes `enabled` into account\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale,\n      )\n    }\n\n    return this.state.data === undefined || this.state.isInvalidated\n  }\n\n  isStaleByTime(staleTime: StaleTime = 0): boolean {\n    // no data is always stale\n    if (this.state.data === undefined) {\n      return true\n    }\n    // static is never stale\n    if (staleTime === 'static') {\n      return false\n    }\n    // if the query is invalidated, it is stale\n    if (this.state.isInvalidated) {\n      return true\n    }\n\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime)\n  }\n\n  onFocus(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus())\n\n    observer?.refetch({ cancelRefetch: false })\n\n    // Continue fetch if currently paused\n    this.#retryer?.continue()\n  }\n\n  onOnline(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect())\n\n    observer?.refetch({ cancelRefetch: false })\n\n    // Continue fetch if currently paused\n    this.#retryer?.continue()\n  }\n\n  addObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer)\n\n      // Stop the query from being garbage collected\n      this.clearGcTimeout()\n\n      this.#cache.notify({ type: 'observerAdded', query: this, observer })\n    }\n  }\n\n  removeObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer)\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true })\n          } else {\n            this.#retryer.cancelRetry()\n          }\n        }\n\n        this.scheduleGc()\n      }\n\n      this.#cache.notify({ type: 'observerRemoved', query: this, observer })\n    }\n  }\n\n  getObserversCount(): number {\n    return this.observers.length\n  }\n\n  invalidate(): void {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: 'invalidate' })\n    }\n  }\n\n  async fetch(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    fetchOptions?: FetchOptions<TQueryFnData>,\n  ): Promise<TData> {\n    if (\n      this.state.fetchStatus !== 'idle' &&\n      // If the promise in the retyer is already rejected, we have to definitely\n      // re-start the fetch; there is a chance that the query is still in a\n      // pending state when that happens\n      this.#retryer?.status() !== 'rejected'\n    ) {\n      if (this.state.data !== undefined && fetchOptions?.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetch\n        this.cancel({ silent: true })\n      } else if (this.#retryer) {\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        this.#retryer.continueRetry()\n        // Return current promise if we are already fetching\n        return this.#retryer.promise\n      }\n    }\n\n    // Update config if passed, otherwise the config from the last execution is used\n    if (options) {\n      this.setOptions(options)\n    }\n\n    // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn)\n      if (observer) {\n        this.setOptions(observer.options)\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`,\n        )\n      }\n    }\n\n    const abortController = new AbortController()\n\n    // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n    const addSignalProperty = (object: unknown) => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true\n          return abortController.signal\n        },\n      })\n    }\n\n    // Create fetch function\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions)\n\n      // Create query function context\n      const createQueryFnContext = (): QueryFunctionContext<TQueryKey> => {\n        const queryFnContext: OmitKeyof<\n          QueryFunctionContext<TQueryKey>,\n          'signal'\n        > = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta,\n        }\n        addSignalProperty(queryFnContext)\n        return queryFnContext as QueryFunctionContext<TQueryKey>\n      }\n\n      const queryFnContext = createQueryFnContext()\n\n      this.#abortSignalConsumed = false\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this as unknown as Query,\n        )\n      }\n\n      return queryFn(queryFnContext)\n    }\n\n    // Trigger behavior hook\n    const createFetchContext = (): FetchContext<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey\n    > => {\n      const context: OmitKeyof<\n        FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n        'signal'\n      > = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn,\n      }\n\n      addSignalProperty(context)\n      return context as FetchContext<TQueryFnData, TError, TData, TQueryKey>\n    }\n\n    const context = createFetchContext()\n\n    this.options.behavior?.onFetch(context, this as unknown as Query)\n\n    // Store state in case the current fetch needs to be reverted\n    this.#revertState = this.state\n\n    // Set to fetching state if not already in it\n    if (\n      this.state.fetchStatus === 'idle' ||\n      this.state.fetchMeta !== context.fetchOptions?.meta\n    ) {\n      this.#dispatch({ type: 'fetch', meta: context.fetchOptions?.meta })\n    }\n\n    // Try to fetch the data\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise as\n        | Promise<TData>\n        | undefined,\n      fn: context.fetchFn as () => Promise<TData>,\n      onCancel: (error) => {\n        if (error instanceof CancelledError && error.revert) {\n          this.setState({\n            ...this.#revertState,\n            fetchStatus: 'idle' as const,\n          })\n        }\n        abortController.abort()\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: 'failed', failureCount, error })\n      },\n      onPause: () => {\n        this.#dispatch({ type: 'pause' })\n      },\n      onContinue: () => {\n        this.#dispatch({ type: 'continue' })\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true,\n    })\n\n    try {\n      const data = await this.#retryer.start()\n      // this is more of a runtime guard\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (data === undefined) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(\n            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`,\n          )\n        }\n        throw new Error(`${this.queryHash} data is undefined`)\n      }\n\n      this.setData(data)\n\n      // Notify cache callback\n      this.#cache.config.onSuccess?.(data, this as Query<any, any, any, any>)\n      this.#cache.config.onSettled?.(\n        data,\n        this.state.error as any,\n        this as Query<any, any, any, any>,\n      )\n      return data\n    } catch (error) {\n      if (error instanceof CancelledError) {\n        if (error.silent) {\n          // silent cancellation implies a new fetch is going to be started,\n          // so we piggyback onto that promise\n          return this.#retryer.promise\n        } else if (error.revert) {\n          // transform error into reverted state data\n          // if the initial fetch was cancelled, we have no data, so we have\n          // to get reject with a CancelledError\n          if (this.state.data === undefined) {\n            throw error\n          }\n          return this.state.data\n        }\n      }\n      this.#dispatch({\n        type: 'error',\n        error: error as TError,\n      })\n\n      // Notify cache callback\n      this.#cache.config.onError?.(\n        error as any,\n        this as Query<any, any, any, any>,\n      )\n      this.#cache.config.onSettled?.(\n        this.state.data,\n        error as any,\n        this as Query<any, any, any, any>,\n      )\n\n      throw error // rethrow the error for further handling\n    } finally {\n      // Schedule query gc after fetching\n      this.scheduleGc()\n    }\n  }\n\n  #dispatch(action: Action<TData, TError>): void {\n    const reducer = (\n      state: QueryState<TData, TError>,\n    ): QueryState<TData, TError> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            fetchStatus: 'paused',\n          }\n        case 'continue':\n          return {\n            ...state,\n            fetchStatus: 'fetching',\n          }\n        case 'fetch':\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null,\n          }\n        case 'success':\n          const newState = {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success' as const,\n            ...(!action.manual && {\n              fetchStatus: 'idle' as const,\n              fetchFailureCount: 0,\n              fetchFailureReason: null,\n            }),\n          }\n          // If fetching ends successfully, we don't need revertState as a fallback anymore.\n          // For manual updates, capture the state to revert to it in case of a cancellation.\n          this.#revertState = action.manual ? newState : undefined\n\n          return newState\n        case 'error':\n          const error = action.error\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: 'idle',\n            status: 'error',\n          }\n        case 'invalidate':\n          return {\n            ...state,\n            isInvalidated: true,\n          }\n        case 'setState':\n          return {\n            ...state,\n            ...action.state,\n          }\n      }\n    }\n\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate()\n      })\n\n      this.#cache.notify({ query: this, type: 'updated', action })\n    })\n  }\n}\n\nexport function fetchState<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey,\n>(\n  data: TData | undefined,\n  options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? 'fetching' : 'paused',\n    ...(data === undefined &&\n      ({\n        error: null,\n        status: 'pending',\n      } as const)),\n  } as const\n}\n\nfunction getDefaultState<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey,\n>(\n  options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): QueryState<TData, TError> {\n  const data =\n    typeof options.initialData === 'function'\n      ? (options.initialData as InitialDataFunction<TData>)()\n      : options.initialData\n\n  const hasData = data !== undefined\n\n  const initialDataUpdatedAt = hasData\n    ? typeof options.initialDataUpdatedAt === 'function'\n      ? (options.initialDataUpdatedAt as () => number | undefined)()\n      : options.initialDataUpdatedAt\n    : 0\n\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? (initialDataUpdatedAt ?? Date.now()) : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'pending',\n    fetchStatus: 'idle',\n  }\n}\n"],"names":["queryFnContext","context"],"mappings":"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","debugId":null}},
    {"offset": {"line": 1342, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/query-core/src/queryCache.ts"],"sourcesContent":["import { hashQueryKeyByOptions, matchQuery } from './utils'\nimport { Query } from './query'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport type { QueryFilters } from './utils'\nimport type { Action, QueryState } from './query'\nimport type {\n  DefaultError,\n  NotifyEvent,\n  QueryKey,\n  QueryOptions,\n  WithRequired,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { QueryObserver } from './queryObserver'\n\n// TYPES\n\ninterface QueryCacheConfig {\n  onError?: (\n    error: DefaultError,\n    query: Query<unknown, unknown, unknown>,\n  ) => void\n  onSuccess?: (data: unknown, query: Query<unknown, unknown, unknown>) => void\n  onSettled?: (\n    data: unknown | undefined,\n    error: DefaultError | null,\n    query: Query<unknown, unknown, unknown>,\n  ) => void\n}\n\ninterface NotifyEventQueryAdded extends NotifyEvent {\n  type: 'added'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryRemoved extends NotifyEvent {\n  type: 'removed'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryUpdated extends NotifyEvent {\n  type: 'updated'\n  query: Query<any, any, any, any>\n  action: Action<any, any>\n}\n\ninterface NotifyEventQueryObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverResultsUpdated extends NotifyEvent {\n  type: 'observerResultsUpdated'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\nexport type QueryCacheNotifyEvent =\n  | NotifyEventQueryAdded\n  | NotifyEventQueryRemoved\n  | NotifyEventQueryUpdated\n  | NotifyEventQueryObserverAdded\n  | NotifyEventQueryObserverRemoved\n  | NotifyEventQueryObserverResultsUpdated\n  | NotifyEventQueryObserverOptionsUpdated\n\ntype QueryCacheListener = (event: QueryCacheNotifyEvent) => void\n\nexport interface QueryStore {\n  has: (queryHash: string) => boolean\n  set: (queryHash: string, query: Query) => void\n  get: (queryHash: string) => Query | undefined\n  delete: (queryHash: string) => void\n  values: () => IterableIterator<Query>\n}\n\n// CLASS\n\nexport class QueryCache extends Subscribable<QueryCacheListener> {\n  #queries: QueryStore\n\n  constructor(public config: QueryCacheConfig = {}) {\n    super()\n    this.#queries = new Map<string, Query>()\n  }\n\n  build<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    client: QueryClient,\n    options: WithRequired<\n      QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey'\n    >,\n    state?: QueryState<TData, TError>,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> {\n    const queryKey = options.queryKey\n    const queryHash =\n      options.queryHash ?? hashQueryKeyByOptions(queryKey, options)\n    let query = this.get<TQueryFnData, TError, TData, TQueryKey>(queryHash)\n\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey),\n      })\n      this.add(query)\n    }\n\n    return query\n  }\n\n  add(query: Query<any, any, any, any>): void {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query)\n\n      this.notify({\n        type: 'added',\n        query,\n      })\n    }\n  }\n\n  remove(query: Query<any, any, any, any>): void {\n    const queryInMap = this.#queries.get(query.queryHash)\n\n    if (queryInMap) {\n      query.destroy()\n\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash)\n      }\n\n      this.notify({ type: 'removed', query })\n    }\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query)\n      })\n    })\n  }\n\n  get<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryHash: string,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> | undefined {\n    return this.#queries.get(queryHash) as\n      | Query<TQueryFnData, TError, TData, TQueryKey>\n      | undefined\n  }\n\n  getAll(): Array<Query> {\n    return [...this.#queries.values()]\n  }\n\n  find<TQueryFnData = unknown, TError = DefaultError, TData = TQueryFnData>(\n    filters: WithRequired<QueryFilters, 'queryKey'>,\n  ): Query<TQueryFnData, TError, TData> | undefined {\n    const defaultedFilters = { exact: true, ...filters }\n\n    return this.getAll().find((query) =>\n      matchQuery(defaultedFilters, query),\n    ) as Query<TQueryFnData, TError, TData> | undefined\n  }\n\n  findAll(filters: QueryFilters<any> = {}): Array<Query> {\n    const queries = this.getAll()\n    return Object.keys(filters).length > 0\n      ? queries.filter((query) => matchQuery(filters, query))\n      : queries\n  }\n\n  notify(event: QueryCacheNotifyEvent): void {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event)\n      })\n    })\n  }\n\n  onFocus(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus()\n      })\n    })\n  }\n\n  onOnline(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline()\n      })\n    })\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1455, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/query-core/src/mutation.ts"],"sourcesContent":["import { notifyManager } from './notifyManager'\nimport { Removable } from './removable'\nimport { createRetryer } from './retryer'\nimport type {\n  DefaultError,\n  MutationFunctionContext,\n  MutationMeta,\n  MutationOptions,\n  MutationStatus,\n} from './types'\nimport type { MutationCache } from './mutationCache'\nimport type { MutationObserver } from './mutationObserver'\nimport type { Retryer } from './retryer'\nimport type { QueryClient } from './queryClient'\n\n// TYPES\n\ninterface MutationConfig<TData, TError, TVariables, TOnMutateResult> {\n  client: QueryClient\n  mutationId: number\n  mutationCache: MutationCache\n  options: MutationOptions<TData, TError, TVariables, TOnMutateResult>\n  state?: MutationState<TData, TError, TVariables, TOnMutateResult>\n}\n\nexport interface MutationState<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = unknown,\n  TOnMutateResult = unknown,\n> {\n  context: TOnMutateResult | undefined\n  data: TData | undefined\n  error: TError | null\n  failureCount: number\n  failureReason: TError | null\n  isPaused: boolean\n  status: MutationStatus\n  variables: TVariables | undefined\n  submittedAt: number\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError | null\n}\n\ninterface PendingAction<TVariables, TOnMutateResult> {\n  type: 'pending'\n  isPaused: boolean\n  variables?: TVariables\n  context?: TOnMutateResult\n}\n\ninterface SuccessAction<TData> {\n  type: 'success'\n  data: TData\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\nexport type Action<TData, TError, TVariables, TOnMutateResult> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | PendingAction<TVariables, TOnMutateResult>\n  | PauseAction\n  | SuccessAction<TData>\n\n// CLASS\n\nexport class Mutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = unknown,\n  TOnMutateResult = unknown,\n> extends Removable {\n  state: MutationState<TData, TError, TVariables, TOnMutateResult>\n  options!: MutationOptions<TData, TError, TVariables, TOnMutateResult>\n  readonly mutationId: number\n\n  #client: QueryClient\n  #observers: Array<\n    MutationObserver<TData, TError, TVariables, TOnMutateResult>\n  >\n  #mutationCache: MutationCache\n  #retryer?: Retryer<TData>\n\n  constructor(\n    config: MutationConfig<TData, TError, TVariables, TOnMutateResult>,\n  ) {\n    super()\n\n    this.#client = config.client\n    this.mutationId = config.mutationId\n    this.#mutationCache = config.mutationCache\n    this.#observers = []\n    this.state = config.state || getDefaultState()\n\n    this.setOptions(config.options)\n    this.scheduleGc()\n  }\n\n  setOptions(\n    options: MutationOptions<TData, TError, TVariables, TOnMutateResult>,\n  ): void {\n    this.options = options\n\n    this.updateGcTime(this.options.gcTime)\n  }\n\n  get meta(): MutationMeta | undefined {\n    return this.options.meta\n  }\n\n  addObserver(observer: MutationObserver<any, any, any, any>): void {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer)\n\n      // Stop the mutation from being garbage collected\n      this.clearGcTimeout()\n\n      this.#mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer,\n      })\n    }\n  }\n\n  removeObserver(observer: MutationObserver<any, any, any, any>): void {\n    this.#observers = this.#observers.filter((x) => x !== observer)\n\n    this.scheduleGc()\n\n    this.#mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer,\n    })\n  }\n\n  protected optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === 'pending') {\n        this.scheduleGc()\n      } else {\n        this.#mutationCache.remove(this)\n      }\n    }\n  }\n\n  continue(): Promise<unknown> {\n    return (\n      this.#retryer?.continue() ??\n      // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n      this.execute(this.state.variables!)\n    )\n  }\n\n  async execute(variables: TVariables): Promise<TData> {\n    const onContinue = () => {\n      this.#dispatch({ type: 'continue' })\n    }\n\n    const mutationFnContext = {\n      client: this.#client,\n      meta: this.options.meta,\n      mutationKey: this.options.mutationKey,\n    } satisfies MutationFunctionContext\n\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error('No mutationFn found'))\n        }\n\n        return this.options.mutationFn(variables, mutationFnContext)\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: 'failed', failureCount, error })\n      },\n      onPause: () => {\n        this.#dispatch({ type: 'pause' })\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this),\n    })\n\n    const restored = this.state.status === 'pending'\n    const isPaused = !this.#retryer.canStart()\n\n    try {\n      if (restored) {\n        // Dispatch continue action to unpause restored mutation\n        onContinue()\n      } else {\n        this.#dispatch({ type: 'pending', variables, isPaused })\n        // Notify cache callback\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n          mutationFnContext,\n        )\n        const context = await this.options.onMutate?.(\n          variables,\n          mutationFnContext,\n        )\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: 'pending',\n            context,\n            variables,\n            isPaused,\n          })\n        }\n      }\n      const data = await this.#retryer.start()\n\n      // Notify cache callback\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n        mutationFnContext,\n      )\n\n      await this.options.onSuccess?.(\n        data,\n        variables,\n        this.state.context!,\n        mutationFnContext,\n      )\n\n      // Notify cache callback\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n        mutationFnContext,\n      )\n\n      await this.options.onSettled?.(\n        data,\n        null,\n        variables,\n        this.state.context,\n        mutationFnContext,\n      )\n\n      this.#dispatch({ type: 'success', data })\n      return data\n    } catch (error) {\n      try {\n        // Notify cache callback\n        await this.#mutationCache.config.onError?.(\n          error as any,\n          variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n          mutationFnContext,\n        )\n\n        await this.options.onError?.(\n          error as TError,\n          variables,\n          this.state.context,\n          mutationFnContext,\n        )\n\n        // Notify cache callback\n        await this.#mutationCache.config.onSettled?.(\n          undefined,\n          error as any,\n          this.state.variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n          mutationFnContext,\n        )\n\n        await this.options.onSettled?.(\n          undefined,\n          error as TError,\n          variables,\n          this.state.context,\n          mutationFnContext,\n        )\n        throw error\n      } finally {\n        this.#dispatch({ type: 'error', error: error as TError })\n      }\n    } finally {\n      this.#mutationCache.runNext(this)\n    }\n  }\n\n  #dispatch(action: Action<TData, TError, TVariables, TOnMutateResult>): void {\n    const reducer = (\n      state: MutationState<TData, TError, TVariables, TOnMutateResult>,\n    ): MutationState<TData, TError, TVariables, TOnMutateResult> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            isPaused: true,\n          }\n        case 'continue':\n          return {\n            ...state,\n            isPaused: false,\n          }\n        case 'pending':\n          return {\n            ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: 'pending',\n            variables: action.variables,\n            submittedAt: Date.now(),\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false,\n          }\n        case 'error':\n          return {\n            ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error',\n          }\n      }\n    }\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action)\n      })\n      this.#mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action,\n      })\n    })\n  }\n}\n\nexport function getDefaultState<\n  TData,\n  TError,\n  TVariables,\n  TOnMutateResult,\n>(): MutationState<TData, TError, TVariables, TOnMutateResult> {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined,\n    submittedAt: 0,\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1694, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/query-core/src/mutationCache.ts"],"sourcesContent":["import { notifyManager } from './notifyManager'\nimport { Mutation } from './mutation'\nimport { matchMutation, noop } from './utils'\nimport { Subscribable } from './subscribable'\nimport type { MutationObserver } from './mutationObserver'\nimport type {\n  DefaultError,\n  MutationFunctionContext,\n  MutationOptions,\n  NotifyEvent,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { Action, MutationState } from './mutation'\nimport type { MutationFilters } from './utils'\n\n// TYPES\n\ninterface MutationCacheConfig {\n  onError?: (\n    error: DefaultError,\n    variables: unknown,\n    onMutateResult: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n    context: MutationFunctionContext,\n  ) => Promise<unknown> | unknown\n  onSuccess?: (\n    data: unknown,\n    variables: unknown,\n    onMutateResult: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n    context: MutationFunctionContext,\n  ) => Promise<unknown> | unknown\n  onMutate?: (\n    variables: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n    context: MutationFunctionContext,\n  ) => Promise<unknown> | unknown\n  onSettled?: (\n    data: unknown | undefined,\n    error: DefaultError | null,\n    variables: unknown,\n    onMutateResult: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n    context: MutationFunctionContext,\n  ) => Promise<unknown> | unknown\n}\n\ninterface NotifyEventMutationAdded extends NotifyEvent {\n  type: 'added'\n  mutation: Mutation<any, any, any, any>\n}\ninterface NotifyEventMutationRemoved extends NotifyEvent {\n  type: 'removed'\n  mutation: Mutation<any, any, any, any>\n}\n\ninterface NotifyEventMutationObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  mutation?: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any, any>\n}\n\ninterface NotifyEventMutationUpdated extends NotifyEvent {\n  type: 'updated'\n  mutation: Mutation<any, any, any, any>\n  action: Action<any, any, any, any>\n}\n\nexport type MutationCacheNotifyEvent =\n  | NotifyEventMutationAdded\n  | NotifyEventMutationRemoved\n  | NotifyEventMutationObserverAdded\n  | NotifyEventMutationObserverRemoved\n  | NotifyEventMutationObserverOptionsUpdated\n  | NotifyEventMutationUpdated\n\ntype MutationCacheListener = (event: MutationCacheNotifyEvent) => void\n\n// CLASS\n\nexport class MutationCache extends Subscribable<MutationCacheListener> {\n  #mutations: Set<Mutation<any, any, any, any>>\n  #scopes: Map<string, Array<Mutation<any, any, any, any>>>\n  #mutationId: number\n\n  constructor(public config: MutationCacheConfig = {}) {\n    super()\n    this.#mutations = new Set()\n    this.#scopes = new Map()\n    this.#mutationId = 0\n  }\n\n  build<TData, TError, TVariables, TOnMutateResult>(\n    client: QueryClient,\n    options: MutationOptions<TData, TError, TVariables, TOnMutateResult>,\n    state?: MutationState<TData, TError, TVariables, TOnMutateResult>,\n  ): Mutation<TData, TError, TVariables, TOnMutateResult> {\n    const mutation = new Mutation({\n      client,\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n    })\n\n    this.add(mutation)\n\n    return mutation\n  }\n\n  add(mutation: Mutation<any, any, any, any>): void {\n    this.#mutations.add(mutation)\n    const scope = scopeFor(mutation)\n    if (typeof scope === 'string') {\n      const scopedMutations = this.#scopes.get(scope)\n      if (scopedMutations) {\n        scopedMutations.push(mutation)\n      } else {\n        this.#scopes.set(scope, [mutation])\n      }\n    }\n    this.notify({ type: 'added', mutation })\n  }\n\n  remove(mutation: Mutation<any, any, any, any>): void {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation)\n      if (typeof scope === 'string') {\n        const scopedMutations = this.#scopes.get(scope)\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation)\n            if (index !== -1) {\n              scopedMutations.splice(index, 1)\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope)\n          }\n        }\n      }\n    }\n\n    // Currently we notify the removal even if the mutation was already removed.\n    // Consider making this an error or not notifying of the removal depending on the desired semantics.\n    this.notify({ type: 'removed', mutation })\n  }\n\n  canRun(mutation: Mutation<any, any, any, any>): boolean {\n    const scope = scopeFor(mutation)\n    if (typeof scope === 'string') {\n      const mutationsWithSameScope = this.#scopes.get(scope)\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === 'pending',\n      )\n      // we can run if there is no current pending mutation (start use-case)\n      // or if WE are the first pending mutation (continue use-case)\n      return !firstPendingMutation || firstPendingMutation === mutation\n    } else {\n      // For unscoped mutations there are never any pending mutations in front of the\n      // current mutation\n      return true\n    }\n  }\n\n  runNext(mutation: Mutation<any, any, any, any>): Promise<unknown> {\n    const scope = scopeFor(mutation)\n    if (typeof scope === 'string') {\n      const foundMutation = this.#scopes\n        .get(scope)\n        ?.find((m) => m !== mutation && m.state.isPaused)\n\n      return foundMutation?.continue() ?? Promise.resolve()\n    } else {\n      return Promise.resolve()\n    }\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: 'removed', mutation })\n      })\n      this.#mutations.clear()\n      this.#scopes.clear()\n    })\n  }\n\n  getAll(): Array<Mutation> {\n    return Array.from(this.#mutations)\n  }\n\n  find<\n    TData = unknown,\n    TError = DefaultError,\n    TVariables = any,\n    TOnMutateResult = unknown,\n  >(\n    filters: MutationFilters,\n  ): Mutation<TData, TError, TVariables, TOnMutateResult> | undefined {\n    const defaultedFilters = { exact: true, ...filters }\n\n    return this.getAll().find((mutation) =>\n      matchMutation(defaultedFilters, mutation),\n    ) as Mutation<TData, TError, TVariables, TOnMutateResult> | undefined\n  }\n\n  findAll(filters: MutationFilters = {}): Array<Mutation> {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation))\n  }\n\n  notify(event: MutationCacheNotifyEvent) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event)\n      })\n    })\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused)\n\n    return notifyManager.batch(() =>\n      Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop)),\n      ),\n    )\n  }\n}\n\nfunction scopeFor(mutation: Mutation<any, any, any, any>) {\n  return mutation.options.scope?.id\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1834, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/query-core/src/infiniteQueryBehavior.ts"],"sourcesContent":["import { addToEnd, addToStart, ensureQueryFn } from './utils'\nimport type { QueryBehavior } from './query'\nimport type {\n  InfiniteData,\n  InfiniteQueryPageParamsOptions,\n  OmitKeyof,\n  QueryFunctionContext,\n  QueryKey,\n} from './types'\n\nexport function infiniteQueryBehavior<TQueryFnData, TError, TData, TPageParam>(\n  pages?: number,\n): QueryBehavior<TQueryFnData, TError, InfiniteData<TData, TPageParam>> {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options as InfiniteQueryPageParamsOptions<TData>\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction\n      const oldPages = context.state.data?.pages || []\n      const oldPageParams = context.state.data?.pageParams || []\n      let result: InfiniteData<unknown> = { pages: [], pageParams: [] }\n      let currentPage = 0\n\n      const fetchFn = async () => {\n        let cancelled = false\n        const addSignalProperty = (object: unknown) => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true\n              } else {\n                context.signal.addEventListener('abort', () => {\n                  cancelled = true\n                })\n              }\n              return context.signal\n            },\n          })\n        }\n\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions)\n\n        // Create function to fetch a page\n        const fetchPage = async (\n          data: InfiniteData<unknown>,\n          param: unknown,\n          previous?: boolean,\n        ): Promise<InfiniteData<unknown>> => {\n          if (cancelled) {\n            return Promise.reject()\n          }\n\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data)\n          }\n\n          const createQueryFnContext = () => {\n            const queryFnContext: OmitKeyof<\n              QueryFunctionContext<QueryKey, unknown>,\n              'signal'\n            > = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? 'backward' : 'forward',\n              meta: context.options.meta,\n            }\n            addSignalProperty(queryFnContext)\n            return queryFnContext as QueryFunctionContext<QueryKey, unknown>\n          }\n\n          const queryFnContext = createQueryFnContext()\n\n          const page = await queryFn(queryFnContext)\n\n          const { maxPages } = context.options\n          const addTo = previous ? addToStart : addToEnd\n\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages),\n          }\n        }\n\n        // fetch next / previous page?\n        if (direction && oldPages.length) {\n          const previous = direction === 'backward'\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams,\n          }\n          const param = pageParamFn(options, oldData)\n\n          result = await fetchPage(oldData, param, previous)\n        } else {\n          const remainingPages = pages ?? oldPages.length\n\n          // Fetch all pages\n          do {\n            const param =\n              currentPage === 0\n                ? (oldPageParams[0] ?? options.initialPageParam)\n                : getNextPageParam(options, result)\n            if (currentPage > 0 && param == null) {\n              break\n            }\n            result = await fetchPage(result, param)\n            currentPage++\n          } while (currentPage < remainingPages)\n        }\n\n        return result\n      }\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn as any,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal,\n            },\n            query,\n          )\n        }\n      } else {\n        context.fetchFn = fetchFn\n      }\n    },\n  }\n}\n\nfunction getNextPageParam(\n  options: InfiniteQueryPageParamsOptions<any>,\n  { pages, pageParams }: InfiniteData<unknown>,\n): unknown | undefined {\n  const lastIndex = pages.length - 1\n  return pages.length > 0\n    ? options.getNextPageParam(\n        pages[lastIndex],\n        pages,\n        pageParams[lastIndex],\n        pageParams,\n      )\n    : undefined\n}\n\nfunction getPreviousPageParam(\n  options: InfiniteQueryPageParamsOptions<any>,\n  { pages, pageParams }: InfiniteData<unknown>,\n): unknown | undefined {\n  return pages.length > 0\n    ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams)\n    : undefined\n}\n\n/**\n * Checks if there is a next page.\n */\nexport function hasNextPage(\n  options: InfiniteQueryPageParamsOptions<any, any>,\n  data?: InfiniteData<unknown>,\n): boolean {\n  if (!data) return false\n  return getNextPageParam(options, data) != null\n}\n\n/**\n * Checks if there is a previous page.\n */\nexport function hasPreviousPage(\n  options: InfiniteQueryPageParamsOptions<any, any>,\n  data?: InfiniteData<unknown>,\n): boolean {\n  if (!data || !options.getPreviousPageParam) return false\n  return getPreviousPageParam(options, data) != null\n}\n"],"names":["queryFnContext"],"mappings":"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","debugId":null}},
    {"offset": {"line": 1960, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/query-core/src/queryClient.ts"],"sourcesContent":["import {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken,\n} from './utils'\nimport { QueryCache } from './queryCache'\nimport { MutationCache } from './mutationCache'\nimport { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { notifyManager } from './notifyManager'\nimport { infiniteQueryBehavior } from './infiniteQueryBehavior'\nimport type {\n  CancelOptions,\n  DefaultError,\n  DefaultOptions,\n  DefaultedQueryObserverOptions,\n  EnsureInfiniteQueryDataOptions,\n  EnsureQueryDataOptions,\n  FetchInfiniteQueryOptions,\n  FetchQueryOptions,\n  InferDataFromTag,\n  InferErrorFromTag,\n  InfiniteData,\n  InvalidateOptions,\n  InvalidateQueryFilters,\n  MutationKey,\n  MutationObserverOptions,\n  MutationOptions,\n  NoInfer,\n  OmitKeyof,\n  QueryClientConfig,\n  QueryKey,\n  QueryObserverOptions,\n  QueryOptions,\n  RefetchOptions,\n  RefetchQueryFilters,\n  ResetOptions,\n  SetDataOptions,\n} from './types'\nimport type { QueryState } from './query'\nimport type { MutationFilters, QueryFilters, Updater } from './utils'\n\n// TYPES\n\ninterface QueryDefaults {\n  queryKey: QueryKey\n  defaultOptions: OmitKeyof<QueryOptions<any, any, any>, 'queryKey'>\n}\n\ninterface MutationDefaults {\n  mutationKey: MutationKey\n  defaultOptions: MutationOptions<any, any, any, any>\n}\n\n// CLASS\n\nexport class QueryClient {\n  #queryCache: QueryCache\n  #mutationCache: MutationCache\n  #defaultOptions: DefaultOptions\n  #queryDefaults: Map<string, QueryDefaults>\n  #mutationDefaults: Map<string, MutationDefaults>\n  #mountCount: number\n  #unsubscribeFocus?: () => void\n  #unsubscribeOnline?: () => void\n\n  constructor(config: QueryClientConfig = {}) {\n    this.#queryCache = config.queryCache || new QueryCache()\n    this.#mutationCache = config.mutationCache || new MutationCache()\n    this.#defaultOptions = config.defaultOptions || {}\n    this.#queryDefaults = new Map()\n    this.#mutationDefaults = new Map()\n    this.#mountCount = 0\n  }\n\n  mount(): void {\n    this.#mountCount++\n    if (this.#mountCount !== 1) return\n\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations()\n        this.#queryCache.onFocus()\n      }\n    })\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations()\n        this.#queryCache.onOnline()\n      }\n    })\n  }\n\n  unmount(): void {\n    this.#mountCount--\n    if (this.#mountCount !== 0) return\n\n    this.#unsubscribeFocus?.()\n    this.#unsubscribeFocus = undefined\n\n    this.#unsubscribeOnline?.()\n    this.#unsubscribeOnline = undefined\n  }\n\n  isFetching<TQueryFilters extends QueryFilters<any> = QueryFilters>(\n    filters?: TQueryFilters,\n  ): number {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: 'fetching' })\n      .length\n  }\n\n  isMutating<\n    TMutationFilters extends MutationFilters<any, any> = MutationFilters,\n  >(filters?: TMutationFilters): number {\n    return this.#mutationCache.findAll({ ...filters, status: 'pending' }).length\n  }\n\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData<\n    TQueryFnData = unknown,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n  >(queryKey: TTaggedQueryKey): TInferredQueryFnData | undefined {\n    const options = this.defaultQueryOptions({ queryKey })\n\n    return this.#queryCache.get<TInferredQueryFnData>(options.queryHash)?.state\n      .data\n  }\n\n  ensureQueryData<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: EnsureQueryDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData> {\n    const defaultedOptions = this.defaultQueryOptions(options)\n    const query = this.#queryCache.build(this, defaultedOptions)\n    const cachedData = query.state.data\n\n    if (cachedData === undefined) {\n      return this.fetchQuery(options)\n    }\n\n    if (\n      options.revalidateIfStale &&\n      query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))\n    ) {\n      void this.prefetchQuery(defaultedOptions)\n    }\n\n    return Promise.resolve(cachedData)\n  }\n\n  getQueriesData<\n    TQueryFnData = unknown,\n    TQueryFilters extends QueryFilters<any> = QueryFilters,\n  >(filters: TQueryFilters): Array<[QueryKey, TQueryFnData | undefined]> {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data as TQueryFnData | undefined\n      return [queryKey, data]\n    })\n  }\n\n  setQueryData<\n    TQueryFnData = unknown,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n  >(\n    queryKey: TTaggedQueryKey,\n    updater: Updater<\n      NoInfer<TInferredQueryFnData> | undefined,\n      NoInfer<TInferredQueryFnData> | undefined\n    >,\n    options?: SetDataOptions,\n  ): NoInfer<TInferredQueryFnData> | undefined {\n    const defaultedOptions = this.defaultQueryOptions<\n      any,\n      any,\n      unknown,\n      any,\n      QueryKey\n    >({ queryKey })\n\n    const query = this.#queryCache.get<TInferredQueryFnData>(\n      defaultedOptions.queryHash,\n    )\n    const prevData = query?.state.data\n    const data = functionalUpdate(updater, prevData)\n\n    if (data === undefined) {\n      return undefined\n    }\n\n    return this.#queryCache\n      .build(this, defaultedOptions)\n      .setData(data, { ...options, manual: true })\n  }\n\n  setQueriesData<\n    TQueryFnData,\n    TQueryFilters extends QueryFilters<any> = QueryFilters,\n  >(\n    filters: TQueryFilters,\n    updater: Updater<\n      NoInfer<TQueryFnData> | undefined,\n      NoInfer<TQueryFnData> | undefined\n    >,\n    options?: SetDataOptions,\n  ): Array<[QueryKey, TQueryFnData | undefined]> {\n    return notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .map(({ queryKey }) => [\n          queryKey,\n          this.setQueryData<TQueryFnData>(queryKey, updater, options),\n        ]),\n    )\n  }\n\n  getQueryState<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n    TInferredError = InferErrorFromTag<TError, TTaggedQueryKey>,\n  >(\n    queryKey: TTaggedQueryKey,\n  ): QueryState<TInferredQueryFnData, TInferredError> | undefined {\n    const options = this.defaultQueryOptions({ queryKey })\n    return this.#queryCache.get<TInferredQueryFnData, TInferredError>(\n      options.queryHash,\n    )?.state\n  }\n\n  removeQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: QueryFilters<TTaggedQueryKey>,\n  ): void {\n    const queryCache = this.#queryCache\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query)\n      })\n    })\n  }\n\n  resetQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: QueryFilters<TTaggedQueryKey>,\n    options?: ResetOptions,\n  ): Promise<void> {\n    const queryCache = this.#queryCache\n\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset()\n      })\n      return this.refetchQueries(\n        {\n          type: 'active',\n          ...filters,\n        },\n        options,\n      )\n    })\n  }\n\n  cancelQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: QueryFilters<TTaggedQueryKey>,\n    cancelOptions: CancelOptions = {},\n  ): Promise<void> {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions }\n\n    const promises = notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .map((query) => query.cancel(defaultedCancelOptions)),\n    )\n\n    return Promise.all(promises).then(noop).catch(noop)\n  }\n\n  invalidateQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: InvalidateQueryFilters<TTaggedQueryKey>,\n    options: InvalidateOptions = {},\n  ): Promise<void> {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate()\n      })\n\n      if (filters?.refetchType === 'none') {\n        return Promise.resolve()\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? 'active',\n        },\n        options,\n      )\n    })\n  }\n\n  refetchQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: RefetchQueryFilters<TTaggedQueryKey>,\n    options: RefetchOptions = {},\n  ): Promise<void> {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true,\n    }\n    const promises = notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .filter((query) => !query.isDisabled() && !query.isStatic())\n        .map((query) => {\n          let promise = query.fetch(undefined, fetchOptions)\n          if (!fetchOptions.throwOnError) {\n            promise = promise.catch(noop)\n          }\n          return query.state.fetchStatus === 'paused'\n            ? Promise.resolve()\n            : promise\n        }),\n    )\n\n    return Promise.all(promises).then(noop)\n  }\n\n  fetchQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = never,\n  >(\n    options: FetchQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<TData> {\n    const defaultedOptions = this.defaultQueryOptions(options)\n\n    // https://github.com/tannerlinsley/react-query/issues/652\n    if (defaultedOptions.retry === undefined) {\n      defaultedOptions.retry = false\n    }\n\n    const query = this.#queryCache.build(this, defaultedOptions)\n\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query),\n    )\n      ? query.fetch(defaultedOptions)\n      : Promise.resolve(query.state.data as TData)\n  }\n\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void> {\n    return this.fetchQuery(options).then(noop).catch(noop)\n  }\n\n  fetchInfiniteQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: FetchInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<InfiniteData<TData, TPageParam>> {\n    options.behavior = infiniteQueryBehavior<\n      TQueryFnData,\n      TError,\n      TData,\n      TPageParam\n    >(options.pages)\n    return this.fetchQuery(options as any)\n  }\n\n  prefetchInfiniteQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: FetchInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<void> {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop)\n  }\n\n  ensureInfiniteQueryData<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: EnsureInfiniteQueryDataOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<InfiniteData<TData, TPageParam>> {\n    options.behavior = infiniteQueryBehavior<\n      TQueryFnData,\n      TError,\n      TData,\n      TPageParam\n    >(options.pages)\n\n    return this.ensureQueryData(options as any)\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations()\n    }\n    return Promise.resolve()\n  }\n\n  getQueryCache(): QueryCache {\n    return this.#queryCache\n  }\n\n  getMutationCache(): MutationCache {\n    return this.#mutationCache\n  }\n\n  getDefaultOptions(): DefaultOptions {\n    return this.#defaultOptions\n  }\n\n  setDefaultOptions(options: DefaultOptions): void {\n    this.#defaultOptions = options\n  }\n\n  setQueryDefaults<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryData = TQueryFnData,\n  >(\n    queryKey: QueryKey,\n    options: Partial<\n      OmitKeyof<\n        QueryObserverOptions<TQueryFnData, TError, TData, TQueryData>,\n        'queryKey'\n      >\n    >,\n  ): void {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options,\n    })\n  }\n\n  getQueryDefaults(\n    queryKey: QueryKey,\n  ): OmitKeyof<QueryObserverOptions<any, any, any, any, any>, 'queryKey'> {\n    const defaults = [...this.#queryDefaults.values()]\n\n    const result: OmitKeyof<\n      QueryObserverOptions<any, any, any, any, any>,\n      'queryKey'\n    > = {}\n\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions)\n      }\n    })\n    return result\n  }\n\n  setMutationDefaults<\n    TData = unknown,\n    TError = DefaultError,\n    TVariables = void,\n    TOnMutateResult = unknown,\n  >(\n    mutationKey: MutationKey,\n    options: OmitKeyof<\n      MutationObserverOptions<TData, TError, TVariables, TOnMutateResult>,\n      'mutationKey'\n    >,\n  ): void {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options,\n    })\n  }\n\n  getMutationDefaults(\n    mutationKey: MutationKey,\n  ): OmitKeyof<MutationObserverOptions<any, any, any, any>, 'mutationKey'> {\n    const defaults = [...this.#mutationDefaults.values()]\n\n    const result: OmitKeyof<\n      MutationObserverOptions<any, any, any, any>,\n      'mutationKey'\n    > = {}\n\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions)\n      }\n    })\n\n    return result\n  }\n\n  defaultQueryOptions<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = never,\n  >(\n    options:\n      | QueryObserverOptions<\n          TQueryFnData,\n          TError,\n          TData,\n          TQueryData,\n          TQueryKey,\n          TPageParam\n        >\n      | DefaultedQueryObserverOptions<\n          TQueryFnData,\n          TError,\n          TData,\n          TQueryData,\n          TQueryKey\n        >,\n  ): DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  > {\n    if (options._defaulted) {\n      return options as DefaultedQueryObserverOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryData,\n        TQueryKey\n      >\n    }\n\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true,\n    }\n\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions,\n      )\n    }\n\n    // dependent default values\n    if (defaultedOptions.refetchOnReconnect === undefined) {\n      defaultedOptions.refetchOnReconnect =\n        defaultedOptions.networkMode !== 'always'\n    }\n    if (defaultedOptions.throwOnError === undefined) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense\n    }\n\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = 'offlineFirst'\n    }\n\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false\n    }\n\n    return defaultedOptions as DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >\n  }\n\n  defaultMutationOptions<T extends MutationOptions<any, any, any, any>>(\n    options?: T,\n  ): T {\n    if (options?._defaulted) {\n      return options\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...(options?.mutationKey &&\n        this.getMutationDefaults(options.mutationKey)),\n      ...options,\n      _defaulted: true,\n    } as T\n  }\n\n  clear(): void {\n    this.#queryCache.clear()\n    this.#mutationCache.clear()\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2273, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n"],"names":["module","exports","require","vendored","React"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2278, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxRuntime\n"],"names":["module","exports","require","vendored","ReactJsxRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,eAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2283, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/react-query/src/QueryClientProvider.tsx"],"sourcesContent":["'use client'\nimport * as React from 'react'\n\nimport type { QueryClient } from '@tanstack/query-core'\n\nexport const QueryClientContext = React.createContext<QueryClient | undefined>(\n  undefined,\n)\n\nexport const useQueryClient = (queryClient?: QueryClient) => {\n  const client = React.useContext(QueryClientContext)\n\n  if (queryClient) {\n    return queryClient\n  }\n\n  if (!client) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one')\n  }\n\n  return client\n}\n\nexport type QueryClientProviderProps = {\n  client: QueryClient\n  children?: React.ReactNode\n}\n\nexport const QueryClientProvider = ({\n  client,\n  children,\n}: QueryClientProviderProps): React.JSX.Element => {\n  React.useEffect(() => {\n    client.mount()\n    return () => {\n      client.unmount()\n    }\n  }, [client])\n\n  return (\n    <QueryClientContext.Provider value={client}>\n      {children}\n    </QueryClientContext.Provider>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;AACA,YAAY,WAAW;AAuCnB;;;;AAnCG,IAAM,qBAA2B,sNAAA,CACtC,KAAA;AAGK,IAAM,iBAAiB,CAAC,gBAA8B;IAC3D,MAAM,SAAe,mNAAA,CAAW,kBAAkB;IAElD,IAAI,aAAa;QACf,OAAO;IACT;IAEA,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM,wDAAwD;IAC1E;IAEA,OAAO;AACT;AAOO,IAAM,sBAAsB,CAAC,EAClC,MAAA,EACA,QAAA,EACF,KAAmD;IAC3C,kNAAA,CAAU,MAAM;QACpB,OAAO,KAAA,CAAM;QACb,OAAO,MAAM;YACX,OAAO,OAAA,CAAQ;QACjB;IACF,GAAG;QAAC,MAAM;KAAC;IAEX,OACE,aAAA,GAAA,IAAA,8NAAA,EAAC,mBAAmB,QAAA,EAAnB;QAA4B,OAAO;QACjC;IAAA,CACH;AAEJ","debugId":null}},
    {"offset": {"line": 2328, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@trpc/client/dist/objectSpread2-BvkFp-_Y.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/typeof.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/toPrimitive.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/toPropertyKey.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/defineProperty.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/objectSpread2.js"],"sourcesContent":["function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var defineProperty = require(\"./defineProperty.js\");\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["_typeof","o","_typeof","toPrimitive","toPropertyKey","r"],"mappings":"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","debugId":null}},
    {"offset": {"line": 2461, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@trpc/server/dist/observable-UMO3vUa_.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/observable/observable.ts"],"sourcesContent":["import type { Result } from '../unstable-core-do-not-import';\nimport type {\n  Observable,\n  Observer,\n  OperatorFunction,\n  TeardownLogic,\n  UnaryFunction,\n  Unsubscribable,\n} from './types';\n\n/** @public */\nexport type inferObservableValue<TObservable> =\n  TObservable extends Observable<infer TValue, unknown> ? TValue : never;\n\n/** @public */\nexport function isObservable(x: unknown): x is Observable<unknown, unknown> {\n  return typeof x === 'object' && x !== null && 'subscribe' in x;\n}\n\n/** @public */\nexport function observable<TValue, TError = unknown>(\n  subscribe: (observer: Observer<TValue, TError>) => TeardownLogic,\n): Observable<TValue, TError> {\n  const self: Observable<TValue, TError> = {\n    subscribe(observer) {\n      let teardownRef: TeardownLogic | null = null;\n      let isDone = false;\n      let unsubscribed = false;\n      let teardownImmediately = false;\n      function unsubscribe() {\n        if (teardownRef === null) {\n          teardownImmediately = true;\n          return;\n        }\n        if (unsubscribed) {\n          return;\n        }\n        unsubscribed = true;\n\n        if (typeof teardownRef === 'function') {\n          teardownRef();\n        } else if (teardownRef) {\n          teardownRef.unsubscribe();\n        }\n      }\n      teardownRef = subscribe({\n        next(value) {\n          if (isDone) {\n            return;\n          }\n          observer.next?.(value);\n        },\n        error(err) {\n          if (isDone) {\n            return;\n          }\n          isDone = true;\n          observer.error?.(err);\n          unsubscribe();\n        },\n        complete() {\n          if (isDone) {\n            return;\n          }\n          isDone = true;\n          observer.complete?.();\n          unsubscribe();\n        },\n      });\n      if (teardownImmediately) {\n        unsubscribe();\n      }\n      return {\n        unsubscribe,\n      };\n    },\n    pipe(\n      ...operations: OperatorFunction<any, any, any, any>[]\n    ): Observable<any, any> {\n      return operations.reduce(pipeReducer, self);\n    },\n  };\n  return self;\n}\n\nfunction pipeReducer(prev: any, fn: UnaryFunction<any, any>) {\n  return fn(prev);\n}\n\n/** @internal */\nexport function observableToPromise<TValue>(\n  observable: Observable<TValue, unknown>,\n) {\n  const ac = new AbortController();\n  const promise = new Promise<TValue>((resolve, reject) => {\n    let isDone = false;\n    function onDone() {\n      if (isDone) {\n        return;\n      }\n      isDone = true;\n      obs$.unsubscribe();\n    }\n    ac.signal.addEventListener('abort', () => {\n      reject(ac.signal.reason);\n    });\n    const obs$ = observable.subscribe({\n      next(data) {\n        isDone = true;\n        resolve(data);\n        onDone();\n      },\n      error(data) {\n        reject(data);\n      },\n      complete() {\n        ac.abort();\n        onDone();\n      },\n    });\n  });\n  return promise;\n}\n\n/**\n * @internal\n */\nfunction observableToReadableStream<TValue>(\n  observable: Observable<TValue, unknown>,\n  signal: AbortSignal,\n): ReadableStream<Result<TValue>> {\n  let unsub: Unsubscribable | null = null;\n\n  const onAbort = () => {\n    unsub?.unsubscribe();\n    unsub = null;\n    signal.removeEventListener('abort', onAbort);\n  };\n\n  return new ReadableStream<Result<TValue>>({\n    start(controller) {\n      unsub = observable.subscribe({\n        next(data) {\n          controller.enqueue({ ok: true, value: data });\n        },\n        error(error) {\n          controller.enqueue({ ok: false, error });\n          controller.close();\n        },\n        complete() {\n          controller.close();\n        },\n      });\n\n      if (signal.aborted) {\n        onAbort();\n      } else {\n        signal.addEventListener('abort', onAbort, { once: true });\n      }\n    },\n    cancel() {\n      onAbort();\n    },\n  });\n}\n\n/** @internal */\nexport function observableToAsyncIterable<TValue>(\n  observable: Observable<TValue, unknown>,\n  signal: AbortSignal,\n): AsyncIterable<TValue> {\n  const stream = observableToReadableStream(observable, signal);\n\n  const reader = stream.getReader();\n  const iterator: AsyncIterator<TValue> = {\n    async next() {\n      const value = await reader.read();\n      if (value.done) {\n        return {\n          value: undefined,\n          done: true,\n        };\n      }\n      const { value: result } = value;\n      if (!result.ok) {\n        throw result.error;\n      }\n      return {\n        value: result.value,\n        done: false,\n      };\n    },\n    async return() {\n      await reader.cancel();\n      return {\n        value: undefined,\n        done: true,\n      };\n    },\n  };\n  return {\n    [Symbol.asyncIterator]() {\n      return iterator;\n    },\n  };\n}\n"],"names":["x: unknown","subscribe: (observer: Observer<TValue, TError>) => TeardownLogic","self: Observable<TValue, TError>","teardownRef: TeardownLogic | null","prev: any","fn: UnaryFunction<any, any>","observable: Observable<TValue, unknown>","signal: AbortSignal","unsub: Unsubscribable | null","observable","iterator: AsyncIterator<TValue>"],"mappings":"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","debugId":null}},
    {"offset": {"line": 2632, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@trpc/client/dist/splitLink-B7Cuf2c_.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/links/internals/createChain.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/links/splitLink.ts"],"sourcesContent":["import { observable } from '@trpc/server/observable';\nimport type { AnyRouter } from '@trpc/server/unstable-core-do-not-import';\nimport type {\n  Operation,\n  OperationLink,\n  OperationResultObservable,\n} from '../types';\n\n/** @internal */\nexport function createChain<\n  TRouter extends AnyRouter,\n  TInput = unknown,\n  TOutput = unknown,\n>(opts: {\n  links: OperationLink<TRouter, TInput, TOutput>[];\n  op: Operation<TInput>;\n}): OperationResultObservable<TRouter, TOutput> {\n  return observable((observer) => {\n    function execute(index = 0, op = opts.op) {\n      const next = opts.links[index];\n      if (!next) {\n        throw new Error(\n          'No more links to execute - did you forget to add an ending link?',\n        );\n      }\n      const subscription = next({\n        op,\n        next(nextOp) {\n          const nextObserver = execute(index + 1, nextOp);\n\n          return nextObserver;\n        },\n      });\n      return subscription;\n    }\n\n    const obs$ = execute();\n    return obs$.subscribe(observer);\n  });\n}\n","import { observable } from '@trpc/server/observable';\nimport type { AnyRouter } from '@trpc/server/unstable-core-do-not-import';\nimport { createChain } from './internals/createChain';\nimport type { Operation, TRPCLink } from './types';\n\nfunction asArray<TType>(value: TType | TType[]) {\n  return Array.isArray(value) ? value : [value];\n}\nexport function splitLink<TRouter extends AnyRouter = AnyRouter>(opts: {\n  condition: (op: Operation) => boolean;\n  /**\n   * The link to execute next if the test function returns `true`.\n   */\n  true: TRPCLink<TRouter> | TRPCLink<TRouter>[];\n  /**\n   * The link to execute next if the test function returns `false`.\n   */\n  false: TRPCLink<TRouter> | TRPCLink<TRouter>[];\n}): TRPCLink<TRouter> {\n  return (runtime) => {\n    const yes = asArray(opts.true).map((link) => link(runtime));\n    const no = asArray(opts.false).map((link) => link(runtime));\n    return (props) => {\n      return observable((observer) => {\n        const links = opts.condition(props.op) ? yes : no;\n        return createChain({ op: props.op, links }).subscribe(observer);\n      });\n    };\n  };\n}\n"],"names":["opts: {\n  links: OperationLink<TRouter, TInput, TOutput>[];\n  op: Operation<TInput>;\n}","value: TType | TType[]","opts: {\n  condition: (op: Operation) => boolean;\n  /**\n   * The link to execute next if the test function returns `true`.\n   */\n  true: TRPCLink<TRouter> | TRPCLink<TRouter>[];\n  /**\n   * The link to execute next if the test function returns `false`.\n   */\n  false: TRPCLink<TRouter> | TRPCLink<TRouter>[];\n}"],"mappings":";;;;;;;;;iBASA,SAAgB,YAIdA,IAAAA,EAG8C;IAC9C,WAAO,iLAAA,EAAW,CAAC,aAAa;QAC9B,SAAS,QAAQ,QAAQ,CAAA,EAAG,KAAK,KAAK,EAAA,EAAI;YACxC,MAAM,OAAO,KAAK,KAAA,CAAM,MAAA;YACxB,IAAA,CAAK,KACH,CAAA,MAAM,IAAI,MACR;YAGJ,MAAM,eAAe,KAAK;gBACxB;gBACA,MAAK,MAAA,EAAQ;oBACX,MAAM,eAAe,QAAQ,QAAQ,GAAG,OAAO;oBAE/C,OAAO;gBACR;YACF,EAAC;YACF,OAAO;QACR;QAED,MAAM,OAAO,SAAS;QACtB,OAAO,KAAK,SAAA,CAAU,SAAS;IAChC,EAAC;AACH;;;AClCD,SAAS,QAAeC,KAAAA,EAAwB;IAC9C,OAAO,MAAM,OAAA,CAAQ,MAAM,GAAG,QAAQ;QAAC,KAAM;KAAA;AAC9C;AACD,SAAgB,UAAiDC,IAAAA,EAU3C;IACpB,OAAO,CAAC,YAAY;QAClB,MAAM,MAAM,QAAQ,KAAK,IAAA,CAAK,CAAC,GAAA,CAAI,CAAC,OAAS,KAAK,QAAQ,CAAC;QAC3D,MAAM,KAAK,QAAQ,KAAK,KAAA,CAAM,CAAC,GAAA,CAAI,CAAC,OAAS,KAAK,QAAQ,CAAC;QAC3D,OAAO,CAAC,UAAU;YAChB,WAAO,iLAAA,EAAW,CAAC,aAAa;gBAC9B,MAAM,QAAQ,KAAK,SAAA,CAAU,MAAM,EAAA,CAAG,GAAG,MAAM;gBAC/C,OAAO,YAAY;oBAAE,IAAI,MAAM,EAAA;oBAAI;gBAAO,EAAC,CAAC,SAAA,CAAU,SAAS;YAChE,EAAC;QACH;IACF;AACF","debugId":null}},
    {"offset": {"line": 2687, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@trpc/server/dist/utils-CLZnJdb_.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/rpc/codes.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/utils.ts"],"sourcesContent":["import type { InvertKeyValue, ValueOf } from '../types';\n\n// reference: https://www.jsonrpc.org/specification\n\n/**\n * JSON-RPC 2.0 Error codes\n *\n * `-32000` to `-32099` are reserved for implementation-defined server-errors.\n * For tRPC we're copying the last digits of HTTP 4XX errors.\n */\nexport const TRPC_ERROR_CODES_BY_KEY = {\n  /**\n   * Invalid JSON was received by the server.\n   * An error occurred on the server while parsing the JSON text.\n   */\n  PARSE_ERROR: -32700,\n  /**\n   * The JSON sent is not a valid Request object.\n   */\n  BAD_REQUEST: -32600, // 400\n\n  // Internal JSON-RPC error\n  INTERNAL_SERVER_ERROR: -32603, // 500\n  NOT_IMPLEMENTED: -32603, // 501\n  BAD_GATEWAY: -32603, // 502\n  SERVICE_UNAVAILABLE: -32603, // 503\n  GATEWAY_TIMEOUT: -32603, // 504\n\n  // Implementation specific errors\n  UNAUTHORIZED: -32001, // 401\n  PAYMENT_REQUIRED: -32002, // 402\n  FORBIDDEN: -32003, // 403\n  NOT_FOUND: -32004, // 404\n  METHOD_NOT_SUPPORTED: -32005, // 405\n  TIMEOUT: -32008, // 408\n  CONFLICT: -32009, // 409\n  PRECONDITION_FAILED: -32012, // 412\n  PAYLOAD_TOO_LARGE: -32013, // 413\n  UNSUPPORTED_MEDIA_TYPE: -32015, // 415\n  UNPROCESSABLE_CONTENT: -32022, // 422\n  PRECONDITION_REQUIRED: -32028, // 428\n  TOO_MANY_REQUESTS: -32029, // 429\n  CLIENT_CLOSED_REQUEST: -32099, // 499\n} as const;\n\n// pure\nexport const TRPC_ERROR_CODES_BY_NUMBER: InvertKeyValue<\n  typeof TRPC_ERROR_CODES_BY_KEY\n> = {\n  [-32700]: 'PARSE_ERROR',\n  [-32600]: 'BAD_REQUEST',\n  [-32603]: 'INTERNAL_SERVER_ERROR',\n  [-32001]: 'UNAUTHORIZED',\n  [-32002]: 'PAYMENT_REQUIRED',\n  [-32003]: 'FORBIDDEN',\n  [-32004]: 'NOT_FOUND',\n  [-32005]: 'METHOD_NOT_SUPPORTED',\n  [-32008]: 'TIMEOUT',\n  [-32009]: 'CONFLICT',\n  [-32012]: 'PRECONDITION_FAILED',\n  [-32013]: 'PAYLOAD_TOO_LARGE',\n  [-32015]: 'UNSUPPORTED_MEDIA_TYPE',\n  [-32022]: 'UNPROCESSABLE_CONTENT',\n  [-32028]: 'PRECONDITION_REQUIRED',\n  [-32029]: 'TOO_MANY_REQUESTS',\n  [-32099]: 'CLIENT_CLOSED_REQUEST',\n};\n\nexport type TRPC_ERROR_CODE_NUMBER = ValueOf<typeof TRPC_ERROR_CODES_BY_KEY>;\nexport type TRPC_ERROR_CODE_KEY = keyof typeof TRPC_ERROR_CODES_BY_KEY;\n\n/**\n * tRPC error codes that are considered retryable\n * With out of the box SSE, the client will reconnect when these errors are encountered\n */\nexport const retryableRpcCodes: TRPC_ERROR_CODE_NUMBER[] = [\n  TRPC_ERROR_CODES_BY_KEY.BAD_GATEWAY,\n  TRPC_ERROR_CODES_BY_KEY.SERVICE_UNAVAILABLE,\n  TRPC_ERROR_CODES_BY_KEY.GATEWAY_TIMEOUT,\n  TRPC_ERROR_CODES_BY_KEY.INTERNAL_SERVER_ERROR,\n];\n","/** @internal */\nexport type UnsetMarker = 'unsetMarker' & {\n  __brand: 'unsetMarker';\n};\n\n/**\n * Ensures there are no duplicate keys when building a procedure.\n * @internal\n */\nexport function mergeWithoutOverrides<TType extends Record<string, unknown>>(\n  obj1: TType,\n  ...objs: Partial<TType>[]\n): TType {\n  const newObj: TType = Object.assign(Object.create(null), obj1);\n\n  for (const overrides of objs) {\n    for (const key in overrides) {\n      if (key in newObj && newObj[key] !== overrides[key]) {\n        throw new Error(`Duplicate key ${key}`);\n      }\n      newObj[key as keyof TType] = overrides[key] as TType[keyof TType];\n    }\n  }\n  return newObj;\n}\n\n/**\n * Check that value is object\n * @internal\n */\nexport function isObject(value: unknown): value is Record<string, unknown> {\n  return !!value && !Array.isArray(value) && typeof value === 'object';\n}\n\ntype AnyFn = ((...args: any[]) => unknown) & Record<keyof any, unknown>;\nexport function isFunction(fn: unknown): fn is AnyFn {\n  return typeof fn === 'function';\n}\n\n/**\n * Create an object without inheriting anything from `Object.prototype`\n * @internal\n */\nexport function omitPrototype<TObj extends Record<string, unknown>>(\n  obj: TObj,\n): TObj {\n  return Object.assign(Object.create(null), obj);\n}\n\nconst asyncIteratorsSupported =\n  typeof Symbol === 'function' && !!Symbol.asyncIterator;\n\nexport function isAsyncIterable<TValue>(\n  value: unknown,\n): value is AsyncIterable<TValue> {\n  return (\n    asyncIteratorsSupported && isObject(value) && Symbol.asyncIterator in value\n  );\n}\n\n/**\n * Run an IIFE\n */\nexport const run = <TValue>(fn: () => TValue): TValue => fn();\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function noop(): void {}\n\nexport function identity<T>(it: T): T {\n  return it;\n}\n\n/**\n * Generic runtime assertion function. Throws, if the condition is not `true`.\n *\n * Can be used as a slightly less dangerous variant of type assertions. Code\n * mistakes would be revealed at runtime then (hopefully during testing).\n */\nexport function assert(\n  condition: boolean,\n  msg = 'no additional info',\n): asserts condition {\n  if (!condition) {\n    throw new Error(`AssertionError: ${msg}`);\n  }\n}\n\nexport function sleep(ms = 0): Promise<void> {\n  return new Promise<void>((res) => setTimeout(res, ms));\n}\n\n/**\n * Ponyfill for\n * [`AbortSignal.any`](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/any_static).\n */\nexport function abortSignalsAnyPonyfill(signals: AbortSignal[]): AbortSignal {\n  if (typeof AbortSignal.any === 'function') {\n    return AbortSignal.any(signals);\n  }\n\n  const ac = new AbortController();\n\n  for (const signal of signals) {\n    if (signal.aborted) {\n      trigger();\n      break;\n    }\n    signal.addEventListener('abort', trigger, { once: true });\n  }\n\n  return ac.signal;\n\n  function trigger() {\n    ac.abort();\n    for (const signal of signals) {\n      signal.removeEventListener('abort', trigger);\n    }\n  }\n}\n"],"names":["TRPC_ERROR_CODES_BY_NUMBER: InvertKeyValue<\n  typeof TRPC_ERROR_CODES_BY_KEY\n>","retryableRpcCodes: TRPC_ERROR_CODE_NUMBER[]","obj1: TType","newObj: TType","value: unknown","fn: unknown","obj: TObj","fn: () => TValue","it: T","condition: boolean","signals: AbortSignal[]"],"mappings":"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","debugId":null}},
    {"offset": {"line": 2853, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@trpc/client/dist/TRPCClientError-CjKyS10w.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/TRPCClientError.ts"],"sourcesContent":["import type {\n  inferClientTypes,\n  InferrableClientTypes,\n  Maybe,\n  TRPCErrorResponse,\n} from '@trpc/server/unstable-core-do-not-import';\nimport {\n  isObject,\n  type DefaultErrorShape,\n} from '@trpc/server/unstable-core-do-not-import';\n\ntype inferErrorShape<TInferrable extends InferrableClientTypes> =\n  inferClientTypes<TInferrable>['errorShape'];\nexport interface TRPCClientErrorBase<TShape extends DefaultErrorShape> {\n  readonly message: string;\n  readonly shape: Maybe<TShape>;\n  readonly data: Maybe<TShape['data']>;\n}\nexport type TRPCClientErrorLike<TInferrable extends InferrableClientTypes> =\n  TRPCClientErrorBase<inferErrorShape<TInferrable>>;\n\nexport function isTRPCClientError<TInferrable extends InferrableClientTypes>(\n  cause: unknown,\n): cause is TRPCClientError<TInferrable> {\n  return cause instanceof TRPCClientError;\n}\n\nfunction isTRPCErrorResponse(obj: unknown): obj is TRPCErrorResponse<any> {\n  return (\n    isObject(obj) &&\n    isObject(obj['error']) &&\n    typeof obj['error']['code'] === 'number' &&\n    typeof obj['error']['message'] === 'string'\n  );\n}\n\nfunction getMessageFromUnknownError(err: unknown, fallback: string): string {\n  if (typeof err === 'string') {\n    return err;\n  }\n  if (isObject(err) && typeof err['message'] === 'string') {\n    return err['message'];\n  }\n  return fallback;\n}\n\nexport class TRPCClientError<TRouterOrProcedure extends InferrableClientTypes>\n  extends Error\n  implements TRPCClientErrorBase<inferErrorShape<TRouterOrProcedure>>\n{\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore override doesn't work in all environments due to \"This member cannot have an 'override' modifier because it is not declared in the base class 'Error'\"\n  public override readonly cause;\n  public readonly shape: Maybe<inferErrorShape<TRouterOrProcedure>>;\n  public readonly data: Maybe<inferErrorShape<TRouterOrProcedure>['data']>;\n\n  /**\n   * Additional meta data about the error\n   * In the case of HTTP-errors, we'll have `response` and potentially `responseJSON` here\n   */\n  public meta;\n\n  constructor(\n    message: string,\n    opts?: {\n      result?: Maybe<TRPCErrorResponse<inferErrorShape<TRouterOrProcedure>>>;\n      cause?: Error;\n      meta?: Record<string, unknown>;\n    },\n  ) {\n    const cause = opts?.cause;\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore https://github.com/tc39/proposal-error-cause\n    super(message, { cause });\n\n    this.meta = opts?.meta;\n\n    this.cause = cause;\n    this.shape = opts?.result?.error;\n    this.data = opts?.result?.error.data;\n    this.name = 'TRPCClientError';\n\n    Object.setPrototypeOf(this, TRPCClientError.prototype);\n  }\n\n  public static from<TRouterOrProcedure extends InferrableClientTypes>(\n    _cause: Error | TRPCErrorResponse<any> | object,\n    opts: { meta?: Record<string, unknown> } = {},\n  ): TRPCClientError<TRouterOrProcedure> {\n    const cause = _cause as unknown;\n\n    if (isTRPCClientError(cause)) {\n      if (opts.meta) {\n        // Decorate with meta error data\n        cause.meta = {\n          ...cause.meta,\n          ...opts.meta,\n        };\n      }\n      return cause;\n    }\n    if (isTRPCErrorResponse(cause)) {\n      return new TRPCClientError(cause.error.message, {\n        ...opts,\n        result: cause,\n      });\n    }\n    return new TRPCClientError(\n      getMessageFromUnknownError(cause, 'Unknown error'),\n      {\n        ...opts,\n        cause: cause as any,\n      },\n    );\n  }\n}\n"],"names":["cause: unknown","obj: unknown","err: unknown","fallback: string","message: string","opts?: {\n      result?: Maybe<TRPCErrorResponse<inferErrorShape<TRouterOrProcedure>>>;\n      cause?: Error;\n      meta?: Record<string, unknown>;\n    }","_cause: Error | TRPCErrorResponse<any> | object","opts: { meta?: Record<string, unknown> }"],"mappings":";;;;;;;;;;;;;AAqBA,SAAgB,kBACdA,KAAAA,EACuC;IACvC,OAAO,iBAAiB;AACzB;AAED,SAAS,oBAAoBC,GAAAA,EAA6C;IACxE,WACE,0KAAA,EAAS,IAAI,QACb,0KAAA,EAAS,GAAA,CAAI,QAAA,CAAS,IAAA,OACf,GAAA,CAAI,QAAA,CAAS,OAAA,KAAY,YAAA,OACzB,GAAA,CAAI,QAAA,CAAS,UAAA,KAAe;AAEtC;AAED,SAAS,2BAA2BC,GAAAA,EAAcC,QAAAA,EAA0B;IAC1E,IAAA,OAAW,QAAQ,SACjB,CAAA,OAAO;IAET,QAAI,0KAAA,EAAS,IAAI,IAAA,OAAW,GAAA,CAAI,UAAA,KAAe,SAC7C,CAAA,OAAO,GAAA,CAAI,UAAA;IAEb,OAAO;AACR;AAED,IAAa,kBAAb,MAAa,wBACH,MAEV;IAaE,YACEC,OAAAA,EACAC,IAAAA,CAKA;;QACA,MAAM,QAAA,SAAA,QAAA,SAAA,KAAA,IAAA,KAAA,IAAQ,KAAM,KAAA;QAIpB,KAAA,CAAM,SAAS;YAAE;QAAO,EAAC;2CA2C1B,IAAA,EAjEwB,SAAA,KAAA;2CAiEvB,IAAA,EAhEc,SAAA,KAAA;2CAgEb,IAAA,EA/Da,QAAA,KAAA;2CA+DZ,IAAA,EAzDG,QAAA,KAAA;QAgBL,IAAA,CAAK,IAAA,GAAA,SAAA,QAAA,SAAA,KAAA,IAAA,KAAA,IAAO,KAAM,IAAA;QAElB,IAAA,CAAK,KAAA,GAAQ;QACb,IAAA,CAAK,KAAA,GAAA,SAAA,QAAA,SAAA,KAAA,KAAA,CAAA,eAAQ,KAAM,MAAA,MAAA,QAAA,iBAAA,KAAA,IAAA,KAAA,IAAA,aAAQ,KAAA;QAC3B,IAAA,CAAK,IAAA,GAAA,SAAA,QAAA,SAAA,KAAA,KAAA,CAAA,gBAAO,KAAM,MAAA,MAAA,QAAA,kBAAA,KAAA,IAAA,KAAA,IAAA,cAAQ,KAAA,CAAM,IAAA;QAChC,IAAA,CAAK,IAAA,GAAO;QAEZ,OAAO,cAAA,CAAe,IAAA,EAAM,gBAAgB,SAAA,CAAU;IACvD;IAED,OAAc,KACZC,MAAAA,EACAC,OAA2C,CAAE,CAAA,EACR;QACrC,MAAM,QAAQ;QAEd,IAAI,kBAAkB,MAAM,EAAE;YAC5B,IAAI,KAAK,IAAA,CAEP,CAAA,MAAM,IAAA,GAAA,CAAA,GAAA,qBAAA,OAAA,EAAA,CAAA,GAAA,qBAAA,OAAA,EAAA,CAAA,GACD,MAAM,IAAA,GACN,KAAK,IAAA;YAGZ,OAAO;QACR;QACD,IAAI,oBAAoB,MAAM,CAC5B,CAAA,OAAO,IAAI,gBAAgB,MAAM,KAAA,CAAM,OAAA,EAAA,CAAA,GAAA,qBAAA,OAAA,EAAA,CAAA,GAAA,qBAAA,OAAA,EAAA,CAAA,GAClC,OAAA,CAAA,GAAA;YACH,QAAQ;QAAA;QAGZ,OAAO,IAAI,gBACT,2BAA2B,OAAO,gBAAgB,EAAA,CAAA,GAAA,qBAAA,OAAA,EAAA,CAAA,GAAA,qBAAA,OAAA,EAAA,CAAA,GAE7C,OAAA,CAAA,GAAA;YACI;QAAA;IAGZ;AACF","debugId":null}},
    {"offset": {"line": 2915, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@trpc/client/dist/unstable-internals-Bg7n9BBj.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/internals/transformer.ts"],"sourcesContent":["import type {\n  AnyClientTypes,\n  CombinedDataTransformer,\n  DataTransformerOptions,\n  TypeError,\n} from '@trpc/server/unstable-core-do-not-import';\n\n/**\n * @internal\n */\nexport type CoercedTransformerParameters = {\n  transformer?: DataTransformerOptions;\n};\n\ntype TransformerOptionYes = {\n  /**\n   * Data transformer\n   *\n   * You must use the same transformer on the backend and frontend\n   * @see https://trpc.io/docs/v11/data-transformers\n   **/\n  transformer: DataTransformerOptions;\n};\ntype TransformerOptionNo = {\n  /**\n   * Data transformer\n   *\n   * You must use the same transformer on the backend and frontend\n   * @see https://trpc.io/docs/v11/data-transformers\n   **/\n  transformer?: TypeError<'You must define a transformer on your your `initTRPC`-object first'>;\n};\n\n/**\n * @internal\n */\nexport type TransformerOptions<\n  TRoot extends Pick<AnyClientTypes, 'transformer'>,\n> = TRoot['transformer'] extends true\n  ? TransformerOptionYes\n  : TransformerOptionNo;\n/**\n * @internal\n */\n\n/**\n * @internal\n */\nexport function getTransformer(\n  transformer:\n    | TransformerOptions<{ transformer: false }>['transformer']\n    | TransformerOptions<{ transformer: true }>['transformer']\n    | undefined,\n): CombinedDataTransformer {\n  const _transformer =\n    transformer as CoercedTransformerParameters['transformer'];\n  if (!_transformer) {\n    return {\n      input: {\n        serialize: (data) => data,\n        deserialize: (data) => data,\n      },\n      output: {\n        serialize: (data) => data,\n        deserialize: (data) => data,\n      },\n    };\n  }\n  if ('input' in _transformer) {\n    return _transformer;\n  }\n  return {\n    input: _transformer,\n    output: _transformer,\n  };\n}\n"],"names":["transformer:\n    | TransformerOptions<{ transformer: false }>['transformer']\n    | TransformerOptions<{ transformer: true }>['transformer']\n    | undefined"],"mappings":";;;;;;;;;AAgDA,SAAgB,eACdA,WAAAA,EAIyB;IACzB,MAAM,eACJ;IACF,IAAA,CAAK,aACH,CAAA,OAAO;QACL,OAAO;YACL,WAAW,CAAC,OAAS;YACrB,aAAa,CAAC,OAAS;QACxB;QACD,QAAQ;YACN,WAAW,CAAC,OAAS;YACrB,aAAa,CAAC,OAAS;QACxB;IACF;IAEH,IAAI,WAAW,aACb,CAAA,OAAO;IAET,OAAO;QACL,OAAO;QACP,QAAQ;IACT;AACF","debugId":null}},
    {"offset": {"line": 2948, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@trpc/client/dist/httpUtils-Dv57hbOd.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/getFetch.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/links/internals/httpUtils.ts"],"sourcesContent":["import type { FetchEsque, NativeFetchEsque } from './internals/types';\n\ntype AnyFn = (...args: any[]) => unknown;\n\nconst isFunction = (fn: unknown): fn is AnyFn => typeof fn === 'function';\n\nexport function getFetch(\n  customFetchImpl?: FetchEsque | NativeFetchEsque,\n): FetchEsque {\n  if (customFetchImpl) {\n    return customFetchImpl as FetchEsque;\n  }\n\n  if (typeof window !== 'undefined' && isFunction(window.fetch)) {\n    return window.fetch as FetchEsque;\n  }\n\n  if (typeof globalThis !== 'undefined' && isFunction(globalThis.fetch)) {\n    return globalThis.fetch as FetchEsque;\n  }\n\n  throw new Error('No fetch implementation found');\n}\n","import type {\n  AnyClientTypes,\n  CombinedDataTransformer,\n  Maybe,\n  ProcedureType,\n  TRPCAcceptHeader,\n  TRPCResponse,\n} from '@trpc/server/unstable-core-do-not-import';\nimport { getFetch } from '../../getFetch';\nimport type {\n  FetchEsque,\n  RequestInitEsque,\n  ResponseEsque,\n} from '../../internals/types';\nimport type { TransformerOptions } from '../../unstable-internals';\nimport { getTransformer } from '../../unstable-internals';\nimport type { HTTPHeaders } from '../types';\n\n/**\n * @internal\n */\nexport type HTTPLinkBaseOptions<\n  TRoot extends Pick<AnyClientTypes, 'transformer'>,\n> = {\n  url: string | URL;\n  /**\n   * Add ponyfill for fetch\n   */\n  fetch?: FetchEsque;\n  /**\n   * Send all requests `as POST`s requests regardless of the procedure type\n   * The HTTP handler must separately allow overriding the method. See:\n   * @see https://trpc.io/docs/rpc\n   */\n  methodOverride?: 'POST';\n} & TransformerOptions<TRoot>;\n\nexport interface ResolvedHTTPLinkOptions {\n  url: string;\n  fetch?: FetchEsque;\n  transformer: CombinedDataTransformer;\n  methodOverride?: 'POST';\n}\n\nexport function resolveHTTPLinkOptions(\n  opts: HTTPLinkBaseOptions<AnyClientTypes>,\n): ResolvedHTTPLinkOptions {\n  return {\n    url: opts.url.toString(),\n    fetch: opts.fetch,\n    transformer: getTransformer(opts.transformer),\n    methodOverride: opts.methodOverride,\n  };\n}\n\n// https://github.com/trpc/trpc/pull/669\nfunction arrayToDict(array: unknown[]) {\n  const dict: Record<number, unknown> = {};\n  for (let index = 0; index < array.length; index++) {\n    const element = array[index];\n    dict[index] = element;\n  }\n  return dict;\n}\n\nconst METHOD = {\n  query: 'GET',\n  mutation: 'POST',\n  subscription: 'PATCH',\n} as const;\n\nexport interface HTTPResult {\n  json: TRPCResponse;\n  meta: {\n    response: ResponseEsque;\n    responseJSON?: unknown;\n  };\n}\n\ntype GetInputOptions = {\n  transformer: CombinedDataTransformer;\n} & ({ input: unknown } | { inputs: unknown[] });\n\nexport function getInput(opts: GetInputOptions) {\n  return 'input' in opts\n    ? opts.transformer.input.serialize(opts.input)\n    : arrayToDict(\n        opts.inputs.map((_input) => opts.transformer.input.serialize(_input)),\n      );\n}\n\nexport type HTTPBaseRequestOptions = GetInputOptions &\n  ResolvedHTTPLinkOptions & {\n    type: ProcedureType;\n    path: string;\n    signal: Maybe<AbortSignal>;\n  };\n\ntype GetUrl = (opts: HTTPBaseRequestOptions) => string;\ntype GetBody = (opts: HTTPBaseRequestOptions) => RequestInitEsque['body'];\n\nexport type ContentOptions = {\n  trpcAcceptHeader?: TRPCAcceptHeader;\n  contentTypeHeader?: string;\n  getUrl: GetUrl;\n  getBody: GetBody;\n};\n\nexport const getUrl: GetUrl = (opts) => {\n  const parts = opts.url.split('?') as [string, string?];\n  const base = parts[0].replace(/\\/$/, ''); // Remove any trailing slashes\n\n  let url = base + '/' + opts.path;\n  const queryParts: string[] = [];\n\n  if (parts[1]) {\n    queryParts.push(parts[1]);\n  }\n  if ('inputs' in opts) {\n    queryParts.push('batch=1');\n  }\n  if (opts.type === 'query' || opts.type === 'subscription') {\n    const input = getInput(opts);\n    if (input !== undefined && opts.methodOverride !== 'POST') {\n      queryParts.push(`input=${encodeURIComponent(JSON.stringify(input))}`);\n    }\n  }\n  if (queryParts.length) {\n    url += '?' + queryParts.join('&');\n  }\n  return url;\n};\n\nexport const getBody: GetBody = (opts) => {\n  if (opts.type === 'query' && opts.methodOverride !== 'POST') {\n    return undefined;\n  }\n  const input = getInput(opts);\n  return input !== undefined ? JSON.stringify(input) : undefined;\n};\n\nexport type Requester = (\n  opts: HTTPBaseRequestOptions & {\n    headers: () => HTTPHeaders | Promise<HTTPHeaders>;\n  },\n) => Promise<HTTPResult>;\n\nexport const jsonHttpRequester: Requester = (opts) => {\n  return httpRequest({\n    ...opts,\n    contentTypeHeader: 'application/json',\n    getUrl,\n    getBody,\n  });\n};\n\n/**\n * Polyfill for DOMException with AbortError name\n */\nclass AbortError extends Error {\n  constructor() {\n    const name = 'AbortError';\n    super(name);\n    this.name = name;\n    this.message = name;\n  }\n}\n\nexport type HTTPRequestOptions = ContentOptions &\n  HTTPBaseRequestOptions & {\n    headers: () => HTTPHeaders | Promise<HTTPHeaders>;\n  };\n\n/**\n * Polyfill for `signal.throwIfAborted()`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/throwIfAborted\n */\nconst throwIfAborted = (signal: Maybe<AbortSignal>) => {\n  if (!signal?.aborted) {\n    return;\n  }\n  // If available, use the native implementation\n  signal.throwIfAborted?.();\n\n  // If we have `DOMException`, use it\n  if (typeof DOMException !== 'undefined') {\n    throw new DOMException('AbortError', 'AbortError');\n  }\n\n  // Otherwise, use our own implementation\n  throw new AbortError();\n};\n\nexport async function fetchHTTPResponse(opts: HTTPRequestOptions) {\n  throwIfAborted(opts.signal);\n\n  const url = opts.getUrl(opts);\n  const body = opts.getBody(opts);\n  const method = opts.methodOverride ?? METHOD[opts.type];\n  const resolvedHeaders = await (async () => {\n    const heads = await opts.headers();\n    if (Symbol.iterator in heads) {\n      return Object.fromEntries(heads);\n    }\n    return heads;\n  })();\n  const headers = {\n    ...(opts.contentTypeHeader && method !== 'GET'\n      ? { 'content-type': opts.contentTypeHeader }\n      : {}),\n    ...(opts.trpcAcceptHeader\n      ? { 'trpc-accept': opts.trpcAcceptHeader }\n      : undefined),\n    ...resolvedHeaders,\n  };\n\n  return getFetch(opts.fetch)(url, {\n    method,\n    signal: opts.signal,\n    body,\n    headers,\n  });\n}\n\nexport async function httpRequest(\n  opts: HTTPRequestOptions,\n): Promise<HTTPResult> {\n  const meta = {} as HTTPResult['meta'];\n\n  const res = await fetchHTTPResponse(opts);\n  meta.response = res;\n\n  const json = await res.json();\n\n  meta.responseJSON = json;\n\n  return {\n    json: json as TRPCResponse,\n    meta,\n  };\n}\n"],"names":["fn: unknown","customFetchImpl?: FetchEsque | NativeFetchEsque","opts: HTTPLinkBaseOptions<AnyClientTypes>","array: unknown[]","dict: Record<number, unknown>","opts: GetInputOptions","getUrl: GetUrl","queryParts: string[]","getBody: GetBody","jsonHttpRequester: Requester","signal: Maybe<AbortSignal>","opts: HTTPRequestOptions"],"mappings":"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","debugId":null}},
    {"offset": {"line": 3091, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@trpc/server/dist/getErrorShape-BH60iMC2.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/createProxy.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/http/getHTTPStatusCode.ts","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/typeof.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/toPrimitive.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/toPropertyKey.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/defineProperty.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/objectSpread2.js","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/error/getErrorShape.ts"],"sourcesContent":["interface ProxyCallbackOptions {\n  path: readonly string[];\n  args: readonly unknown[];\n}\ntype ProxyCallback = (opts: ProxyCallbackOptions) => unknown;\n\nconst noop = () => {\n  // noop\n};\n\nconst freezeIfAvailable = (obj: object) => {\n  if (Object.freeze) {\n    Object.freeze(obj);\n  }\n};\n\nfunction createInnerProxy(\n  callback: ProxyCallback,\n  path: readonly string[],\n  memo: Record<string, unknown>,\n) {\n  const cacheKey = path.join('.');\n\n  memo[cacheKey] ??= new Proxy(noop, {\n    get(_obj, key) {\n      if (typeof key !== 'string' || key === 'then') {\n        // special case for if the proxy is accidentally treated\n        // like a PromiseLike (like in `Promise.resolve(proxy)`)\n        return undefined;\n      }\n      return createInnerProxy(callback, [...path, key], memo);\n    },\n    apply(_1, _2, args) {\n      const lastOfPath = path[path.length - 1];\n\n      let opts = { args, path };\n      // special handling for e.g. `trpc.hello.call(this, 'there')` and `trpc.hello.apply(this, ['there'])\n      if (lastOfPath === 'call') {\n        opts = {\n          args: args.length >= 2 ? [args[1]] : [],\n          path: path.slice(0, -1),\n        };\n      } else if (lastOfPath === 'apply') {\n        opts = {\n          args: args.length >= 2 ? args[1] : [],\n          path: path.slice(0, -1),\n        };\n      }\n      freezeIfAvailable(opts.args);\n      freezeIfAvailable(opts.path);\n      return callback(opts);\n    },\n  });\n\n  return memo[cacheKey];\n}\n\n/**\n * Creates a proxy that calls the callback with the path and arguments\n *\n * @internal\n */\nexport const createRecursiveProxy = <TFaux = unknown>(\n  callback: ProxyCallback,\n): TFaux => createInnerProxy(callback, [], Object.create(null)) as TFaux;\n\n/**\n * Used in place of `new Proxy` where each handler will map 1 level deep to another value.\n *\n * @internal\n */\nexport const createFlatProxy = <TFaux>(\n  callback: (path: keyof TFaux) => any,\n): TFaux => {\n  return new Proxy(noop, {\n    get(_obj, name) {\n      if (name === 'then') {\n        // special case for if the proxy is accidentally treated\n        // like a PromiseLike (like in `Promise.resolve(proxy)`)\n        return undefined;\n      }\n      return callback(name as any);\n    },\n  }) as TFaux;\n};\n","import type { TRPCError } from '../error/TRPCError';\nimport type { TRPC_ERROR_CODES_BY_KEY, TRPCResponse } from '../rpc';\nimport { TRPC_ERROR_CODES_BY_NUMBER } from '../rpc';\nimport type { InvertKeyValue, ValueOf } from '../types';\nimport { isObject } from '../utils';\n\nexport const JSONRPC2_TO_HTTP_CODE: Record<\n  keyof typeof TRPC_ERROR_CODES_BY_KEY,\n  number\n> = {\n  PARSE_ERROR: 400,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  PAYMENT_REQUIRED: 402,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  METHOD_NOT_SUPPORTED: 405,\n  TIMEOUT: 408,\n  CONFLICT: 409,\n  PRECONDITION_FAILED: 412,\n  PAYLOAD_TOO_LARGE: 413,\n  UNSUPPORTED_MEDIA_TYPE: 415,\n  UNPROCESSABLE_CONTENT: 422,\n  PRECONDITION_REQUIRED: 428,\n  TOO_MANY_REQUESTS: 429,\n  CLIENT_CLOSED_REQUEST: 499,\n  INTERNAL_SERVER_ERROR: 500,\n  NOT_IMPLEMENTED: 501,\n  BAD_GATEWAY: 502,\n  SERVICE_UNAVAILABLE: 503,\n  GATEWAY_TIMEOUT: 504,\n};\n\nexport const HTTP_CODE_TO_JSONRPC2: InvertKeyValue<\n  typeof JSONRPC2_TO_HTTP_CODE\n> = {\n  400: 'BAD_REQUEST',\n  401: 'UNAUTHORIZED',\n  402: 'PAYMENT_REQUIRED',\n  403: 'FORBIDDEN',\n  404: 'NOT_FOUND',\n  405: 'METHOD_NOT_SUPPORTED',\n  408: 'TIMEOUT',\n  409: 'CONFLICT',\n  412: 'PRECONDITION_FAILED',\n  413: 'PAYLOAD_TOO_LARGE',\n  415: 'UNSUPPORTED_MEDIA_TYPE',\n  422: 'UNPROCESSABLE_CONTENT',\n  428: 'PRECONDITION_REQUIRED',\n  429: 'TOO_MANY_REQUESTS',\n  499: 'CLIENT_CLOSED_REQUEST',\n  500: 'INTERNAL_SERVER_ERROR',\n  501: 'NOT_IMPLEMENTED',\n  502: 'BAD_GATEWAY',\n  503: 'SERVICE_UNAVAILABLE',\n  504: 'GATEWAY_TIMEOUT',\n} as const;\n\nexport function getStatusCodeFromKey(\n  code: keyof typeof TRPC_ERROR_CODES_BY_KEY,\n) {\n  return JSONRPC2_TO_HTTP_CODE[code] ?? 500;\n}\n\nexport function getStatusKeyFromCode(\n  code: keyof typeof HTTP_CODE_TO_JSONRPC2,\n): ValueOf<typeof HTTP_CODE_TO_JSONRPC2> {\n  return HTTP_CODE_TO_JSONRPC2[code] ?? 'INTERNAL_SERVER_ERROR';\n}\n\nexport function getHTTPStatusCode(json: TRPCResponse | TRPCResponse[]) {\n  const arr = Array.isArray(json) ? json : [json];\n  const httpStatuses = new Set<number>(\n    arr.map((res) => {\n      if ('error' in res && isObject(res.error.data)) {\n        if (typeof res.error.data?.['httpStatus'] === 'number') {\n          return res.error.data['httpStatus'];\n        }\n        const code = TRPC_ERROR_CODES_BY_NUMBER[res.error.code];\n        return getStatusCodeFromKey(code);\n      }\n      return 200;\n    }),\n  );\n\n  if (httpStatuses.size !== 1) {\n    return 207;\n  }\n\n  const httpStatus = httpStatuses.values().next().value;\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return httpStatus!;\n}\n\nexport function getHTTPStatusCodeFromError(error: TRPCError) {\n  return getStatusCodeFromKey(error.code);\n}\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var defineProperty = require(\"./defineProperty.js\");\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { getHTTPStatusCodeFromError } from '../http/getHTTPStatusCode';\nimport type { ProcedureType } from '../procedure';\nimport type { AnyRootTypes, RootConfig } from '../rootConfig';\nimport { TRPC_ERROR_CODES_BY_KEY } from '../rpc';\nimport type { DefaultErrorShape } from './formatter';\nimport type { TRPCError } from './TRPCError';\n\n/**\n * @internal\n */\nexport function getErrorShape<TRoot extends AnyRootTypes>(opts: {\n  config: RootConfig<TRoot>;\n  error: TRPCError;\n  type: ProcedureType | 'unknown';\n  path: string | undefined;\n  input: unknown;\n  ctx: TRoot['ctx'] | undefined;\n}): TRoot['errorShape'] {\n  const { path, error, config } = opts;\n  const { code } = opts.error;\n  const shape: DefaultErrorShape = {\n    message: error.message,\n    code: TRPC_ERROR_CODES_BY_KEY[code],\n    data: {\n      code,\n      httpStatus: getHTTPStatusCodeFromError(error),\n    },\n  };\n  if (config.isDev && typeof opts.error.stack === 'string') {\n    shape.data.stack = opts.error.stack;\n  }\n  if (typeof path === 'string') {\n    shape.data.path = path;\n  }\n  return config.errorFormatter({ ...opts, shape });\n}\n"],"names":["obj: object","callback: ProxyCallback","path: readonly string[]","memo: Record<string, unknown>","callback: (path: keyof TFaux) => any","JSONRPC2_TO_HTTP_CODE: Record<\n  keyof typeof TRPC_ERROR_CODES_BY_KEY,\n  number\n>","HTTP_CODE_TO_JSONRPC2: InvertKeyValue<\n  typeof JSONRPC2_TO_HTTP_CODE\n>","code: keyof typeof TRPC_ERROR_CODES_BY_KEY","code: keyof typeof HTTP_CODE_TO_JSONRPC2","json: TRPCResponse | TRPCResponse[]","error: TRPCError","_typeof","o","_typeof","toPrimitive","toPropertyKey","r","opts: {\n  config: RootConfig<TRoot>;\n  error: TRPCError;\n  type: ProcedureType | 'unknown';\n  path: string | undefined;\n  input: unknown;\n  ctx: TRoot['ctx'] | undefined;\n}","shape: DefaultErrorShape"],"mappings":"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","debugId":null}},
    {"offset": {"line": 3398, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@trpc/server/dist/tracked-Blz8XOf1.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/error/formatter.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/error/TRPCError.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/transformer.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/router.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/stream/tracked.ts"],"sourcesContent":["import type { ProcedureType } from '../procedure';\nimport type {\n  TRPC_ERROR_CODE_KEY,\n  TRPC_ERROR_CODE_NUMBER,\n  TRPCErrorShape,\n} from '../rpc';\nimport type { TRPCError } from './TRPCError';\n\n/**\n * @internal\n */\nexport type ErrorFormatter<TContext, TShape extends TRPCErrorShape> = (opts: {\n  error: TRPCError;\n  type: ProcedureType | 'unknown';\n  path: string | undefined;\n  input: unknown;\n  ctx: TContext | undefined;\n  shape: DefaultErrorShape;\n}) => TShape;\n\n/**\n * @internal\n */\nexport type DefaultErrorData = {\n  code: TRPC_ERROR_CODE_KEY;\n  httpStatus: number;\n  /**\n   * Path to the procedure that threw the error\n   */\n  path?: string;\n  /**\n   * Stack trace of the error (only in development)\n   */\n  stack?: string;\n};\n\n/**\n * @internal\n */\nexport interface DefaultErrorShape extends TRPCErrorShape<DefaultErrorData> {\n  message: string;\n  code: TRPC_ERROR_CODE_NUMBER;\n}\n\nexport const defaultFormatter: ErrorFormatter<any, any> = ({ shape }) => {\n  return shape;\n};\n","import type { TRPC_ERROR_CODE_KEY } from '../rpc/codes';\nimport { isObject } from '../utils';\n\nclass UnknownCauseError extends Error {\n  [key: string]: unknown;\n}\nexport function getCauseFromUnknown(cause: unknown): Error | undefined {\n  if (cause instanceof Error) {\n    return cause;\n  }\n\n  const type = typeof cause;\n  if (type === 'undefined' || type === 'function' || cause === null) {\n    return undefined;\n  }\n\n  // Primitive types just get wrapped in an error\n  if (type !== 'object') {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    return new Error(String(cause));\n  }\n\n  // If it's an object, we'll create a synthetic error\n  if (isObject(cause)) {\n    return Object.assign(new UnknownCauseError(), cause);\n  }\n\n  return undefined;\n}\n\nexport function getTRPCErrorFromUnknown(cause: unknown): TRPCError {\n  if (cause instanceof TRPCError) {\n    return cause;\n  }\n  if (cause instanceof Error && cause.name === 'TRPCError') {\n    // https://github.com/trpc/trpc/pull/4848\n    return cause as TRPCError;\n  }\n\n  const trpcError = new TRPCError({\n    code: 'INTERNAL_SERVER_ERROR',\n    cause,\n  });\n\n  // Inherit stack from error\n  if (cause instanceof Error && cause.stack) {\n    trpcError.stack = cause.stack;\n  }\n\n  return trpcError;\n}\n\nexport class TRPCError extends Error {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore override doesn't work in all environments due to \"This member cannot have an 'override' modifier because it is not declared in the base class 'Error'\"\n  public override readonly cause?: Error;\n  public readonly code;\n\n  constructor(opts: {\n    message?: string;\n    code: TRPC_ERROR_CODE_KEY;\n    cause?: unknown;\n  }) {\n    const cause = getCauseFromUnknown(opts.cause);\n    const message = opts.message ?? cause?.message ?? opts.code;\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore https://github.com/tc39/proposal-error-cause\n    super(message, { cause });\n\n    this.code = opts.code;\n    this.name = 'TRPCError';\n    this.cause ??= cause;\n  }\n}\n","import type { AnyRootTypes, RootConfig } from './rootConfig';\nimport type { AnyRouter, inferRouterError } from './router';\nimport type {\n  TRPCResponse,\n  TRPCResponseMessage,\n  TRPCResultMessage,\n} from './rpc';\nimport { isObject } from './utils';\n\n/**\n * @public\n */\nexport interface DataTransformer {\n  serialize(object: any): any;\n  deserialize(object: any): any;\n}\n\ninterface InputDataTransformer extends DataTransformer {\n  /**\n   * This function runs **on the client** before sending the data to the server.\n   */\n  serialize(object: any): any;\n  /**\n   * This function runs **on the server** to transform the data before it is passed to the resolver\n   */\n  deserialize(object: any): any;\n}\n\ninterface OutputDataTransformer extends DataTransformer {\n  /**\n   * This function runs **on the server** before sending the data to the client.\n   */\n  serialize(object: any): any;\n  /**\n   * This function runs **only on the client** to transform the data sent from the server.\n   */\n  deserialize(object: any): any;\n}\n\n/**\n * @public\n */\nexport interface CombinedDataTransformer {\n  /**\n   * Specify how the data sent from the client to the server should be transformed.\n   */\n  input: InputDataTransformer;\n  /**\n   * Specify how the data sent from the server to the client should be transformed.\n   */\n  output: OutputDataTransformer;\n}\n\n/**\n * @public\n */\nexport type CombinedDataTransformerClient = {\n  input: Pick<CombinedDataTransformer['input'], 'serialize'>;\n  output: Pick<CombinedDataTransformer['output'], 'deserialize'>;\n};\n\n/**\n * @public\n */\nexport type DataTransformerOptions = CombinedDataTransformer | DataTransformer;\n\n/**\n * @internal\n */\nexport function getDataTransformer(\n  transformer: DataTransformerOptions,\n): CombinedDataTransformer {\n  if ('input' in transformer) {\n    return transformer;\n  }\n  return { input: transformer, output: transformer };\n}\n\n/**\n * @internal\n */\nexport const defaultTransformer: CombinedDataTransformer = {\n  input: { serialize: (obj) => obj, deserialize: (obj) => obj },\n  output: { serialize: (obj) => obj, deserialize: (obj) => obj },\n};\n\nfunction transformTRPCResponseItem<\n  TResponseItem extends TRPCResponse | TRPCResponseMessage,\n>(config: RootConfig<AnyRootTypes>, item: TResponseItem): TResponseItem {\n  if ('error' in item) {\n    return {\n      ...item,\n      error: config.transformer.output.serialize(item.error),\n    };\n  }\n\n  if ('data' in item.result) {\n    return {\n      ...item,\n      result: {\n        ...item.result,\n        data: config.transformer.output.serialize(item.result.data),\n      },\n    };\n  }\n\n  return item;\n}\n\n/**\n * Takes a unserialized `TRPCResponse` and serializes it with the router's transformers\n **/\nexport function transformTRPCResponse<\n  TResponse extends\n    | TRPCResponse\n    | TRPCResponse[]\n    | TRPCResponseMessage\n    | TRPCResponseMessage[],\n>(config: RootConfig<AnyRootTypes>, itemOrItems: TResponse) {\n  return Array.isArray(itemOrItems)\n    ? itemOrItems.map((item) => transformTRPCResponseItem(config, item))\n    : transformTRPCResponseItem(config, itemOrItems);\n}\n\n// FIXME:\n// - the generics here are probably unnecessary\n// - the RPC-spec could probably be simplified to combine HTTP + WS\n/** @internal */\nfunction transformResultInner<TRouter extends AnyRouter, TOutput>(\n  response:\n    | TRPCResponse<TOutput, inferRouterError<TRouter>>\n    | TRPCResponseMessage<TOutput, inferRouterError<TRouter>>,\n  transformer: DataTransformer,\n) {\n  if ('error' in response) {\n    const error = transformer.deserialize(\n      response.error,\n    ) as inferRouterError<TRouter>;\n    return {\n      ok: false,\n      error: {\n        ...response,\n        error,\n      },\n    } as const;\n  }\n\n  const result = {\n    ...response.result,\n    ...((!response.result.type || response.result.type === 'data') && {\n      type: 'data',\n      data: transformer.deserialize(response.result.data),\n    }),\n  } as TRPCResultMessage<TOutput>['result'];\n  return { ok: true, result } as const;\n}\n\nclass TransformResultError extends Error {\n  constructor() {\n    super('Unable to transform response from server');\n  }\n}\n\n/**\n * Transforms and validates that the result is a valid TRPCResponse\n * @internal\n */\nexport function transformResult<TRouter extends AnyRouter, TOutput>(\n  response:\n    | TRPCResponse<TOutput, inferRouterError<TRouter>>\n    | TRPCResponseMessage<TOutput, inferRouterError<TRouter>>,\n  transformer: DataTransformer,\n): ReturnType<typeof transformResultInner> {\n  let result: ReturnType<typeof transformResultInner>;\n  try {\n    // Use the data transformers on the JSON-response\n    result = transformResultInner(response, transformer);\n  } catch {\n    throw new TransformResultError();\n  }\n\n  // check that output of the transformers is a valid TRPCResponse\n  if (\n    !result.ok &&\n    (!isObject(result.error.error) ||\n      typeof result.error.error['code'] !== 'number')\n  ) {\n    throw new TransformResultError();\n  }\n  if (result.ok && !isObject(result.result)) {\n    throw new TransformResultError();\n  }\n  return result;\n}\n","import type { Observable } from '../observable';\nimport { createRecursiveProxy } from './createProxy';\nimport { defaultFormatter } from './error/formatter';\nimport { getTRPCErrorFromUnknown, TRPCError } from './error/TRPCError';\nimport type {\n  AnyProcedure,\n  ErrorHandlerOptions,\n  inferProcedureInput,\n  inferProcedureOutput,\n  LegacyObservableSubscriptionProcedure,\n} from './procedure';\nimport type { ProcedureCallOptions } from './procedureBuilder';\nimport type { AnyRootTypes, RootConfig } from './rootConfig';\nimport { defaultTransformer } from './transformer';\nimport type { MaybePromise, ValueOf } from './types';\nimport {\n  isFunction,\n  isObject,\n  mergeWithoutOverrides,\n  omitPrototype,\n} from './utils';\n\nexport interface RouterRecord {\n  [key: string]: AnyProcedure | RouterRecord;\n}\n\ntype DecorateProcedure<TProcedure extends AnyProcedure> = (\n  input: inferProcedureInput<TProcedure>,\n) => Promise<\n  TProcedure['_def']['type'] extends 'subscription'\n    ? TProcedure extends LegacyObservableSubscriptionProcedure<any>\n      ? Observable<inferProcedureOutput<TProcedure>, TRPCError>\n      : inferProcedureOutput<TProcedure>\n    : inferProcedureOutput<TProcedure>\n>;\n\n/**\n * @internal\n */\nexport type DecorateRouterRecord<TRecord extends RouterRecord> = {\n  [TKey in keyof TRecord]: TRecord[TKey] extends infer $Value\n    ? $Value extends AnyProcedure\n      ? DecorateProcedure<$Value>\n      : $Value extends RouterRecord\n        ? DecorateRouterRecord<$Value>\n        : never\n    : never;\n};\n\n/**\n * @internal\n */\n\nexport type RouterCallerErrorHandler<TContext> = (\n  opts: ErrorHandlerOptions<TContext>,\n) => void;\n\n/**\n * @internal\n */\nexport type RouterCaller<\n  TRoot extends AnyRootTypes,\n  TRecord extends RouterRecord,\n> = (\n  /**\n   * @note\n   * If passing a function, we recommend it's a cached function\n   * e.g. wrapped in `React.cache` to avoid unnecessary computations\n   */\n  ctx: TRoot['ctx'] | (() => MaybePromise<TRoot['ctx']>),\n  options?: {\n    onError?: RouterCallerErrorHandler<TRoot['ctx']>;\n    signal?: AbortSignal;\n  },\n) => DecorateRouterRecord<TRecord>;\n\n/**\n * @internal\n */\nconst lazyMarker = 'lazyMarker' as 'lazyMarker' & {\n  __brand: 'lazyMarker';\n};\nexport type Lazy<TAny> = (() => Promise<TAny>) & { [lazyMarker]: true };\n\ntype LazyLoader<TAny> = {\n  load: () => Promise<void>;\n  ref: Lazy<TAny>;\n};\n\nfunction once<T>(fn: () => T): () => T {\n  const uncalled = Symbol();\n  let result: T | typeof uncalled = uncalled;\n  return (): T => {\n    if (result === uncalled) {\n      result = fn();\n    }\n    return result;\n  };\n}\n\n/**\n * Lazy load a router\n * @see https://trpc.io/docs/server/merging-routers#lazy-load\n */\nexport function lazy<TRouter extends AnyRouter>(\n  importRouter: () => Promise<\n    | TRouter\n    | {\n        [key: string]: TRouter;\n      }\n  >,\n): Lazy<NoInfer<TRouter>> {\n  async function resolve(): Promise<TRouter> {\n    const mod = await importRouter();\n\n    // if the module is a router, return it\n    if (isRouter(mod)) {\n      return mod;\n    }\n\n    const routers = Object.values(mod);\n\n    if (routers.length !== 1 || !isRouter(routers[0])) {\n      throw new Error(\n        \"Invalid router module - either define exactly 1 export or return the router directly.\\nExample: `lazy(() => import('./slow.js').then((m) => m.slowRouter))`\",\n      );\n    }\n\n    return routers[0];\n  }\n\n  (resolve as Lazy<NoInfer<TRouter>>)[lazyMarker] = true as const;\n\n  return resolve as Lazy<NoInfer<TRouter>>;\n}\n\nfunction isLazy<TAny>(input: unknown): input is Lazy<TAny> {\n  return typeof input === 'function' && lazyMarker in input;\n}\n\n/**\n * @internal\n */\nexport interface RouterDef<\n  TRoot extends AnyRootTypes,\n  TRecord extends RouterRecord,\n> {\n  _config: RootConfig<TRoot>;\n  router: true;\n  procedure?: never;\n  procedures: TRecord;\n  record: TRecord;\n  lazy: Record<string, LazyLoader<AnyRouter>>;\n}\n\nexport interface Router<\n  TRoot extends AnyRootTypes,\n  TRecord extends RouterRecord,\n> {\n  _def: RouterDef<TRoot, TRecord>;\n  /**\n   * @see https://trpc.io/docs/v11/server/server-side-calls\n   */\n  createCaller: RouterCaller<TRoot, TRecord>;\n}\n\nexport type BuiltRouter<\n  TRoot extends AnyRootTypes,\n  TRecord extends RouterRecord,\n> = Router<TRoot, TRecord> & TRecord;\n\nexport interface RouterBuilder<TRoot extends AnyRootTypes> {\n  <TIn extends CreateRouterOptions>(\n    _: TIn,\n  ): BuiltRouter<TRoot, DecorateCreateRouterOptions<TIn>>;\n}\n\nexport type AnyRouter = Router<any, any>;\n\nexport type inferRouterRootTypes<TRouter extends AnyRouter> =\n  TRouter['_def']['_config']['$types'];\n\nexport type inferRouterContext<TRouter extends AnyRouter> =\n  inferRouterRootTypes<TRouter>['ctx'];\nexport type inferRouterError<TRouter extends AnyRouter> =\n  inferRouterRootTypes<TRouter>['errorShape'];\nexport type inferRouterMeta<TRouter extends AnyRouter> =\n  inferRouterRootTypes<TRouter>['meta'];\n\nfunction isRouter(value: unknown): value is AnyRouter {\n  return (\n    isObject(value) && isObject(value['_def']) && 'router' in value['_def']\n  );\n}\n\nconst emptyRouter = {\n  _ctx: null as any,\n  _errorShape: null as any,\n  _meta: null as any,\n  queries: {},\n  mutations: {},\n  subscriptions: {},\n  errorFormatter: defaultFormatter,\n  transformer: defaultTransformer,\n};\n\n/**\n * Reserved words that can't be used as router or procedure names\n */\nconst reservedWords = [\n  /**\n   * Then is a reserved word because otherwise we can't return a promise that returns a Proxy\n   * since JS will think that `.then` is something that exists\n   */\n  'then',\n  /**\n   * `fn.call()` and `fn.apply()` are reserved words because otherwise we can't call a function using `.call` or `.apply`\n   */\n  'call',\n  'apply',\n];\n\n/** @internal */\nexport type CreateRouterOptions = {\n  [key: string]:\n    | AnyProcedure\n    | AnyRouter\n    | CreateRouterOptions\n    | Lazy<AnyRouter>;\n};\n\n/** @internal */\nexport type DecorateCreateRouterOptions<\n  TRouterOptions extends CreateRouterOptions,\n> = {\n  [K in keyof TRouterOptions]: TRouterOptions[K] extends infer $Value\n    ? $Value extends AnyProcedure\n      ? $Value\n      : $Value extends Router<any, infer TRecord>\n        ? TRecord\n        : $Value extends Lazy<Router<any, infer TRecord>>\n          ? TRecord\n          : $Value extends CreateRouterOptions\n            ? DecorateCreateRouterOptions<$Value>\n            : never\n    : never;\n};\n\n/**\n * @internal\n */\nexport function createRouterFactory<TRoot extends AnyRootTypes>(\n  config: RootConfig<TRoot>,\n) {\n  function createRouterInner<TInput extends CreateRouterOptions>(\n    input: TInput,\n  ): BuiltRouter<TRoot, DecorateCreateRouterOptions<TInput>> {\n    const reservedWordsUsed = new Set(\n      Object.keys(input).filter((v) => reservedWords.includes(v)),\n    );\n    if (reservedWordsUsed.size > 0) {\n      throw new Error(\n        'Reserved words used in `router({})` call: ' +\n          Array.from(reservedWordsUsed).join(', '),\n      );\n    }\n\n    const procedures: Record<string, AnyProcedure> = omitPrototype({});\n    const lazy: Record<string, LazyLoader<AnyRouter>> = omitPrototype({});\n\n    function createLazyLoader(opts: {\n      ref: Lazy<AnyRouter>;\n      path: readonly string[];\n      key: string;\n      aggregate: RouterRecord;\n    }): LazyLoader<AnyRouter> {\n      return {\n        ref: opts.ref,\n        load: once(async () => {\n          const router = await opts.ref();\n          const lazyPath = [...opts.path, opts.key];\n          const lazyKey = lazyPath.join('.');\n\n          opts.aggregate[opts.key] = step(router._def.record, lazyPath);\n\n          delete lazy[lazyKey];\n\n          // add lazy loaders for nested routers\n          for (const [nestedKey, nestedItem] of Object.entries(\n            router._def.lazy,\n          )) {\n            const nestedRouterKey = [...lazyPath, nestedKey].join('.');\n\n            // console.log('adding lazy', nestedRouterKey);\n            lazy[nestedRouterKey] = createLazyLoader({\n              ref: nestedItem.ref,\n              path: lazyPath,\n              key: nestedKey,\n              aggregate: opts.aggregate[opts.key] as RouterRecord,\n            });\n          }\n        }),\n      };\n    }\n\n    function step(from: CreateRouterOptions, path: readonly string[] = []) {\n      const aggregate: RouterRecord = omitPrototype({});\n      for (const [key, item] of Object.entries(from ?? {})) {\n        if (isLazy(item)) {\n          lazy[[...path, key].join('.')] = createLazyLoader({\n            path,\n            ref: item,\n            key,\n            aggregate,\n          });\n          continue;\n        }\n        if (isRouter(item)) {\n          aggregate[key] = step(item._def.record, [...path, key]);\n          continue;\n        }\n        if (!isProcedure(item)) {\n          // RouterRecord\n          aggregate[key] = step(item, [...path, key]);\n          continue;\n        }\n\n        const newPath = [...path, key].join('.');\n\n        if (procedures[newPath]) {\n          throw new Error(`Duplicate key: ${newPath}`);\n        }\n\n        procedures[newPath] = item;\n        aggregate[key] = item;\n      }\n\n      return aggregate;\n    }\n    const record = step(input);\n\n    const _def: AnyRouter['_def'] = {\n      _config: config,\n      router: true,\n      procedures,\n      lazy,\n      ...emptyRouter,\n      record,\n    };\n\n    const router: BuiltRouter<TRoot, {}> = {\n      ...(record as {}),\n      _def,\n      createCaller: createCallerFactory<TRoot>()({\n        _def,\n      }),\n    };\n    return router as BuiltRouter<TRoot, DecorateCreateRouterOptions<TInput>>;\n  }\n\n  return createRouterInner;\n}\n\nfunction isProcedure(\n  procedureOrRouter: ValueOf<CreateRouterOptions>,\n): procedureOrRouter is AnyProcedure {\n  return typeof procedureOrRouter === 'function';\n}\n\n/**\n * @internal\n */\nexport async function getProcedureAtPath(\n  router: Pick<Router<any, any>, '_def'>,\n  path: string,\n): Promise<AnyProcedure | null> {\n  const { _def } = router;\n  let procedure = _def.procedures[path];\n\n  while (!procedure) {\n    const key = Object.keys(_def.lazy).find((key) => path.startsWith(key));\n    // console.log(`found lazy: ${key ?? 'NOPE'} (fullPath: ${fullPath})`);\n\n    if (!key) {\n      return null;\n    }\n    // console.log('loading', key, '.......');\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const lazyRouter = _def.lazy[key]!;\n    await lazyRouter.load();\n\n    procedure = _def.procedures[path];\n  }\n\n  return procedure;\n}\n\n/**\n * @internal\n */\nexport async function callProcedure(\n  opts: ProcedureCallOptions<unknown> & {\n    router: AnyRouter;\n    allowMethodOverride?: boolean;\n  },\n) {\n  const { type, path } = opts;\n  const proc = await getProcedureAtPath(opts.router, path);\n  if (\n    !proc ||\n    !isProcedure(proc) ||\n    (proc._def.type !== type && !opts.allowMethodOverride)\n  ) {\n    throw new TRPCError({\n      code: 'NOT_FOUND',\n      message: `No \"${type}\"-procedure on path \"${path}\"`,\n    });\n  }\n\n  /* istanbul ignore if -- @preserve */\n  if (\n    proc._def.type !== type &&\n    opts.allowMethodOverride &&\n    proc._def.type === 'subscription'\n  ) {\n    throw new TRPCError({\n      code: 'METHOD_NOT_SUPPORTED',\n      message: `Method override is not supported for subscriptions`,\n    });\n  }\n\n  return proc(opts);\n}\n\nexport interface RouterCallerFactory<TRoot extends AnyRootTypes> {\n  <TRecord extends RouterRecord>(\n    router: Pick<Router<TRoot, TRecord>, '_def'>,\n  ): RouterCaller<TRoot, TRecord>;\n}\n\nexport function createCallerFactory<\n  TRoot extends AnyRootTypes,\n>(): RouterCallerFactory<TRoot> {\n  return function createCallerInner<TRecord extends RouterRecord>(\n    router: Pick<Router<TRoot, TRecord>, '_def'>,\n  ): RouterCaller<TRoot, TRecord> {\n    const { _def } = router;\n    type Context = TRoot['ctx'];\n\n    return function createCaller(ctxOrCallback, opts) {\n      return createRecursiveProxy<ReturnType<RouterCaller<any, any>>>(\n        async (innerOpts) => {\n          const { path, args } = innerOpts;\n          const fullPath = path.join('.');\n\n          if (path.length === 1 && path[0] === '_def') {\n            return _def;\n          }\n\n          const procedure = await getProcedureAtPath(router, fullPath);\n\n          let ctx: Context | undefined = undefined;\n          try {\n            if (!procedure) {\n              throw new TRPCError({\n                code: 'NOT_FOUND',\n                message: `No procedure found on path \"${path}\"`,\n              });\n            }\n            ctx = isFunction(ctxOrCallback)\n              ? await Promise.resolve(ctxOrCallback())\n              : ctxOrCallback;\n\n            return await procedure({\n              path: fullPath,\n              getRawInput: async () => args[0],\n              ctx,\n              type: procedure._def.type,\n              signal: opts?.signal,\n            });\n          } catch (cause) {\n            opts?.onError?.({\n              ctx,\n              error: getTRPCErrorFromUnknown(cause),\n              input: args[0],\n              path: fullPath,\n              type: procedure?._def.type ?? 'unknown',\n            });\n            throw cause;\n          }\n        },\n      );\n    };\n  };\n}\n\n/** @internal */\nexport type MergeRouters<\n  TRouters extends AnyRouter[],\n  TRoot extends AnyRootTypes = TRouters[0]['_def']['_config']['$types'],\n  TRecord extends RouterRecord = {},\n> = TRouters extends [\n  infer Head extends AnyRouter,\n  ...infer Tail extends AnyRouter[],\n]\n  ? MergeRouters<Tail, TRoot, Head['_def']['record'] & TRecord>\n  : BuiltRouter<TRoot, TRecord>;\n\nexport function mergeRouters<TRouters extends AnyRouter[]>(\n  ...routerList: [...TRouters]\n): MergeRouters<TRouters> {\n  const record = mergeWithoutOverrides(\n    {},\n    ...routerList.map((r) => r._def.record),\n  );\n  const errorFormatter = routerList.reduce(\n    (currentErrorFormatter, nextRouter) => {\n      if (\n        nextRouter._def._config.errorFormatter &&\n        nextRouter._def._config.errorFormatter !== defaultFormatter\n      ) {\n        if (\n          currentErrorFormatter !== defaultFormatter &&\n          currentErrorFormatter !== nextRouter._def._config.errorFormatter\n        ) {\n          throw new Error('You seem to have several error formatters');\n        }\n        return nextRouter._def._config.errorFormatter;\n      }\n      return currentErrorFormatter;\n    },\n    defaultFormatter,\n  );\n\n  const transformer = routerList.reduce((prev, current) => {\n    if (\n      current._def._config.transformer &&\n      current._def._config.transformer !== defaultTransformer\n    ) {\n      if (\n        prev !== defaultTransformer &&\n        prev !== current._def._config.transformer\n      ) {\n        throw new Error('You seem to have several transformers');\n      }\n      return current._def._config.transformer;\n    }\n    return prev;\n  }, defaultTransformer);\n\n  const router = createRouterFactory({\n    errorFormatter,\n    transformer,\n    isDev: routerList.every((r) => r._def._config.isDev),\n    allowOutsideOfServer: routerList.every(\n      (r) => r._def._config.allowOutsideOfServer,\n    ),\n    isServer: routerList.every((r) => r._def._config.isServer),\n    $types: routerList[0]?._def._config.$types,\n  })(record);\n\n  return router as MergeRouters<TRouters>;\n}\n","const trackedSymbol = Symbol();\n\ntype TrackedId = string & {\n  __brand: 'TrackedId';\n};\nexport type TrackedEnvelope<TData> = [TrackedId, TData, typeof trackedSymbol];\n\nexport interface TrackedData<TData> {\n  /**\n   * The id of the message to keep track of in case the connection gets lost\n   */\n  id: string;\n  /**\n   * The data field of the message\n   */\n  data: TData;\n}\n/**\n * Produce a typed server-sent event message\n * @deprecated use `tracked(id, data)` instead\n */\nexport function sse<TData>(event: { id: string; data: TData }) {\n  return tracked(event.id, event.data);\n}\n\nexport function isTrackedEnvelope<TData>(\n  value: unknown,\n): value is TrackedEnvelope<TData> {\n  return Array.isArray(value) && value[2] === trackedSymbol;\n}\n\n/**\n * Automatically track an event so that it can be resumed from a given id if the connection is lost\n */\nexport function tracked<TData>(\n  id: string,\n  data: TData,\n): TrackedEnvelope<TData> {\n  if (id === '') {\n    // This limitation could be removed by using different SSE event names / channels for tracked event and non-tracked event\n    throw new Error(\n      '`id` must not be an empty string as empty string is the same as not setting the id at all',\n    );\n  }\n  return [id as TrackedId, data, trackedSymbol];\n}\n\nexport type inferTrackedOutput<TData> =\n  TData extends TrackedEnvelope<infer $Data> ? TrackedData<$Data> : TData;\n"],"names":["defaultFormatter: ErrorFormatter<any, any>","cause: unknown","opts: {\n    message?: string;\n    code: TRPC_ERROR_CODE_KEY;\n    cause?: unknown;\n  }","transformer: DataTransformerOptions","defaultTransformer: CombinedDataTransformer","config: RootConfig<AnyRootTypes>","item: TResponseItem","itemOrItems: TResponse","response:\n    | TRPCResponse<TOutput, inferRouterError<TRouter>>\n    | TRPCResponseMessage<TOutput, inferRouterError<TRouter>>","transformer: DataTransformer","result: ReturnType<typeof transformResultInner>","fn: () => T","result: T | typeof uncalled","importRouter: () => Promise<\n    | TRouter\n    | {\n        [key: string]: TRouter;\n      }\n  >","input: unknown","value: unknown","config: RootConfig<TRoot>","input: TInput","procedures: Record<string, AnyProcedure>","lazy: Record<string, LazyLoader<AnyRouter>>","opts: {\n      ref: Lazy<AnyRouter>;\n      path: readonly string[];\n      key: string;\n      aggregate: RouterRecord;\n    }","router","lazy","from: CreateRouterOptions","path: readonly string[]","aggregate: RouterRecord","_def: AnyRouter['_def']","router: BuiltRouter<TRoot, {}>","procedureOrRouter: ValueOf<CreateRouterOptions>","router: Pick<Router<any, any>, '_def'>","path: string","key","opts: ProcedureCallOptions<unknown> & {\n    router: AnyRouter;\n    allowMethodOverride?: boolean;\n  }","router: Pick<Router<TRoot, TRecord>, '_def'>","ctx: Context | undefined","event: { id: string; data: TData }","value: unknown","id: string","data: TData"],"mappings":"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","debugId":null}},
    {"offset": {"line": 3827, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@trpc/client/dist/httpLink-DCFpUmZF.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/links/internals/contentTypes.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/links/httpLink.ts"],"sourcesContent":["export function isOctetType(\n  input: unknown,\n): input is Uint8Array<ArrayBuffer> | Blob {\n  return (\n    input instanceof Uint8Array ||\n    // File extends from Blob but is only available in nodejs from v20\n    input instanceof Blob\n  );\n}\n\nexport function isFormData(input: unknown) {\n  return input instanceof FormData;\n}\n\nexport function isNonJsonSerializable(input: unknown) {\n  return isOctetType(input) || isFormData(input);\n}\n","import { observable } from '@trpc/server/observable';\nimport type {\n  AnyClientTypes,\n  AnyRouter,\n} from '@trpc/server/unstable-core-do-not-import';\nimport { transformResult } from '@trpc/server/unstable-core-do-not-import';\nimport { TRPCClientError } from '../TRPCClientError';\nimport type {\n  HTTPLinkBaseOptions,\n  HTTPResult,\n  Requester,\n} from './internals/httpUtils';\nimport {\n  getUrl,\n  httpRequest,\n  jsonHttpRequester,\n  resolveHTTPLinkOptions,\n} from './internals/httpUtils';\nimport {\n  isFormData,\n  isOctetType,\n  type HTTPHeaders,\n  type Operation,\n  type TRPCLink,\n} from './types';\n\nexport type HTTPLinkOptions<TRoot extends AnyClientTypes> =\n  HTTPLinkBaseOptions<TRoot> & {\n    /**\n     * Headers to be set on outgoing requests or a callback that of said headers\n     * @see http://trpc.io/docs/client/headers\n     */\n    headers?:\n      | HTTPHeaders\n      | ((opts: { op: Operation }) => HTTPHeaders | Promise<HTTPHeaders>);\n  };\n\nconst universalRequester: Requester = (opts) => {\n  if ('input' in opts) {\n    const { input } = opts;\n    if (isFormData(input)) {\n      if (opts.type !== 'mutation' && opts.methodOverride !== 'POST') {\n        throw new Error('FormData is only supported for mutations');\n      }\n\n      return httpRequest({\n        ...opts,\n        // The browser will set this automatically and include the boundary= in it\n        contentTypeHeader: undefined,\n        getUrl,\n        getBody: () => input,\n      });\n    }\n\n    if (isOctetType(input)) {\n      if (opts.type !== 'mutation' && opts.methodOverride !== 'POST') {\n        throw new Error('Octet type input is only supported for mutations');\n      }\n\n      return httpRequest({\n        ...opts,\n        contentTypeHeader: 'application/octet-stream',\n        getUrl,\n        getBody: () => input,\n      });\n    }\n  }\n\n  return jsonHttpRequester(opts);\n};\n\n/**\n * @see https://trpc.io/docs/client/links/httpLink\n */\nexport function httpLink<TRouter extends AnyRouter = AnyRouter>(\n  opts: HTTPLinkOptions<TRouter['_def']['_config']['$types']>,\n): TRPCLink<TRouter> {\n  const resolvedOpts = resolveHTTPLinkOptions(opts);\n  return () => {\n    return (operationOpts) => {\n      const { op } = operationOpts;\n      return observable((observer) => {\n        const { path, input, type } = op;\n        /* istanbul ignore if -- @preserve */\n        if (type === 'subscription') {\n          throw new Error(\n            'Subscriptions are unsupported by `httpLink` - use `httpSubscriptionLink` or `wsLink`',\n          );\n        }\n\n        const request = universalRequester({\n          ...resolvedOpts,\n          type,\n          path,\n          input,\n          signal: op.signal,\n          headers() {\n            if (!opts.headers) {\n              return {};\n            }\n            if (typeof opts.headers === 'function') {\n              return opts.headers({\n                op,\n              });\n            }\n            return opts.headers;\n          },\n        });\n        let meta: HTTPResult['meta'] | undefined = undefined;\n        request\n          .then((res) => {\n            meta = res.meta;\n            const transformed = transformResult(\n              res.json,\n              resolvedOpts.transformer.output,\n            );\n\n            if (!transformed.ok) {\n              observer.error(\n                TRPCClientError.from(transformed.error, {\n                  meta,\n                }),\n              );\n              return;\n            }\n            observer.next({\n              context: res.meta,\n              result: transformed.result,\n            });\n            observer.complete();\n          })\n          .catch((cause) => {\n            observer.error(TRPCClientError.from(cause, { meta }));\n          });\n\n        return () => {\n          // noop\n        };\n      });\n    };\n  };\n}\n"],"names":["input: unknown","universalRequester: Requester","opts: HTTPLinkOptions<TRouter['_def']['_config']['$types']>","meta: HTTPResult['meta'] | undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,SAAgB,YACdA,KAAAA,EACyC;IACzC,OACE,iBAAiB,cAEjB,iBAAiB;AAEpB;AAED,SAAgB,WAAWA,KAAAA,EAAgB;IACzC,OAAO,iBAAiB;AACzB;AAED,SAAgB,sBAAsBA,KAAAA,EAAgB;IACpD,OAAO,YAAY,MAAM,IAAI,WAAW,MAAM;AAC/C;;;;ACqBD,MAAMC,qBAAgC,CAAC,SAAS;IAC9C,IAAI,WAAW,MAAM;QACnB,MAAM,EAAE,KAAA,EAAO,GAAG;QAClB,IAAI,WAAW,MAAM,EAAE;YACrB,IAAI,KAAK,IAAA,KAAS,cAAc,KAAK,cAAA,KAAmB,OACtD,CAAA,MAAM,IAAI,MAAM;YAGlB,WAAO,iLAAA,EAAA,CAAA,GAAA,qBAAA,OAAA,EAAA,CAAA,GAAA,qBAAA,OAAA,EAAA,CAAA,GACF,OAAA,CAAA,GAAA;gBAEH,mBAAA,KAAA;wBACA,4KAAA;gBACA,SAAS,IAAM;eACf;QACH;QAED,IAAI,YAAY,MAAM,EAAE;YACtB,IAAI,KAAK,IAAA,KAAS,cAAc,KAAK,cAAA,KAAmB,OACtD,CAAA,MAAM,IAAI,MAAM;YAGlB,WAAO,iLAAA,EAAA,CAAA,GAAA,qBAAA,OAAA,EAAA,CAAA,GAAA,qBAAA,OAAA,EAAA,CAAA,GACF,OAAA,CAAA,GAAA;gBACH,mBAAmB;wBACnB,4KAAA;gBACA,SAAS,IAAM;eACf;QACH;IACF;IAED,WAAO,uLAAA,EAAkB,KAAK;AAC/B;;;GAKD,SAAgB,SACdC,IAAAA,EACmB;IACnB,MAAM,mBAAe,4LAAA,EAAuB,KAAK;IACjD,OAAO,MAAM;QACX,OAAO,CAAC,kBAAkB;YACxB,MAAM,EAAE,EAAA,EAAI,GAAG;YACf,WAAO,iLAAA,EAAW,CAAC,aAAa;gBAC9B,MAAM,EAAE,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,GAAG;sDAE9B,IAAI,SAAS,eACX,CAAA,MAAM,IAAI,MACR;gBAIJ,MAAM,UAAU,mBAAA,CAAA,GAAA,qBAAA,OAAA,EAAA,CAAA,GAAA,qBAAA,OAAA,EAAA,CAAA,GACX,eAAA,CAAA,GAAA;oBACH;oBACA;oBACA;oBACA,QAAQ,GAAG,MAAA;oBACX,UAAU;wBACR,IAAA,CAAK,KAAK,OAAA,CACR,CAAA,OAAO,CAAE;wBAEX,IAAA,OAAW,KAAK,OAAA,KAAY,WAC1B,CAAA,OAAO,KAAK,OAAA,CAAQ;4BAClB;wBACD,EAAC;wBAEJ,OAAO,KAAK,OAAA;oBACb;mBACD;gBACF,IAAIC,OAAAA,KAAAA;gBACJ,QACG,IAAA,CAAK,CAAC,QAAQ;oBACb,OAAO,IAAI,IAAA;oBACX,MAAM,kBAAc,mLAAA,EAClB,IAAI,IAAA,EACJ,aAAa,WAAA,CAAY,MAAA,CAC1B;oBAED,IAAA,CAAK,YAAY,EAAA,EAAI;wBACnB,SAAS,KAAA,CACP,2LAAA,CAAgB,IAAA,CAAK,YAAY,KAAA,EAAO;4BACtC;wBACD,EAAC,CACH;wBACD;oBACD;oBACD,SAAS,IAAA,CAAK;wBACZ,SAAS,IAAI,IAAA;wBACb,QAAQ,YAAY,MAAA;oBACrB,EAAC;oBACF,SAAS,QAAA,EAAU;gBACpB,EAAC,CACD,KAAA,CAAM,CAAC,UAAU;oBAChB,SAAS,KAAA,CAAM,2LAAA,CAAgB,IAAA,CAAK,OAAO;wBAAE;oBAAM,EAAC,CAAC;gBACtD,EAAC;gBAEJ,OAAO,KAEN,CAFY;YAGd,EAAC;QACH;IACF;AACF","debugId":null}},
    {"offset": {"line": 3936, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@trpc/client/dist/httpBatchLink-BOe5aCcR.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/internals/dataLoader.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/internals/signals.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/links/httpBatchLink.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\ntype BatchItem<TKey, TValue> = {\n  aborted: boolean;\n  key: TKey;\n  resolve: ((value: TValue) => void) | null;\n  reject: ((error: Error) => void) | null;\n  batch: Batch<TKey, TValue> | null;\n};\ntype Batch<TKey, TValue> = {\n  items: BatchItem<TKey, TValue>[];\n};\nexport type BatchLoader<TKey, TValue> = {\n  validate: (keys: TKey[]) => boolean;\n  fetch: (keys: TKey[]) => Promise<TValue[] | Promise<TValue>[]>;\n};\n\n/**\n * A function that should never be called unless we messed something up.\n */\nconst throwFatalError = () => {\n  throw new Error(\n    'Something went wrong. Please submit an issue at https://github.com/trpc/trpc/issues/new',\n  );\n};\n\n/**\n * Dataloader that's very inspired by https://github.com/graphql/dataloader\n * Less configuration, no caching, and allows you to cancel requests\n * When cancelling a single fetch the whole batch will be cancelled only when _all_ items are cancelled\n */\nexport function dataLoader<TKey, TValue>(\n  batchLoader: BatchLoader<TKey, TValue>,\n) {\n  let pendingItems: BatchItem<TKey, TValue>[] | null = null;\n  let dispatchTimer: ReturnType<typeof setTimeout> | null = null;\n\n  const destroyTimerAndPendingItems = () => {\n    clearTimeout(dispatchTimer as any);\n    dispatchTimer = null;\n    pendingItems = null;\n  };\n\n  /**\n   * Iterate through the items and split them into groups based on the `batchLoader`'s validate function\n   */\n  function groupItems(items: BatchItem<TKey, TValue>[]) {\n    const groupedItems: BatchItem<TKey, TValue>[][] = [[]];\n    let index = 0;\n    while (true) {\n      const item = items[index];\n      if (!item) {\n        // we're done\n        break;\n      }\n      const lastGroup = groupedItems[groupedItems.length - 1]!;\n\n      if (item.aborted) {\n        // Item was aborted before it was dispatched\n        item.reject?.(new Error('Aborted'));\n        index++;\n        continue;\n      }\n\n      const isValid = batchLoader.validate(\n        lastGroup.concat(item).map((it) => it.key),\n      );\n\n      if (isValid) {\n        lastGroup.push(item);\n        index++;\n        continue;\n      }\n\n      if (lastGroup.length === 0) {\n        item.reject?.(new Error('Input is too big for a single dispatch'));\n        index++;\n        continue;\n      }\n      // Create new group, next iteration will try to add the item to that\n      groupedItems.push([]);\n    }\n    return groupedItems;\n  }\n\n  function dispatch() {\n    const groupedItems = groupItems(pendingItems!);\n    destroyTimerAndPendingItems();\n\n    // Create batches for each group of items\n    for (const items of groupedItems) {\n      if (!items.length) {\n        continue;\n      }\n      const batch: Batch<TKey, TValue> = {\n        items,\n      };\n      for (const item of items) {\n        item.batch = batch;\n      }\n      const promise = batchLoader.fetch(batch.items.map((_item) => _item.key));\n\n      promise\n        .then(async (result) => {\n          await Promise.all(\n            result.map(async (valueOrPromise, index) => {\n              const item = batch.items[index]!;\n              try {\n                const value = await Promise.resolve(valueOrPromise);\n\n                item.resolve?.(value);\n              } catch (cause) {\n                item.reject?.(cause as Error);\n              }\n\n              item.batch = null;\n              item.reject = null;\n              item.resolve = null;\n            }),\n          );\n\n          for (const item of batch.items) {\n            item.reject?.(new Error('Missing result'));\n            item.batch = null;\n          }\n        })\n        .catch((cause) => {\n          for (const item of batch.items) {\n            item.reject?.(cause);\n            item.batch = null;\n          }\n        });\n    }\n  }\n  function load(key: TKey): Promise<TValue> {\n    const item: BatchItem<TKey, TValue> = {\n      aborted: false,\n      key,\n      batch: null,\n      resolve: throwFatalError,\n      reject: throwFatalError,\n    };\n\n    const promise = new Promise<TValue>((resolve, reject) => {\n      item.reject = reject;\n      item.resolve = resolve;\n\n      pendingItems ??= [];\n      pendingItems.push(item);\n    });\n\n    dispatchTimer ??= setTimeout(dispatch);\n\n    return promise;\n  }\n\n  return {\n    load,\n  };\n}\n","import type { Maybe } from '@trpc/server/unstable-core-do-not-import';\n\n/**\n * Like `Promise.all()` but for abort signals\n * - When all signals have been aborted, the merged signal will be aborted\n * - If one signal is `null`, no signal will be aborted\n */\nexport function allAbortSignals(...signals: Maybe<AbortSignal>[]): AbortSignal {\n  const ac = new AbortController();\n\n  const count = signals.length;\n\n  let abortedCount = 0;\n\n  const onAbort = () => {\n    if (++abortedCount === count) {\n      ac.abort();\n    }\n  };\n\n  for (const signal of signals) {\n    if (signal?.aborted) {\n      onAbort();\n    } else {\n      signal?.addEventListener('abort', onAbort, {\n        once: true,\n      });\n    }\n  }\n\n  return ac.signal;\n}\n\n/**\n * Like `Promise.race` but for abort signals\n *\n * Basically, a ponyfill for\n * [`AbortSignal.any`](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/any_static).\n */\nexport function raceAbortSignals(\n  ...signals: Maybe<AbortSignal>[]\n): AbortSignal {\n  const ac = new AbortController();\n\n  for (const signal of signals) {\n    if (signal?.aborted) {\n      ac.abort();\n    } else {\n      signal?.addEventListener('abort', () => ac.abort(), { once: true });\n    }\n  }\n\n  return ac.signal;\n}\n\nexport function abortSignalToPromise(signal: AbortSignal): Promise<never> {\n  return new Promise((_, reject) => {\n    if (signal.aborted) {\n      reject(signal.reason);\n      return;\n    }\n    signal.addEventListener(\n      'abort',\n      () => {\n        reject(signal.reason);\n      },\n      { once: true },\n    );\n  });\n}\n","import type { AnyRouter, ProcedureType } from '@trpc/server';\nimport { observable } from '@trpc/server/observable';\nimport { transformResult } from '@trpc/server/unstable-core-do-not-import';\nimport type { BatchLoader } from '../internals/dataLoader';\nimport { dataLoader } from '../internals/dataLoader';\nimport { allAbortSignals } from '../internals/signals';\nimport type { NonEmptyArray } from '../internals/types';\nimport { TRPCClientError } from '../TRPCClientError';\nimport type { HTTPBatchLinkOptions } from './HTTPBatchLinkOptions';\nimport type { HTTPResult } from './internals/httpUtils';\nimport {\n  getUrl,\n  jsonHttpRequester,\n  resolveHTTPLinkOptions,\n} from './internals/httpUtils';\nimport type { Operation, TRPCLink } from './types';\n\n/**\n * @see https://trpc.io/docs/client/links/httpBatchLink\n */\nexport function httpBatchLink<TRouter extends AnyRouter>(\n  opts: HTTPBatchLinkOptions<TRouter['_def']['_config']['$types']>,\n): TRPCLink<TRouter> {\n  const resolvedOpts = resolveHTTPLinkOptions(opts);\n  const maxURLLength = opts.maxURLLength ?? Infinity;\n  const maxItems = opts.maxItems ?? Infinity;\n\n  return () => {\n    const batchLoader = (\n      type: ProcedureType,\n    ): BatchLoader<Operation, HTTPResult> => {\n      return {\n        validate(batchOps) {\n          if (maxURLLength === Infinity && maxItems === Infinity) {\n            // escape hatch for quick calcs\n            return true;\n          }\n          if (batchOps.length > maxItems) {\n            return false;\n          }\n          const path = batchOps.map((op) => op.path).join(',');\n          const inputs = batchOps.map((op) => op.input);\n\n          const url = getUrl({\n            ...resolvedOpts,\n            type,\n            path,\n            inputs,\n            signal: null,\n          });\n\n          return url.length <= maxURLLength;\n        },\n        async fetch(batchOps) {\n          const path = batchOps.map((op) => op.path).join(',');\n          const inputs = batchOps.map((op) => op.input);\n          const signal = allAbortSignals(...batchOps.map((op) => op.signal));\n\n          const res = await jsonHttpRequester({\n            ...resolvedOpts,\n            path,\n            inputs,\n            type,\n            headers() {\n              if (!opts.headers) {\n                return {};\n              }\n              if (typeof opts.headers === 'function') {\n                return opts.headers({\n                  opList: batchOps as NonEmptyArray<Operation>,\n                });\n              }\n              return opts.headers;\n            },\n            signal,\n          });\n          const resJSON = Array.isArray(res.json)\n            ? res.json\n            : batchOps.map(() => res.json);\n          const result = resJSON.map((item) => ({\n            meta: res.meta,\n            json: item,\n          }));\n          return result;\n        },\n      };\n    };\n\n    const query = dataLoader(batchLoader('query'));\n    const mutation = dataLoader(batchLoader('mutation'));\n\n    const loaders = { query, mutation };\n    return ({ op }) => {\n      return observable((observer) => {\n        /* istanbul ignore if -- @preserve */\n        if (op.type === 'subscription') {\n          throw new Error(\n            'Subscriptions are unsupported by `httpLink` - use `httpSubscriptionLink` or `wsLink`',\n          );\n        }\n        const loader = loaders[op.type];\n        const promise = loader.load(op);\n\n        let _res = undefined as HTTPResult | undefined;\n        promise\n          .then((res) => {\n            _res = res;\n            const transformed = transformResult(\n              res.json,\n              resolvedOpts.transformer.output,\n            );\n\n            if (!transformed.ok) {\n              observer.error(\n                TRPCClientError.from(transformed.error, {\n                  meta: res.meta,\n                }),\n              );\n              return;\n            }\n            observer.next({\n              context: res.meta,\n              result: transformed.result,\n            });\n            observer.complete();\n          })\n          .catch((err) => {\n            observer.error(\n              TRPCClientError.from(err, {\n                meta: _res?.meta,\n              }),\n            );\n          });\n\n        return () => {\n          // noop\n        };\n      });\n    };\n  };\n}\n"],"names":["batchLoader: BatchLoader<TKey, TValue>","pendingItems: BatchItem<TKey, TValue>[] | null","dispatchTimer: ReturnType<typeof setTimeout> | null","items: BatchItem<TKey, TValue>[]","groupedItems: BatchItem<TKey, TValue>[][]","batch: Batch<TKey, TValue>","key: TKey","item: BatchItem<TKey, TValue>","signal: AbortSignal","opts: HTTPBatchLinkOptions<TRouter['_def']['_config']['$types']>","type: ProcedureType"],"mappings":"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","debugId":null}},
    {"offset": {"line": 4210, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@trpc/server/dist/observable-CUiPknO-.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/observable/operators.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/observable/behaviorSubject.ts"],"sourcesContent":["import { observable } from './observable';\nimport type {\n  MonoTypeOperatorFunction,\n  Observer,\n  OperatorFunction,\n  Unsubscribable,\n} from './types';\n\nexport function map<TValueBefore, TError, TValueAfter>(\n  project: (value: TValueBefore, index: number) => TValueAfter,\n): OperatorFunction<TValueBefore, TError, TValueAfter, TError> {\n  return (source) => {\n    return observable((destination) => {\n      let index = 0;\n      const subscription = source.subscribe({\n        next(value) {\n          destination.next(project(value, index++));\n        },\n        error(error) {\n          destination.error(error);\n        },\n        complete() {\n          destination.complete();\n        },\n      });\n      return subscription;\n    });\n  };\n}\n\ninterface ShareConfig {}\nexport function share<TValue, TError>(\n  _opts?: ShareConfig,\n): MonoTypeOperatorFunction<TValue, TError> {\n  return (source) => {\n    let refCount = 0;\n\n    let subscription: Unsubscribable | null = null;\n    const observers: Partial<Observer<TValue, TError>>[] = [];\n\n    function startIfNeeded() {\n      if (subscription) {\n        return;\n      }\n      subscription = source.subscribe({\n        next(value) {\n          for (const observer of observers) {\n            observer.next?.(value);\n          }\n        },\n        error(error) {\n          for (const observer of observers) {\n            observer.error?.(error);\n          }\n        },\n        complete() {\n          for (const observer of observers) {\n            observer.complete?.();\n          }\n        },\n      });\n    }\n    function resetIfNeeded() {\n      // \"resetOnRefCountZero\"\n      if (refCount === 0 && subscription) {\n        const _sub = subscription;\n        subscription = null;\n        _sub.unsubscribe();\n      }\n    }\n\n    return observable((subscriber) => {\n      refCount++;\n\n      observers.push(subscriber);\n      startIfNeeded();\n      return {\n        unsubscribe() {\n          refCount--;\n          resetIfNeeded();\n\n          const index = observers.findIndex((v) => v === subscriber);\n\n          if (index > -1) {\n            observers.splice(index, 1);\n          }\n        },\n      };\n    });\n  };\n}\n\nexport function tap<TValue, TError>(\n  observer: Partial<Observer<TValue, TError>>,\n): MonoTypeOperatorFunction<TValue, TError> {\n  return (source) => {\n    return observable((destination) => {\n      return source.subscribe({\n        next(value) {\n          observer.next?.(value);\n          destination.next(value);\n        },\n        error(error) {\n          observer.error?.(error);\n          destination.error(error);\n        },\n        complete() {\n          observer.complete?.();\n          destination.complete();\n        },\n      });\n    });\n  };\n}\n\nconst distinctUnsetMarker = Symbol();\nexport function distinctUntilChanged<TValue, TError>(\n  compare: (a: TValue, b: TValue) => boolean = (a, b) => a === b,\n): MonoTypeOperatorFunction<TValue, TError> {\n  return (source) => {\n    return observable((destination) => {\n      let lastValue: TValue | typeof distinctUnsetMarker = distinctUnsetMarker;\n\n      return source.subscribe({\n        next(value) {\n          if (lastValue !== distinctUnsetMarker && compare(lastValue, value)) {\n            return;\n          }\n          lastValue = value;\n          destination.next(value);\n        },\n        error(error) {\n          destination.error(error);\n        },\n        complete() {\n          destination.complete();\n        },\n      });\n    });\n  };\n}\n\nconst isDeepEqual = <T>(a: T, b: T): boolean => {\n  if (a === b) {\n    return true;\n  }\n  const bothAreObjects =\n    a && b && typeof a === 'object' && typeof b === 'object';\n\n  return (\n    !!bothAreObjects &&\n    Object.keys(a).length === Object.keys(b).length &&\n    Object.entries(a).every(([k, v]) => isDeepEqual(v, b[k as keyof T]))\n  );\n};\nexport function distinctUntilDeepChanged<\n  TValue,\n  TError,\n>(): MonoTypeOperatorFunction<TValue, TError> {\n  return distinctUntilChanged(isDeepEqual);\n}\n","import { observable } from './observable';\nimport type { Observable, Observer } from './types';\n\nexport interface BehaviorSubject<TValue> extends Observable<TValue, never> {\n  observable: Observable<TValue, never>;\n  next: (value: TValue) => void;\n  get: () => TValue;\n}\n\nexport interface ReadonlyBehaviorSubject<TValue>\n  extends Omit<BehaviorSubject<TValue>, 'next'> {}\n\n/**\n * @internal\n * An observable that maintains and provides a \"current value\" to subscribers\n * @see https://www.learnrxjs.io/learn-rxjs/subjects/behaviorsubject\n */\nexport function behaviorSubject<TValue>(\n  initialValue: TValue,\n): BehaviorSubject<TValue> {\n  let value: TValue = initialValue;\n\n  const observerList: Observer<TValue, never>[] = [];\n\n  const addObserver = (observer: Observer<TValue, never>) => {\n    if (value !== undefined) {\n      observer.next(value);\n    }\n    observerList.push(observer);\n  };\n  const removeObserver = (observer: Observer<TValue, never>) => {\n    observerList.splice(observerList.indexOf(observer), 1);\n  };\n\n  const obs = observable<TValue, never>((observer) => {\n    addObserver(observer);\n    return () => {\n      removeObserver(observer);\n    };\n  }) as BehaviorSubject<TValue>;\n\n  obs.next = (nextValue: TValue) => {\n    if (value === nextValue) {\n      return;\n    }\n    value = nextValue;\n    for (const observer of observerList) {\n      observer.next(nextValue);\n    }\n  };\n\n  obs.get = () => value;\n\n  return obs;\n}\n"],"names":["project: (value: TValueBefore, index: number) => TValueAfter","_opts?: ShareConfig","subscription: Unsubscribable | null","observers: Partial<Observer<TValue, TError>>[]","observer: Partial<Observer<TValue, TError>>","compare: (a: TValue, b: TValue) => boolean","lastValue: TValue | typeof distinctUnsetMarker","a: T","b: T","initialValue: TValue","value: TValue","observerList: Observer<TValue, never>[]","observer: Observer<TValue, never>","nextValue: TValue"],"mappings":"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","debugId":null}},
    {"offset": {"line": 4384, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@trpc/client/dist/loggerLink-ineCN1PO.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/links/loggerLink.ts"],"sourcesContent":["/// <reference lib=\"dom.iterable\" />\n\n// `dom.iterable` types are explicitly required for extracting `FormData` values,\n// as all implementations of `Symbol.iterable` are separated from the main `dom` types.\n// Using triple-slash directive makes sure that it will be available,\n// even if end-user `tsconfig.json` omits it in the `lib` array.\n\nimport { observable, tap } from '@trpc/server/observable';\nimport type {\n  AnyRouter,\n  InferrableClientTypes,\n} from '@trpc/server/unstable-core-do-not-import';\nimport type { TRPCClientError } from '../TRPCClientError';\nimport type { Operation, OperationResultEnvelope, TRPCLink } from './types';\n\ntype ConsoleEsque = {\n  log: (...args: any[]) => void;\n  error: (...args: any[]) => void;\n};\n\ntype EnableFnOptions<TRouter extends InferrableClientTypes> =\n  | {\n      direction: 'down';\n      result:\n        | OperationResultEnvelope<unknown, TRPCClientError<TRouter>>\n        | TRPCClientError<TRouter>;\n    }\n  | (Operation & {\n      direction: 'up';\n    });\ntype EnabledFn<TRouter extends AnyRouter> = (\n  opts: EnableFnOptions<TRouter>,\n) => boolean;\n\ntype LoggerLinkFnOptions<TRouter extends AnyRouter> = Operation &\n  (\n    | {\n        /**\n         * Request result\n         */\n        direction: 'down';\n        result:\n          | OperationResultEnvelope<unknown, TRPCClientError<TRouter>>\n          | TRPCClientError<TRouter>;\n        elapsedMs: number;\n      }\n    | {\n        /**\n         * Request was just initialized\n         */\n        direction: 'up';\n      }\n  );\n\ntype LoggerLinkFn<TRouter extends AnyRouter> = (\n  opts: LoggerLinkFnOptions<TRouter>,\n) => void;\n\ntype ColorMode = 'ansi' | 'css' | 'none';\n\nexport interface LoggerLinkOptions<TRouter extends AnyRouter> {\n  logger?: LoggerLinkFn<TRouter>;\n  enabled?: EnabledFn<TRouter>;\n  /**\n   * Used in the built-in defaultLogger\n   */\n  console?: ConsoleEsque;\n  /**\n   * Color mode\n   * @default typeof window === 'undefined' ? 'ansi' : 'css'\n   */\n  colorMode?: ColorMode;\n\n  /**\n   * Include context in the log - defaults to false unless `colorMode` is 'css'\n   */\n  withContext?: boolean;\n}\n\nfunction isFormData(value: unknown): value is FormData {\n  if (typeof FormData === 'undefined') {\n    // FormData is not supported\n    return false;\n  }\n  return value instanceof FormData;\n}\n\nconst palettes = {\n  css: {\n    query: ['72e3ff', '3fb0d8'],\n    mutation: ['c5a3fc', '904dfc'],\n    subscription: ['ff49e1', 'd83fbe'],\n  },\n  ansi: {\n    regular: {\n      // Cyan background, black and white text respectively\n      query: ['\\x1b[30;46m', '\\x1b[97;46m'],\n      // Magenta background, black and white text respectively\n      mutation: ['\\x1b[30;45m', '\\x1b[97;45m'],\n      // Green background, black and white text respectively\n      subscription: ['\\x1b[30;42m', '\\x1b[97;42m'],\n    },\n    bold: {\n      query: ['\\x1b[1;30;46m', '\\x1b[1;97;46m'],\n      mutation: ['\\x1b[1;30;45m', '\\x1b[1;97;45m'],\n      subscription: ['\\x1b[1;30;42m', '\\x1b[1;97;42m'],\n    },\n  },\n} as const;\n\nfunction constructPartsAndArgs(\n  opts: LoggerLinkFnOptions<any> & {\n    colorMode: ColorMode;\n    withContext?: boolean;\n  },\n) {\n  const { direction, type, withContext, path, id, input } = opts;\n\n  const parts: string[] = [];\n  const args: any[] = [];\n\n  if (opts.colorMode === 'none') {\n    parts.push(direction === 'up' ? '>>' : '<<', type, `#${id}`, path);\n  } else if (opts.colorMode === 'ansi') {\n    const [lightRegular, darkRegular] = palettes.ansi.regular[type];\n    const [lightBold, darkBold] = palettes.ansi.bold[type];\n    const reset = '\\x1b[0m';\n\n    parts.push(\n      direction === 'up' ? lightRegular : darkRegular,\n      direction === 'up' ? '>>' : '<<',\n      type,\n      direction === 'up' ? lightBold : darkBold,\n      `#${id}`,\n      path,\n      reset,\n    );\n  } else {\n    // css color mode\n    const [light, dark] = palettes.css[type];\n    const css = `\n    background-color: #${direction === 'up' ? light : dark};\n    color: ${direction === 'up' ? 'black' : 'white'};\n    padding: 2px;\n  `;\n\n    parts.push(\n      '%c',\n      direction === 'up' ? '>>' : '<<',\n      type,\n      `#${id}`,\n      `%c${path}%c`,\n      '%O',\n    );\n    args.push(\n      css,\n      `${css}; font-weight: bold;`,\n      `${css}; font-weight: normal;`,\n    );\n  }\n\n  if (direction === 'up') {\n    args.push(withContext ? { input, context: opts.context } : { input });\n  } else {\n    args.push({\n      input,\n      result: opts.result,\n      elapsedMs: opts.elapsedMs,\n      ...(withContext && { context: opts.context }),\n    });\n  }\n\n  return { parts, args };\n}\n\n// maybe this should be moved to it's own package\nconst defaultLogger =\n  <TRouter extends AnyRouter>({\n    c = console,\n    colorMode = 'css',\n    withContext,\n  }: {\n    c?: ConsoleEsque;\n    colorMode?: ColorMode;\n    withContext?: boolean;\n  }): LoggerLinkFn<TRouter> =>\n  (props) => {\n    const rawInput = props.input;\n    const input = isFormData(rawInput)\n      ? Object.fromEntries(rawInput)\n      : rawInput;\n\n    const { parts, args } = constructPartsAndArgs({\n      ...props,\n      colorMode,\n      input,\n      withContext,\n    });\n\n    const fn: 'error' | 'log' =\n      props.direction === 'down' &&\n      props.result &&\n      (props.result instanceof Error ||\n        ('error' in props.result.result && props.result.result.error))\n        ? 'error'\n        : 'log';\n\n    c[fn].apply(null, [parts.join(' ')].concat(args));\n  };\n\n/**\n * @see https://trpc.io/docs/v11/client/links/loggerLink\n */\nexport function loggerLink<TRouter extends AnyRouter = AnyRouter>(\n  opts: LoggerLinkOptions<TRouter> = {},\n): TRPCLink<TRouter> {\n  const { enabled = () => true } = opts;\n\n  const colorMode =\n    opts.colorMode ?? (typeof window === 'undefined' ? 'ansi' : 'css');\n  const withContext = opts.withContext ?? colorMode === 'css';\n  const {\n    logger = defaultLogger({ c: opts.console, colorMode, withContext }),\n  } = opts;\n\n  return () => {\n    return ({ op, next }) => {\n      return observable((observer) => {\n        // ->\n        if (enabled({ ...op, direction: 'up' })) {\n          logger({\n            ...op,\n            direction: 'up',\n          });\n        }\n        const requestStartTime = Date.now();\n        function logResult(\n          result:\n            | OperationResultEnvelope<unknown, TRPCClientError<TRouter>>\n            | TRPCClientError<TRouter>,\n        ) {\n          const elapsedMs = Date.now() - requestStartTime;\n\n          if (enabled({ ...op, direction: 'down', result })) {\n            logger({\n              ...op,\n              direction: 'down',\n              elapsedMs,\n              result,\n            });\n          }\n        }\n        return next(op)\n          .pipe(\n            tap({\n              next(result) {\n                logResult(result);\n              },\n              error(result) {\n                logResult(result);\n              },\n            }),\n          )\n          .subscribe(observer);\n      });\n    };\n  };\n}\n"],"names":["value: unknown","opts: LoggerLinkFnOptions<any> & {\n    colorMode: ColorMode;\n    withContext?: boolean;\n  }","parts: string[]","args: any[]","fn: 'error' | 'log'","opts: LoggerLinkOptions<TRouter>","result:\n            | OperationResultEnvelope<unknown, TRPCClientError<TRouter>>\n            | TRPCClientError<TRouter>"],"mappings":"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","debugId":null}},
    {"offset": {"line": 4546, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@trpc/client/dist/wsLink-CatceK3c.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/links/wsLink/wsClient/options.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/links/internals/urlWithConnectionParams.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/links/wsLink/wsClient/utils.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/links/wsLink/wsClient/requestManager.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/links/wsLink/wsClient/wsConnection.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/links/wsLink/wsClient/wsClient.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/links/wsLink/createWsClient.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/links/wsLink/wsLink.ts"],"sourcesContent":["import type { UrlOptionsWithConnectionParams } from '../../internals/urlWithConnectionParams';\n\nexport interface WebSocketClientOptions extends UrlOptionsWithConnectionParams {\n  /**\n   * Ponyfill which WebSocket implementation to use\n   */\n  WebSocket?: typeof WebSocket;\n  /**\n   * The number of milliseconds before a reconnect is attempted.\n   * @default {@link exponentialBackoff}\n   */\n  retryDelayMs?: (attemptIndex: number) => number;\n  /**\n   * Triggered when a WebSocket connection is established\n   */\n  onOpen?: () => void;\n  /**\n   * Triggered when a WebSocket connection encounters an error\n   */\n  onError?: (evt?: Event) => void;\n  /**\n   * Triggered when a WebSocket connection is closed\n   */\n  onClose?: (cause?: { code?: number }) => void;\n  /**\n   * Lazy mode will close the WebSocket automatically after a period of inactivity (no messages sent or received and no pending requests)\n   */\n  lazy?: {\n    /**\n     * Enable lazy mode\n     * @default false\n     */\n    enabled: boolean;\n    /**\n     * Close the WebSocket after this many milliseconds\n     * @default 0\n     */\n    closeMs: number;\n  };\n  /**\n   * Send ping messages to the server and kill the connection if no pong message is returned\n   */\n  keepAlive?: {\n    /**\n     * @default false\n     */\n    enabled: boolean;\n    /**\n     * Send a ping message every this many milliseconds\n     * @default 5_000\n     */\n    intervalMs?: number;\n    /**\n     * Close the WebSocket after this many milliseconds if the server does not respond\n     * @default 1_000\n     */\n    pongTimeoutMs?: number;\n  };\n}\n\n/**\n * Default options for lazy WebSocket connections.\n * Determines whether the connection should be established lazily and defines the delay before closure.\n */\nexport type LazyOptions = Required<NonNullable<WebSocketClientOptions['lazy']>>;\nexport const lazyDefaults: LazyOptions = {\n  enabled: false,\n  closeMs: 0,\n};\n\n/**\n * Default options for the WebSocket keep-alive mechanism.\n * Configures whether keep-alive is enabled and specifies the timeout and interval for ping-pong messages.\n */\nexport type KeepAliveOptions = Required<\n  NonNullable<WebSocketClientOptions['keepAlive']>\n>;\nexport const keepAliveDefaults: KeepAliveOptions = {\n  enabled: false,\n  pongTimeoutMs: 1_000,\n  intervalMs: 5_000,\n};\n\n/**\n * Calculates a delay for exponential backoff based on the retry attempt index.\n * The delay starts at 0 for the first attempt and doubles for each subsequent attempt,\n * capped at 30 seconds.\n */\nexport const exponentialBackoff = (attemptIndex: number) => {\n  return attemptIndex === 0 ? 0 : Math.min(1000 * 2 ** attemptIndex, 30000);\n};\n","import { type TRPCRequestInfo } from '@trpc/server/http';\n\n/**\n * Get the result of a value or function that returns a value\n * It also optionally accepts typesafe arguments for the function\n */\nexport const resultOf = <T, TArgs extends any[]>(\n  value: T | ((...args: TArgs) => T),\n  ...args: TArgs\n): T => {\n  return typeof value === 'function'\n    ? (value as (...args: TArgs) => T)(...args)\n    : value;\n};\n\n/**\n * A value that can be wrapped in callback\n */\nexport type CallbackOrValue<T> = T | (() => T | Promise<T>);\n\nexport interface UrlOptionsWithConnectionParams {\n  /**\n   * The URL to connect to (can be a function that returns a URL)\n   */\n  url: CallbackOrValue<string>;\n\n  /**\n   * Connection params that are available in `createContext()`\n   * - For `wsLink`/`wsClient`, these are sent as the first message\n   * - For `httpSubscriptionLink`, these are serialized as part of the URL under the `connectionParams` query\n   */\n  connectionParams?: CallbackOrValue<TRPCRequestInfo['connectionParams']>;\n}\n","import type {\n  TRPCConnectionParamsMessage,\n  TRPCRequestInfo,\n} from '@trpc/server/unstable-core-do-not-import';\nimport type {\n  CallbackOrValue,\n  UrlOptionsWithConnectionParams,\n} from '../../internals/urlWithConnectionParams';\nimport { resultOf } from '../../internals/urlWithConnectionParams';\n\nexport class TRPCWebSocketClosedError extends Error {\n  constructor(opts: { message: string; cause?: unknown }) {\n    super(opts.message, {\n      cause: opts.cause,\n    });\n    this.name = 'TRPCWebSocketClosedError';\n    Object.setPrototypeOf(this, TRPCWebSocketClosedError.prototype);\n  }\n}\n\n/**\n * Utility class for managing a timeout that can be started, stopped, and reset.\n * Useful for scenarios where the timeout duration is reset dynamically based on events.\n */\nexport class ResettableTimeout {\n  private timeout: ReturnType<typeof setTimeout> | undefined;\n\n  constructor(\n    private readonly onTimeout: () => void,\n    private readonly timeoutMs: number,\n  ) {}\n\n  /**\n   * Resets the current timeout, restarting it with the same duration.\n   * Does nothing if no timeout is active.\n   */\n  public reset() {\n    if (!this.timeout) return;\n\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(this.onTimeout, this.timeoutMs);\n  }\n\n  public start() {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(this.onTimeout, this.timeoutMs);\n  }\n\n  public stop() {\n    clearTimeout(this.timeout);\n    this.timeout = undefined;\n  }\n}\n\n// Ponyfill for Promise.withResolvers https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/withResolvers\nexport function withResolvers<T>() {\n  let resolve: (value: T | PromiseLike<T>) => void;\n  let reject: (reason?: any) => void;\n  const promise = new Promise<T>((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return { promise, resolve: resolve!, reject: reject! };\n}\n\n/**\n * Resolves a WebSocket URL and optionally appends connection parameters.\n *\n * If connectionParams are provided, appends 'connectionParams=1' query parameter.\n */\nexport async function prepareUrl(urlOptions: UrlOptionsWithConnectionParams) {\n  const url = await resultOf(urlOptions.url);\n\n  if (!urlOptions.connectionParams) return url;\n\n  // append `?connectionParams=1` when connection params are used\n  const prefix = url.includes('?') ? '&' : '?';\n  const connectionParams = `${prefix}connectionParams=1`;\n\n  return url + connectionParams;\n}\n\nexport async function buildConnectionMessage(\n  connectionParams: CallbackOrValue<TRPCRequestInfo['connectionParams']>,\n) {\n  const message: TRPCConnectionParamsMessage = {\n    method: 'connectionParams',\n    data: await resultOf(connectionParams),\n  };\n\n  return JSON.stringify(message);\n}\n","import type { AnyTRPCRouter, inferRouterError } from '@trpc/server';\nimport type { Observer } from '@trpc/server/observable';\nimport type {\n  TRPCClientOutgoingMessage,\n  TRPCResponseMessage,\n} from '@trpc/server/unstable-core-do-not-import';\nimport type { TRPCClientError } from '../../../TRPCClientError';\nimport { withResolvers } from './utils';\n\nexport type TCallbacks = Observer<\n  TRPCResponseMessage<unknown, inferRouterError<AnyTRPCRouter>>,\n  TRPCClientError<AnyTRPCRouter>\n>;\n\ntype MessageId = string;\ntype MessageIdLike = string | number | null;\n\n/**\n * Represents a WebSocket request managed by the RequestManager.\n * Combines the network message, a utility promise (`end`) that mirrors the lifecycle\n * handled by `callbacks`, and a set of state monitoring callbacks.\n */\ninterface Request {\n  message: TRPCClientOutgoingMessage;\n  end: Promise<void>;\n  callbacks: TCallbacks;\n}\n\n/**\n * Manages WebSocket requests, tracking their lifecycle and providing utility methods\n * for handling outgoing and pending requests.\n *\n * - **Outgoing requests**: Requests that are queued and waiting to be sent.\n * - **Pending requests**: Requests that have been sent and are in flight awaiting a response.\n *   For subscriptions, multiple responses may be received until the subscription is closed.\n */\nexport class RequestManager {\n  /**\n   * Stores requests that are outgoing, meaning they are registered but not yet sent over the WebSocket.\n   */\n  private outgoingRequests = new Array<Request & { id: MessageId }>();\n\n  /**\n   * Stores requests that are pending (in flight), meaning they have been sent over the WebSocket\n   * and are awaiting responses. For subscriptions, this includes requests\n   * that may receive multiple responses.\n   */\n  private pendingRequests: Record<MessageId, Request> = {};\n\n  /**\n   * Registers a new request by adding it to the outgoing queue and setting up\n   * callbacks for lifecycle events such as completion or error.\n   *\n   * @param message - The outgoing message to be sent.\n   * @param callbacks - Callback functions to observe the request's state.\n   * @returns A cleanup function to manually remove the request.\n   */\n  public register(message: TRPCClientOutgoingMessage, callbacks: TCallbacks) {\n    const { promise: end, resolve } = withResolvers<void>();\n\n    this.outgoingRequests.push({\n      id: String(message.id),\n      message,\n      end,\n      callbacks: {\n        next: callbacks.next,\n        complete: () => {\n          callbacks.complete();\n          resolve();\n        },\n        error: (e) => {\n          callbacks.error(e);\n          resolve();\n        },\n      },\n    });\n\n    return () => {\n      this.delete(message.id);\n      callbacks.complete();\n      resolve();\n    };\n  }\n\n  /**\n   * Deletes a request from both the outgoing and pending collections, if it exists.\n   */\n  public delete(messageId: MessageIdLike) {\n    if (messageId === null) return;\n\n    this.outgoingRequests = this.outgoingRequests.filter(\n      ({ id }) => id !== String(messageId),\n    );\n    delete this.pendingRequests[String(messageId)];\n  }\n\n  /**\n   * Moves all outgoing requests to the pending state and clears the outgoing queue.\n   *\n   * The caller is expected to handle the actual sending of the requests\n   * (e.g., sending them over the network) after this method is called.\n   *\n   * @returns The list of requests that were transitioned to the pending state.\n   */\n  public flush() {\n    const requests = this.outgoingRequests;\n    this.outgoingRequests = [];\n\n    for (const request of requests) {\n      this.pendingRequests[request.id] = request;\n    }\n    return requests;\n  }\n\n  /**\n   * Retrieves all currently pending requests, which are in flight awaiting responses\n   * or handling ongoing subscriptions.\n   */\n  public getPendingRequests() {\n    return Object.values(this.pendingRequests);\n  }\n\n  /**\n   * Retrieves a specific pending request by its message ID.\n   */\n  public getPendingRequest(messageId: MessageIdLike) {\n    if (messageId === null) return null;\n\n    return this.pendingRequests[String(messageId)];\n  }\n\n  /**\n   * Retrieves all outgoing requests, which are waiting to be sent.\n   */\n  public getOutgoingRequests() {\n    return this.outgoingRequests;\n  }\n\n  /**\n   * Retrieves all requests, both outgoing and pending, with their respective states.\n   *\n   * @returns An array of all requests with their state (\"outgoing\" or \"pending\").\n   */\n  public getRequests() {\n    return [\n      ...this.getOutgoingRequests().map((request) => ({\n        state: 'outgoing' as const,\n        message: request.message,\n        end: request.end,\n        callbacks: request.callbacks,\n      })),\n      ...this.getPendingRequests().map((request) => ({\n        state: 'pending' as const,\n        message: request.message,\n        end: request.end,\n        callbacks: request.callbacks,\n      })),\n    ];\n  }\n\n  /**\n   * Checks if there are any pending requests, including ongoing subscriptions.\n   */\n  public hasPendingRequests() {\n    return this.getPendingRequests().length > 0;\n  }\n\n  /**\n   * Checks if there are any pending subscriptions\n   */\n  public hasPendingSubscriptions() {\n    return this.getPendingRequests().some(\n      (request) => request.message.method === 'subscription',\n    );\n  }\n\n  /**\n   * Checks if there are any outgoing requests waiting to be sent.\n   */\n  public hasOutgoingRequests() {\n    return this.outgoingRequests.length > 0;\n  }\n}\n","import { behaviorSubject } from '@trpc/server/observable';\nimport type { UrlOptionsWithConnectionParams } from '../../internals/urlWithConnectionParams';\nimport { buildConnectionMessage, prepareUrl, withResolvers } from './utils';\n\n/**\n * Opens a WebSocket connection asynchronously and returns a promise\n * that resolves when the connection is successfully established.\n * The promise rejects if an error occurs during the connection attempt.\n */\nfunction asyncWsOpen(ws: WebSocket) {\n  const { promise, resolve, reject } = withResolvers<void>();\n\n  ws.addEventListener('open', () => {\n    ws.removeEventListener('error', reject);\n    resolve();\n  });\n  ws.addEventListener('error', reject);\n\n  return promise;\n}\n\ninterface PingPongOptions {\n  /**\n   * The interval (in milliseconds) between \"PING\" messages.\n   */\n  intervalMs: number;\n\n  /**\n   * The timeout (in milliseconds) to wait for a \"PONG\" response before closing the connection.\n   */\n  pongTimeoutMs: number;\n}\n\n/**\n * Sets up a periodic ping-pong mechanism to keep the WebSocket connection alive.\n *\n * - Sends \"PING\" messages at regular intervals defined by `intervalMs`.\n * - If a \"PONG\" response is not received within the `pongTimeoutMs`, the WebSocket is closed.\n * - The ping timer resets upon receiving any message to maintain activity.\n * - Automatically starts the ping process when the WebSocket connection is opened.\n * - Cleans up timers when the WebSocket is closed.\n *\n * @param ws - The WebSocket instance to manage.\n * @param options - Configuration options for ping-pong intervals and timeouts.\n */\nfunction setupPingInterval(\n  ws: WebSocket,\n  { intervalMs, pongTimeoutMs }: PingPongOptions,\n) {\n  let pingTimeout: ReturnType<typeof setTimeout> | undefined;\n  let pongTimeout: ReturnType<typeof setTimeout> | undefined;\n\n  function start() {\n    pingTimeout = setTimeout(() => {\n      ws.send('PING');\n      pongTimeout = setTimeout(() => {\n        ws.close();\n      }, pongTimeoutMs);\n    }, intervalMs);\n  }\n\n  function reset() {\n    clearTimeout(pingTimeout);\n    start();\n  }\n\n  function pong() {\n    clearTimeout(pongTimeout);\n    reset();\n  }\n\n  ws.addEventListener('open', start);\n  ws.addEventListener('message', ({ data }) => {\n    clearTimeout(pingTimeout);\n    start();\n\n    if (data === 'PONG') {\n      pong();\n    }\n  });\n  ws.addEventListener('close', () => {\n    clearTimeout(pingTimeout);\n    clearTimeout(pongTimeout);\n  });\n}\n\nexport interface WebSocketConnectionOptions {\n  WebSocketPonyfill?: typeof WebSocket;\n  urlOptions: UrlOptionsWithConnectionParams;\n  keepAlive: PingPongOptions & {\n    enabled: boolean;\n  };\n}\n\n/**\n * Manages a WebSocket connection with support for reconnection, keep-alive mechanisms,\n * and observable state tracking.\n */\nexport class WsConnection {\n  static connectCount = 0;\n  public id = ++WsConnection.connectCount;\n\n  private readonly WebSocketPonyfill: typeof WebSocket;\n  private readonly urlOptions: UrlOptionsWithConnectionParams;\n  private readonly keepAliveOpts: WebSocketConnectionOptions['keepAlive'];\n  public readonly wsObservable = behaviorSubject<WebSocket | null>(null);\n\n  constructor(opts: WebSocketConnectionOptions) {\n    this.WebSocketPonyfill = opts.WebSocketPonyfill ?? WebSocket;\n    if (!this.WebSocketPonyfill) {\n      throw new Error(\n        \"No WebSocket implementation found - you probably don't want to use this on the server, but if you do you need to pass a `WebSocket`-ponyfill\",\n      );\n    }\n\n    this.urlOptions = opts.urlOptions;\n    this.keepAliveOpts = opts.keepAlive;\n  }\n\n  public get ws() {\n    return this.wsObservable.get();\n  }\n\n  private set ws(ws) {\n    this.wsObservable.next(ws);\n  }\n\n  /**\n   * Checks if the WebSocket connection is open and ready to communicate.\n   */\n  public isOpen(): this is { ws: WebSocket } {\n    return (\n      !!this.ws &&\n      this.ws.readyState === this.WebSocketPonyfill.OPEN &&\n      !this.openPromise\n    );\n  }\n\n  /**\n   * Checks if the WebSocket connection is closed or in the process of closing.\n   */\n  public isClosed(): this is { ws: WebSocket } {\n    return (\n      !!this.ws &&\n      (this.ws.readyState === this.WebSocketPonyfill.CLOSING ||\n        this.ws.readyState === this.WebSocketPonyfill.CLOSED)\n    );\n  }\n\n  /**\n   * Manages the WebSocket opening process, ensuring that only one open operation\n   * occurs at a time. Tracks the ongoing operation with `openPromise` to avoid\n   * redundant calls and ensure proper synchronization.\n   *\n   * Sets up the keep-alive mechanism and necessary event listeners for the connection.\n   *\n   * @returns A promise that resolves once the WebSocket connection is successfully opened.\n   */\n  private openPromise: Promise<void> | null = null;\n  public async open() {\n    if (this.openPromise) return this.openPromise;\n\n    this.id = ++WsConnection.connectCount;\n    const wsPromise = prepareUrl(this.urlOptions).then(\n      (url) => new this.WebSocketPonyfill(url),\n    );\n    this.openPromise = wsPromise.then(async (ws) => {\n      this.ws = ws;\n\n      // Setup ping listener\n      ws.addEventListener('message', function ({ data }) {\n        if (data === 'PING') {\n          this.send('PONG');\n        }\n      });\n\n      if (this.keepAliveOpts.enabled) {\n        setupPingInterval(ws, this.keepAliveOpts);\n      }\n\n      ws.addEventListener('close', () => {\n        if (this.ws === ws) {\n          this.ws = null;\n        }\n      });\n\n      await asyncWsOpen(ws);\n\n      if (this.urlOptions.connectionParams) {\n        ws.send(await buildConnectionMessage(this.urlOptions.connectionParams));\n      }\n    });\n\n    try {\n      await this.openPromise;\n    } finally {\n      this.openPromise = null;\n    }\n  }\n\n  /**\n   * Closes the WebSocket connection gracefully.\n   * Waits for any ongoing open operation to complete before closing.\n   */\n  public async close() {\n    try {\n      await this.openPromise;\n    } finally {\n      this.ws?.close();\n    }\n  }\n}\n\n/**\n * Provides a backward-compatible representation of the connection state.\n */\nexport function backwardCompatibility(connection: WsConnection) {\n  if (connection.isOpen()) {\n    return {\n      id: connection.id,\n      state: 'open',\n      ws: connection.ws,\n    } as const;\n  }\n\n  if (connection.isClosed()) {\n    return {\n      id: connection.id,\n      state: 'closed',\n      ws: connection.ws,\n    } as const;\n  }\n\n  if (!connection.ws) {\n    return null;\n  }\n\n  return {\n    id: connection.id,\n    state: 'connecting',\n    ws: connection.ws,\n  } as const;\n}\n","import type { AnyTRPCRouter } from '@trpc/server';\nimport type { BehaviorSubject } from '@trpc/server/observable';\nimport { behaviorSubject, observable } from '@trpc/server/observable';\nimport type {\n  CombinedDataTransformer,\n  TRPCClientIncomingMessage,\n  TRPCClientIncomingRequest,\n  TRPCClientOutgoingMessage,\n  TRPCResponseMessage,\n} from '@trpc/server/unstable-core-do-not-import';\nimport {\n  run,\n  sleep,\n  transformResult,\n} from '@trpc/server/unstable-core-do-not-import';\nimport { TRPCClientError } from '../../../TRPCClientError';\nimport type { TRPCConnectionState } from '../../internals/subscriptions';\nimport type { Operation, OperationResultEnvelope } from '../../types';\nimport type { WebSocketClientOptions } from './options';\nimport { exponentialBackoff, keepAliveDefaults, lazyDefaults } from './options';\nimport type { TCallbacks } from './requestManager';\nimport { RequestManager } from './requestManager';\nimport { ResettableTimeout, TRPCWebSocketClosedError } from './utils';\nimport { backwardCompatibility, WsConnection } from './wsConnection';\n\n/**\n * A WebSocket client for managing TRPC operations, supporting lazy initialization,\n * reconnection, keep-alive, and request management.\n */\nexport class WsClient {\n  /**\n   * Observable tracking the current connection state, including errors.\n   */\n  public readonly connectionState: BehaviorSubject<\n    TRPCConnectionState<TRPCClientError<AnyTRPCRouter>>\n  >;\n\n  private allowReconnect = false;\n  private requestManager = new RequestManager();\n  private readonly activeConnection: WsConnection;\n  private readonly reconnectRetryDelay: (attemptIndex: number) => number;\n  private inactivityTimeout: ResettableTimeout;\n  private readonly callbacks: Pick<\n    WebSocketClientOptions,\n    'onOpen' | 'onClose' | 'onError'\n  >;\n  private readonly lazyMode: boolean;\n\n  constructor(opts: WebSocketClientOptions) {\n    // Initialize callbacks, connection parameters, and options.\n    this.callbacks = {\n      onOpen: opts.onOpen,\n      onClose: opts.onClose,\n      onError: opts.onError,\n    };\n\n    const lazyOptions = {\n      ...lazyDefaults,\n      ...opts.lazy,\n    };\n\n    // Set up inactivity timeout for lazy connections.\n    this.inactivityTimeout = new ResettableTimeout(() => {\n      if (\n        this.requestManager.hasOutgoingRequests() ||\n        this.requestManager.hasPendingRequests()\n      ) {\n        this.inactivityTimeout.reset();\n        return;\n      }\n\n      this.close().catch(() => null);\n    }, lazyOptions.closeMs);\n\n    // Initialize the WebSocket connection.\n    this.activeConnection = new WsConnection({\n      WebSocketPonyfill: opts.WebSocket,\n      urlOptions: opts,\n      keepAlive: {\n        ...keepAliveDefaults,\n        ...opts.keepAlive,\n      },\n    });\n    this.activeConnection.wsObservable.subscribe({\n      next: (ws) => {\n        if (!ws) return;\n        this.setupWebSocketListeners(ws);\n      },\n    });\n    this.reconnectRetryDelay = opts.retryDelayMs ?? exponentialBackoff;\n\n    this.lazyMode = lazyOptions.enabled;\n\n    this.connectionState = behaviorSubject<\n      TRPCConnectionState<TRPCClientError<AnyTRPCRouter>>\n    >({\n      type: 'state',\n      state: lazyOptions.enabled ? 'idle' : 'connecting',\n      error: null,\n    });\n\n    // Automatically open the connection if lazy mode is disabled.\n    if (!this.lazyMode) {\n      this.open().catch(() => null);\n    }\n  }\n\n  /**\n   * Opens the WebSocket connection. Handles reconnection attempts and updates\n   * the connection state accordingly.\n   */\n  private async open() {\n    this.allowReconnect = true;\n    if (this.connectionState.get().state === 'idle') {\n      this.connectionState.next({\n        type: 'state',\n        state: 'connecting',\n        error: null,\n      });\n    }\n\n    try {\n      await this.activeConnection.open();\n    } catch (error) {\n      this.reconnect(\n        new TRPCWebSocketClosedError({\n          message: 'Initialization error',\n          cause: error,\n        }),\n      );\n      return this.reconnecting;\n    }\n  }\n\n  /**\n   * Closes the WebSocket connection and stops managing requests.\n   * Ensures all outgoing and pending requests are properly finalized.\n   */\n  public async close() {\n    this.allowReconnect = false;\n    this.inactivityTimeout.stop();\n\n    const requestsToAwait: Promise<void>[] = [];\n    for (const request of this.requestManager.getRequests()) {\n      if (request.message.method === 'subscription') {\n        request.callbacks.complete();\n      } else if (request.state === 'outgoing') {\n        request.callbacks.error(\n          TRPCClientError.from(\n            new TRPCWebSocketClosedError({\n              message: 'Closed before connection was established',\n            }),\n          ),\n        );\n      } else {\n        requestsToAwait.push(request.end);\n      }\n    }\n\n    await Promise.all(requestsToAwait).catch(() => null);\n    await this.activeConnection.close().catch(() => null);\n\n    this.connectionState.next({\n      type: 'state',\n      state: 'idle',\n      error: null,\n    });\n  }\n\n  /**\n   * Method to request the server.\n   * Handles data transformation, batching of requests, and subscription lifecycle.\n   *\n   * @param op - The operation details including id, type, path, input and signal\n   * @param transformer - Data transformer for serializing requests and deserializing responses\n   * @param lastEventId - Optional ID of the last received event for subscriptions\n   *\n   * @returns An observable that emits operation results and handles cleanup\n   */\n  public request({\n    op: { id, type, path, input, signal },\n    transformer,\n    lastEventId,\n  }: {\n    op: Pick<Operation, 'id' | 'type' | 'path' | 'input' | 'signal'>;\n    transformer: CombinedDataTransformer;\n    lastEventId?: string;\n  }) {\n    return observable<\n      OperationResultEnvelope<unknown, TRPCClientError<AnyTRPCRouter>>,\n      TRPCClientError<AnyTRPCRouter>\n    >((observer) => {\n      const abort = this.batchSend(\n        {\n          id,\n          method: type,\n          params: {\n            input: transformer.input.serialize(input),\n            path,\n            lastEventId,\n          },\n        },\n        {\n          ...observer,\n          next(event) {\n            const transformed = transformResult(event, transformer.output);\n\n            if (!transformed.ok) {\n              observer.error(TRPCClientError.from(transformed.error));\n              return;\n            }\n\n            observer.next({\n              result: transformed.result,\n            });\n          },\n        },\n      );\n\n      return () => {\n        abort();\n\n        if (type === 'subscription' && this.activeConnection.isOpen()) {\n          this.send({\n            id,\n            method: 'subscription.stop',\n          });\n        }\n\n        signal?.removeEventListener('abort', abort);\n      };\n    });\n  }\n\n  public get connection() {\n    return backwardCompatibility(this.activeConnection);\n  }\n\n  /**\n   * Manages the reconnection process for the WebSocket using retry logic.\n   * Ensures that only one reconnection attempt is active at a time by tracking the current\n   * reconnection state in the `reconnecting` promise.\n   */\n  private reconnecting: Promise<void> | null = null;\n  private reconnect(closedError: TRPCWebSocketClosedError) {\n    this.connectionState.next({\n      type: 'state',\n      state: 'connecting',\n      error: TRPCClientError.from(closedError),\n    });\n    if (this.reconnecting) return;\n\n    const tryReconnect = async (attemptIndex: number) => {\n      try {\n        await sleep(this.reconnectRetryDelay(attemptIndex));\n        if (this.allowReconnect) {\n          await this.activeConnection.close();\n          await this.activeConnection.open();\n\n          if (this.requestManager.hasPendingRequests()) {\n            this.send(\n              this.requestManager\n                .getPendingRequests()\n                .map(({ message }) => message),\n            );\n          }\n        }\n        this.reconnecting = null;\n      } catch {\n        await tryReconnect(attemptIndex + 1);\n      }\n    };\n\n    this.reconnecting = tryReconnect(0);\n  }\n\n  private setupWebSocketListeners(ws: WebSocket) {\n    const handleCloseOrError = (cause: unknown) => {\n      const reqs = this.requestManager.getPendingRequests();\n      for (const { message, callbacks } of reqs) {\n        if (message.method === 'subscription') continue;\n\n        callbacks.error(\n          TRPCClientError.from(\n            cause ??\n              new TRPCWebSocketClosedError({\n                message: 'WebSocket closed',\n                cause,\n              }),\n          ),\n        );\n        this.requestManager.delete(message.id);\n      }\n    };\n\n    ws.addEventListener('open', () => {\n      run(async () => {\n        if (this.lazyMode) {\n          this.inactivityTimeout.start();\n        }\n\n        this.callbacks.onOpen?.();\n\n        this.connectionState.next({\n          type: 'state',\n          state: 'pending',\n          error: null,\n        });\n      }).catch((error) => {\n        ws.close(3000);\n        handleCloseOrError(error);\n      });\n    });\n\n    ws.addEventListener('message', ({ data }) => {\n      this.inactivityTimeout.reset();\n\n      if (typeof data !== 'string' || ['PING', 'PONG'].includes(data)) return;\n\n      const incomingMessage = JSON.parse(data) as TRPCClientIncomingMessage;\n      if ('method' in incomingMessage) {\n        this.handleIncomingRequest(incomingMessage);\n        return;\n      }\n\n      this.handleResponseMessage(incomingMessage);\n    });\n\n    ws.addEventListener('close', (event) => {\n      handleCloseOrError(event);\n      this.callbacks.onClose?.(event);\n\n      if (!this.lazyMode || this.requestManager.hasPendingSubscriptions()) {\n        this.reconnect(\n          new TRPCWebSocketClosedError({\n            message: 'WebSocket closed',\n            cause: event,\n          }),\n        );\n      }\n    });\n\n    ws.addEventListener('error', (event) => {\n      handleCloseOrError(event);\n      this.callbacks.onError?.(event);\n\n      this.reconnect(\n        new TRPCWebSocketClosedError({\n          message: 'WebSocket closed',\n          cause: event,\n        }),\n      );\n    });\n  }\n\n  private handleResponseMessage(message: TRPCResponseMessage) {\n    const request = this.requestManager.getPendingRequest(message.id);\n    if (!request) return;\n\n    request.callbacks.next(message);\n\n    let completed = true;\n    if ('result' in message && request.message.method === 'subscription') {\n      if (message.result.type === 'data') {\n        request.message.params.lastEventId = message.result.id;\n      }\n\n      if (message.result.type !== 'stopped') {\n        completed = false;\n      }\n    }\n\n    if (completed) {\n      request.callbacks.complete();\n      this.requestManager.delete(message.id);\n    }\n  }\n\n  private handleIncomingRequest(message: TRPCClientIncomingRequest) {\n    if (message.method === 'reconnect') {\n      this.reconnect(\n        new TRPCWebSocketClosedError({\n          message: 'Server requested reconnect',\n        }),\n      );\n    }\n  }\n\n  /**\n   * Sends a message or batch of messages directly to the server.\n   */\n  private send(\n    messageOrMessages: TRPCClientOutgoingMessage | TRPCClientOutgoingMessage[],\n  ) {\n    if (!this.activeConnection.isOpen()) {\n      throw new Error('Active connection is not open');\n    }\n\n    const messages =\n      messageOrMessages instanceof Array\n        ? messageOrMessages\n        : [messageOrMessages];\n    this.activeConnection.ws.send(\n      JSON.stringify(messages.length === 1 ? messages[0] : messages),\n    );\n  }\n\n  /**\n   * Groups requests for batch sending.\n   *\n   * @returns A function to abort the batched request.\n   */\n  private batchSend(message: TRPCClientOutgoingMessage, callbacks: TCallbacks) {\n    this.inactivityTimeout.reset();\n\n    run(async () => {\n      if (!this.activeConnection.isOpen()) {\n        await this.open();\n      }\n      await sleep(0);\n\n      if (!this.requestManager.hasOutgoingRequests()) return;\n\n      this.send(this.requestManager.flush().map(({ message }) => message));\n    }).catch((err) => {\n      this.requestManager.delete(message.id);\n      callbacks.error(TRPCClientError.from(err));\n    });\n\n    return this.requestManager.register(message, callbacks);\n  }\n}\n","import type { WebSocketClientOptions } from './wsClient/options';\nimport { WsClient } from './wsClient/wsClient';\n\nexport function createWSClient(opts: WebSocketClientOptions) {\n  return new WsClient(opts);\n}\n\nexport type TRPCWebSocketClient = ReturnType<typeof createWSClient>;\n\nexport { WebSocketClientOptions };\n","import { observable } from '@trpc/server/observable';\nimport type {\n  AnyRouter,\n  inferClientTypes,\n} from '@trpc/server/unstable-core-do-not-import';\nimport type { TransformerOptions } from '../../unstable-internals';\nimport { getTransformer } from '../../unstable-internals';\nimport type { TRPCLink } from '../types';\nimport type {\n  TRPCWebSocketClient,\n  WebSocketClientOptions,\n} from './createWsClient';\nimport { createWSClient } from './createWsClient';\n\nexport type WebSocketLinkOptions<TRouter extends AnyRouter> = {\n  client: TRPCWebSocketClient;\n} & TransformerOptions<inferClientTypes<TRouter>>;\n\nexport function wsLink<TRouter extends AnyRouter>(\n  opts: WebSocketLinkOptions<TRouter>,\n): TRPCLink<TRouter> {\n  const { client } = opts;\n  const transformer = getTransformer(opts.transformer);\n  return () => {\n    return ({ op }) => {\n      return observable((observer) => {\n        const connStateSubscription =\n          op.type === 'subscription'\n            ? client.connectionState.subscribe({\n                next(result) {\n                  observer.next({\n                    result,\n                    context: op.context,\n                  });\n                },\n              })\n            : null;\n\n        const requestSubscription = client\n          .request({\n            op,\n            transformer,\n          })\n          .subscribe(observer);\n\n        return () => {\n          requestSubscription.unsubscribe();\n          connStateSubscription?.unsubscribe();\n        };\n      });\n    };\n  };\n}\n\nexport { TRPCWebSocketClient, WebSocketClientOptions, createWSClient };\n"],"names":["lazyDefaults: LazyOptions","keepAliveDefaults: KeepAliveOptions","attemptIndex: number","value: T | ((...args: TArgs) => T)","opts: { message: string; cause?: unknown }","onTimeout: () => void","timeoutMs: number","resolve: (value: T | PromiseLike<T>) => void","reject: (reason?: any) => void","urlOptions: UrlOptionsWithConnectionParams","connectionParams: CallbackOrValue<TRPCRequestInfo['connectionParams']>","message: TRPCConnectionParamsMessage","message: TRPCClientOutgoingMessage","callbacks: TCallbacks","messageId: MessageIdLike","ws: WebSocket","pingTimeout: ReturnType<typeof setTimeout> | undefined","pongTimeout: ReturnType<typeof setTimeout> | undefined","opts: WebSocketConnectionOptions","this","connection: WsConnection","opts: WebSocketClientOptions","this","requestsToAwait: Promise<void>[]","closedError: TRPCWebSocketClosedError","attemptIndex: number","ws: WebSocket","cause: unknown","message: TRPCResponseMessage","message: TRPCClientIncomingRequest","messageOrMessages: TRPCClientOutgoingMessage | TRPCClientOutgoingMessage[]","message: TRPCClientOutgoingMessage","callbacks: TCallbacks","message","opts: WebSocketClientOptions","opts: WebSocketLinkOptions<TRouter>"],"mappings":"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","debugId":null}},
    {"offset": {"line": 5233, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@trpc/server/dist/resolveResponse-DngSgha6.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/http/parseConnectionParams.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/http/contentType.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/http/abortError.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/vendor/is-plain-object.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/vendor/unpromise/unpromise.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/stream/utils/disposable.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/stream/utils/timerResource.ts","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/usingCtx.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/OverloadYield.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/awaitAsyncGenerator.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/wrapAsyncGenerator.js","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/stream/utils/asyncIterable.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/stream/utils/createDeferred.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/stream/utils/mergeAsyncIterables.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/stream/utils/readableStreamFrom.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/stream/utils/withPing.ts","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/asyncIterator.js","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/stream/jsonl.ts","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/asyncGeneratorDelegate.js","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/stream/sse.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/server/src/unstable-core-do-not-import/http/resolveResponse.ts"],"sourcesContent":["import { TRPCError } from '../error/TRPCError';\nimport { isObject } from '../utils';\nimport type { TRPCRequestInfo } from './types';\n\nexport function parseConnectionParamsFromUnknown(\n  parsed: unknown,\n): TRPCRequestInfo['connectionParams'] {\n  try {\n    if (parsed === null) {\n      return null;\n    }\n    if (!isObject(parsed)) {\n      throw new Error('Expected object');\n    }\n    const nonStringValues = Object.entries(parsed).filter(\n      ([_key, value]) => typeof value !== 'string',\n    );\n\n    if (nonStringValues.length > 0) {\n      throw new Error(\n        `Expected connectionParams to be string values. Got ${nonStringValues\n          .map(([key, value]) => `${key}: ${typeof value}`)\n          .join(', ')}`,\n      );\n    }\n    return parsed as Record<string, string>;\n  } catch (cause) {\n    throw new TRPCError({\n      code: 'PARSE_ERROR',\n      message: 'Invalid connection params shape',\n      cause,\n    });\n  }\n}\nexport function parseConnectionParamsFromString(\n  str: string,\n): TRPCRequestInfo['connectionParams'] {\n  let parsed: unknown;\n  try {\n    parsed = JSON.parse(str);\n  } catch (cause) {\n    throw new TRPCError({\n      code: 'PARSE_ERROR',\n      message: 'Not JSON-parsable query params',\n      cause,\n    });\n  }\n  return parseConnectionParamsFromUnknown(parsed);\n}\n","import { TRPCError } from '../error/TRPCError';\nimport type { ProcedureType } from '../procedure';\nimport { getProcedureAtPath, type AnyRouter } from '../router';\nimport { isObject } from '../utils';\nimport { parseConnectionParamsFromString } from './parseConnectionParams';\nimport type { TRPCAcceptHeader, TRPCRequestInfo } from './types';\n\ntype GetRequestInfoOptions = {\n  path: string;\n  req: Request;\n  url: URL | null;\n  searchParams: URLSearchParams;\n  headers: Headers;\n  router: AnyRouter;\n};\n\ntype ContentTypeHandler = {\n  isMatch: (opts: Request) => boolean;\n  parse: (opts: GetRequestInfoOptions) => Promise<TRPCRequestInfo>;\n};\n\n/**\n * Memoize a function that takes no arguments\n * @internal\n */\nfunction memo<TReturn>(fn: () => Promise<TReturn>) {\n  let promise: Promise<TReturn> | null = null;\n  const sym = Symbol.for('@trpc/server/http/memo');\n  let value: TReturn | typeof sym = sym;\n  return {\n    /**\n     * Lazily read the value\n     */\n    read: async (): Promise<TReturn> => {\n      if (value !== sym) {\n        return value;\n      }\n\n      // dedupes promises and catches errors\n      promise ??= fn().catch((cause) => {\n        if (cause instanceof TRPCError) {\n          throw cause;\n        }\n        throw new TRPCError({\n          code: 'BAD_REQUEST',\n          message: cause instanceof Error ? cause.message : 'Invalid input',\n          cause,\n        });\n      });\n\n      value = await promise;\n      promise = null;\n\n      return value;\n    },\n    /**\n     * Get an already stored result\n     */\n    result: (): TReturn | undefined => {\n      return value !== sym ? value : undefined;\n    },\n  };\n}\n\nconst jsonContentTypeHandler: ContentTypeHandler = {\n  isMatch(req) {\n    return !!req.headers.get('content-type')?.startsWith('application/json');\n  },\n  async parse(opts) {\n    const { req } = opts;\n    const isBatchCall = opts.searchParams.get('batch') === '1';\n    const paths = isBatchCall ? opts.path.split(',') : [opts.path];\n\n    type InputRecord = Record<number, unknown>;\n    const getInputs = memo(async (): Promise<InputRecord> => {\n      let inputs: unknown = undefined;\n      if (req.method === 'GET') {\n        const queryInput = opts.searchParams.get('input');\n        if (queryInput) {\n          inputs = JSON.parse(queryInput);\n        }\n      } else {\n        inputs = await req.json();\n      }\n      if (inputs === undefined) {\n        return {};\n      }\n\n      if (!isBatchCall) {\n        return {\n          0: opts.router._def._config.transformer.input.deserialize(inputs),\n        };\n      }\n\n      if (!isObject(inputs)) {\n        throw new TRPCError({\n          code: 'BAD_REQUEST',\n          message: '\"input\" needs to be an object when doing a batch call',\n        });\n      }\n      const acc: InputRecord = {};\n      for (const index of paths.keys()) {\n        const input = inputs[index];\n        if (input !== undefined) {\n          acc[index] =\n            opts.router._def._config.transformer.input.deserialize(input);\n        }\n      }\n\n      return acc;\n    });\n\n    const calls = await Promise.all(\n      paths.map(\n        async (path, index): Promise<TRPCRequestInfo['calls'][number]> => {\n          const procedure = await getProcedureAtPath(opts.router, path);\n          return {\n            path,\n            procedure,\n            getRawInput: async () => {\n              const inputs = await getInputs.read();\n              let input = inputs[index];\n\n              if (procedure?._def.type === 'subscription') {\n                const lastEventId =\n                  opts.headers.get('last-event-id') ??\n                  opts.searchParams.get('lastEventId') ??\n                  opts.searchParams.get('Last-Event-Id');\n\n                if (lastEventId) {\n                  if (isObject(input)) {\n                    input = {\n                      ...input,\n                      lastEventId: lastEventId,\n                    };\n                  } else {\n                    input ??= {\n                      lastEventId: lastEventId,\n                    };\n                  }\n                }\n              }\n              return input;\n            },\n            result: () => {\n              return getInputs.result()?.[index];\n            },\n          };\n        },\n      ),\n    );\n\n    const types = new Set(\n      calls.map((call) => call.procedure?._def.type).filter(Boolean),\n    );\n\n    /* istanbul ignore if -- @preserve */\n    if (types.size > 1) {\n      throw new TRPCError({\n        code: 'BAD_REQUEST',\n        message: `Cannot mix procedure types in call: ${Array.from(types).join(\n          ', ',\n        )}`,\n      });\n    }\n    const type: ProcedureType | 'unknown' =\n      types.values().next().value ?? 'unknown';\n\n    const connectionParamsStr = opts.searchParams.get('connectionParams');\n\n    const info: TRPCRequestInfo = {\n      isBatchCall,\n      accept: req.headers.get('trpc-accept') as TRPCAcceptHeader | null,\n      calls,\n      type,\n      connectionParams:\n        connectionParamsStr === null\n          ? null\n          : parseConnectionParamsFromString(connectionParamsStr),\n      signal: req.signal,\n      url: opts.url,\n    };\n    return info;\n  },\n};\n\nconst formDataContentTypeHandler: ContentTypeHandler = {\n  isMatch(req) {\n    return !!req.headers.get('content-type')?.startsWith('multipart/form-data');\n  },\n  async parse(opts) {\n    const { req } = opts;\n    if (req.method !== 'POST') {\n      throw new TRPCError({\n        code: 'METHOD_NOT_SUPPORTED',\n        message:\n          'Only POST requests are supported for multipart/form-data requests',\n      });\n    }\n    const getInputs = memo(async () => {\n      const fd = await req.formData();\n      return fd;\n    });\n    const procedure = await getProcedureAtPath(opts.router, opts.path);\n    return {\n      accept: null,\n      calls: [\n        {\n          path: opts.path,\n          getRawInput: getInputs.read,\n          result: getInputs.result,\n          procedure,\n        },\n      ],\n      isBatchCall: false,\n      type: 'mutation',\n      connectionParams: null,\n      signal: req.signal,\n      url: opts.url,\n    };\n  },\n};\n\nconst octetStreamContentTypeHandler: ContentTypeHandler = {\n  isMatch(req) {\n    return !!req.headers\n      .get('content-type')\n      ?.startsWith('application/octet-stream');\n  },\n  async parse(opts) {\n    const { req } = opts;\n    if (req.method !== 'POST') {\n      throw new TRPCError({\n        code: 'METHOD_NOT_SUPPORTED',\n        message:\n          'Only POST requests are supported for application/octet-stream requests',\n      });\n    }\n    const getInputs = memo(async () => {\n      return req.body;\n    });\n    return {\n      calls: [\n        {\n          path: opts.path,\n          getRawInput: getInputs.read,\n          result: getInputs.result,\n          procedure: await getProcedureAtPath(opts.router, opts.path),\n        },\n      ],\n      isBatchCall: false,\n      accept: null,\n      type: 'mutation',\n      connectionParams: null,\n      signal: req.signal,\n      url: opts.url,\n    };\n  },\n};\n\nconst handlers = [\n  jsonContentTypeHandler,\n  formDataContentTypeHandler,\n  octetStreamContentTypeHandler,\n];\n\nfunction getContentTypeHandler(req: Request): ContentTypeHandler {\n  const handler = handlers.find((handler) => handler.isMatch(req));\n  if (handler) {\n    return handler;\n  }\n\n  if (!handler && req.method === 'GET') {\n    // fallback to JSON for get requests so GET-requests can be opened in browser easily\n    return jsonContentTypeHandler;\n  }\n\n  throw new TRPCError({\n    code: 'UNSUPPORTED_MEDIA_TYPE',\n    message: req.headers.has('content-type')\n      ? `Unsupported content-type \"${req.headers.get('content-type')}`\n      : 'Missing content-type header',\n  });\n}\n\nexport async function getRequestInfo(\n  opts: GetRequestInfoOptions,\n): Promise<TRPCRequestInfo> {\n  const handler = getContentTypeHandler(opts.req);\n  return await handler.parse(opts);\n}\n","import { isObject } from '../utils';\n\nexport function isAbortError(\n  error: unknown,\n): error is DOMException | Error | { name: 'AbortError' } {\n  return isObject(error) && error['name'] === 'AbortError';\n}\n\nexport function throwAbortError(message = 'AbortError'): never {\n  throw new DOMException(message, 'AbortError');\n}\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o: unknown): o is Record<string, unknown> {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n  \nexport function isPlainObject(o: unknown): o is Record<string, unknown> {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n","/* eslint-disable @typescript-eslint/unbound-method */\n \n \n\nimport type {\n  PromiseExecutor,\n  PromiseWithResolvers,\n  ProxyPromise,\n  SubscribedPromise,\n} from \"./types\";\n\n/** Memory safe (weakmapped) cache of the ProxyPromise for each Promise,\n * which is retained for the lifetime of the original Promise.\n */\nconst subscribableCache = new WeakMap<\n  PromiseLike<unknown>,\n  ProxyPromise<unknown>\n>();\n\n/** A NOOP function allowing a consistent interface for settled\n * SubscribedPromises (settled promises are not subscribed - they resolve\n * immediately). */\nconst NOOP = () => {\n  // noop\n};\n\n/**\n * Every `Promise<T>` can be shadowed by a single `ProxyPromise<T>`. It is\n * created once, cached and reused throughout the lifetime of the Promise. Get a\n * Promise's ProxyPromise using `Unpromise.proxy(promise)`.\n *\n * The `ProxyPromise<T>` attaches handlers to the original `Promise<T>`\n * `.then()` and `.catch()` just once. Promises derived from it use a\n * subscription- (and unsubscription-) based mechanism that monitors these\n * handlers.\n *\n * Every time you call `.subscribe()`, `.then()` `.catch()` or `.finally()` on a\n * `ProxyPromise<T>` it returns a `SubscribedPromise<T>` having an additional\n * `unsubscribe()` method. Calling `unsubscribe()` detaches reference chains\n * from the original, potentially long-lived Promise, eliminating memory leaks.\n *\n * This approach can eliminate the memory leaks that otherwise come about from\n * repeated `race()` or `any()` calls invoking `.then()` and `.catch()` multiple\n * times on the same long-lived native Promise (subscriptions which can never be\n * cleaned up).\n *\n * `Unpromise.race(promises)` is a reference implementation of `Promise.race`\n * avoiding memory leaks when using long-lived unsettled Promises.\n *\n * `Unpromise.any(promises)` is a reference implementation of `Promise.any`\n * avoiding memory leaks when using long-lived unsettled Promises.\n *\n * `Unpromise.resolve(promise)` returns an ephemeral `SubscribedPromise<T>` for\n * any given `Promise<T>` facilitating arbitrary async/await patterns. Behind\n * the scenes, `resolve` is implemented simply as\n * `Unpromise.proxy(promise).subscribe()`. Don't forget to call `.unsubscribe()`\n * to tidy up!\n *\n */\nexport class Unpromise<T> implements ProxyPromise<T> {\n  /** INSTANCE IMPLEMENTATION */\n\n  /** The promise shadowed by this Unpromise<T>  */\n  protected readonly promise: Promise<T> | PromiseLike<T>;\n\n  /** Promises expecting eventual settlement (unless unsubscribed first). This list is deleted\n   * after the original promise settles - no further notifications will be issued. */\n  protected subscribers: ReadonlyArray<PromiseWithResolvers<T>> | null = [];\n\n  /** The Promise's settlement (recorded when it fulfils or rejects). This is consulted when\n   * calling .subscribe() .then() .catch() .finally() to see if an immediately-resolving Promise\n   * can be returned, and therefore subscription can be bypassed. */\n  protected settlement: PromiseSettledResult<T> | null = null;\n\n  /** Constructor accepts a normal Promise executor function like `new\n   * Unpromise((resolve, reject) => {...})` or accepts a pre-existing Promise\n   * like `new Unpromise(existingPromise)`. Adds `.then()` and `.catch()`\n   * handlers to the Promise. These handlers pass fulfilment and rejection\n   * notifications to downstream subscribers and maintains records of value\n   * or error if the Promise ever settles. */\n  protected constructor(promise: Promise<T>);\n  protected constructor(promise: PromiseLike<T>);\n  protected constructor(executor: PromiseExecutor<T>);\n  protected constructor(arg: Promise<T> | PromiseLike<T> | PromiseExecutor<T>) {\n    // handle either a Promise or a Promise executor function\n    if (typeof arg === \"function\") {\n      this.promise = new Promise(arg);\n    } else {\n      this.promise = arg;\n    }\n\n    // subscribe for eventual fulfilment and rejection\n\n    // handle PromiseLike objects (that at least have .then)\n    const thenReturn = this.promise.then((value) => {\n      // atomically record fulfilment and detach subscriber list\n      const { subscribers } = this;\n      this.subscribers = null;\n      this.settlement = {\n        status: \"fulfilled\",\n        value,\n      };\n      // notify fulfilment to subscriber list\n      subscribers?.forEach(({ resolve }) => {\n        resolve(value);\n      });\n    });\n\n    // handle Promise (that also have a .catch behaviour)\n    if (\"catch\" in thenReturn) {\n      thenReturn.catch((reason) => {\n        // atomically record rejection and detach subscriber list\n        const { subscribers } = this;\n        this.subscribers = null;\n        this.settlement = {\n          status: \"rejected\",\n          reason,\n        };\n        // notify rejection to subscriber list\n        subscribers?.forEach(({ reject }) => {\n          reject(reason);\n        });\n      });\n    }\n  }\n\n  /** Create a promise that mitigates uncontrolled subscription to a long-lived\n   * Promise via .then() and .catch() - otherwise a source of memory leaks.\n   *\n   * The returned promise has an `unsubscribe()` method which can be called when\n   * the Promise is no longer being tracked by application logic, and which\n   * ensures that there is no reference chain from the original promise to the\n   * new one, and therefore no memory leak.\n   *\n   * If original promise has not yet settled, this adds a new unique promise\n   * that listens to then/catch events, along with an `unsubscribe()` method to\n   * detach it.\n   *\n   * If original promise has settled, then creates a new Promise.resolve() or\n   * Promise.reject() and provided unsubscribe is a noop.\n   *\n   * If you call `unsubscribe()` before the returned Promise has settled, it\n   * will never settle.\n   */\n  subscribe(): SubscribedPromise<T> {\n    // in all cases we will combine some promise with its unsubscribe function\n    let promise: Promise<T>;\n    let unsubscribe: () => void;\n\n    const { settlement } = this;\n    if (settlement === null) {\n      // not yet settled - subscribe new promise. Expect eventual settlement\n      if (this.subscribers === null) {\n        // invariant - it is not settled, so it must have subscribers\n        throw new Error(\"Unpromise settled but still has subscribers\");\n      }\n      const subscriber = withResolvers<T>();\n      this.subscribers = listWithMember(this.subscribers, subscriber);\n      promise = subscriber.promise;\n      unsubscribe = () => {\n        if (this.subscribers !== null) {\n          this.subscribers = listWithoutMember(this.subscribers, subscriber);\n        }\n      };\n    } else {\n      // settled - don't create subscribed promise. Just resolve or reject\n      const { status } = settlement;\n      if (status === \"fulfilled\") {\n        promise = Promise.resolve(settlement.value);\n      } else {\n        promise = Promise.reject(settlement.reason);\n      }\n      unsubscribe = NOOP;\n    }\n\n    // extend promise signature with the extra method\n    return Object.assign(promise, { unsubscribe });\n  }\n\n  /** STANDARD PROMISE METHODS (but returning a SubscribedPromise) */\n\n  then<TResult1 = T, TResult2 = never>(\n    onfulfilled?:\n      | ((value: T) => TResult1 | PromiseLike<TResult1>)\n      | null\n       ,\n    onrejected?:\n      | ((reason: any) => TResult2 | PromiseLike<TResult2>)\n      | null\n       \n  ): SubscribedPromise<TResult1 | TResult2> {\n    const subscribed = this.subscribe();\n    const { unsubscribe } = subscribed;\n    return Object.assign(subscribed.then(onfulfilled, onrejected), {\n      unsubscribe,\n    });\n  }\n\n  catch<TResult = never>(\n    onrejected?:\n      | ((reason: any) => TResult | PromiseLike<TResult>)\n      | null\n       \n  ): SubscribedPromise<T | TResult> {\n    const subscribed = this.subscribe();\n    const { unsubscribe } = subscribed;\n    return Object.assign(subscribed.catch(onrejected), {\n      unsubscribe,\n    });\n  }\n\n  finally(onfinally?: (() => void) | null  ): SubscribedPromise<T> {\n    const subscribed = this.subscribe();\n    const { unsubscribe } = subscribed;\n    return Object.assign(subscribed.finally(onfinally), {\n      unsubscribe,\n    });\n  }\n\n  /** TOSTRING SUPPORT */\n\n  readonly [Symbol.toStringTag] = \"Unpromise\";\n\n  /** Unpromise STATIC METHODS */\n\n  /** Create or Retrieve the proxy Unpromise (a re-used Unpromise for the VM lifetime\n   * of the provided Promise reference) */\n  static proxy<T>(promise: PromiseLike<T>): ProxyPromise<T> {\n    const cached = Unpromise.getSubscribablePromise(promise);\n    return typeof cached !== \"undefined\"\n      ? cached\n      : Unpromise.createSubscribablePromise(promise);\n  }\n\n  /** Create and store an Unpromise keyed by an original Promise. */\n  protected static createSubscribablePromise<T>(promise: PromiseLike<T>) {\n    const created = new Unpromise<T>(promise);\n    subscribableCache.set(promise, created as Unpromise<unknown>); // resolve promise to unpromise\n    subscribableCache.set(created, created as Unpromise<unknown>); // resolve the unpromise to itself\n    return created;\n  }\n\n  /** Retrieve a previously-created Unpromise keyed by an original Promise. */\n  protected static getSubscribablePromise<T>(promise: PromiseLike<T>) {\n    return subscribableCache.get(promise) as ProxyPromise<T> | undefined;\n  }\n\n  /** Promise STATIC METHODS */\n\n  /** Lookup the Unpromise for this promise, and derive a SubscribedPromise from\n   * it (that can be later unsubscribed to eliminate Memory leaks) */\n  static resolve<T>(value: T | PromiseLike<T>) {\n    const promise: PromiseLike<T> =\n      typeof value === \"object\" &&\n      value !== null &&\n      \"then\" in value &&\n      typeof value.then === \"function\"\n        ? value\n        : Promise.resolve(value);\n    return Unpromise.proxy(promise).subscribe() as SubscribedPromise<\n      Awaited<T>\n    >;\n  }\n\n  /** Perform Promise.any() via SubscribedPromises, then unsubscribe them.\n   * Equivalent to Promise.any but eliminates memory leaks from long-lived\n   * promises accumulating .then() and .catch() subscribers. */\n  static async any<T extends readonly unknown[] | []>(\n    values: T\n  ): Promise<Awaited<T[number]>>;\n  static async any<T>(\n    values: Iterable<T | PromiseLike<T>>\n  ): Promise<Awaited<T>> {\n    const valuesArray = Array.isArray(values) ? values : [...values];\n    const subscribedPromises = valuesArray.map(Unpromise.resolve);\n    try {\n      return await Promise.any(subscribedPromises);\n    } finally {\n      subscribedPromises.forEach(({ unsubscribe }) => {\n        unsubscribe();\n      });\n    }\n  }\n\n  /** Perform Promise.race via SubscribedPromises, then unsubscribe them.\n   * Equivalent to Promise.race but eliminates memory leaks from long-lived\n   * promises accumulating .then() and .catch() subscribers. */\n  static async race<T extends readonly unknown[] | []>(\n    values: T\n  ): Promise<Awaited<T[number]>>;\n  static async race<T>(\n    values: Iterable<T | PromiseLike<T>>\n  ): Promise<Awaited<T>> {\n    const valuesArray = Array.isArray(values) ? values : [...values];\n    const subscribedPromises = valuesArray.map(Unpromise.resolve);\n    try {\n      return await Promise.race(subscribedPromises);\n    } finally {\n      subscribedPromises.forEach(({ unsubscribe }) => {\n        unsubscribe();\n      });\n    }\n  }\n\n  /** Create a race of SubscribedPromises that will fulfil to a single winning\n   * Promise (in a 1-Tuple). Eliminates memory leaks from long-lived promises\n   * accumulating .then() and .catch() subscribers. Allows simple logic to\n   * consume the result, like...\n   * ```ts\n   * const [ winner ] = await Unpromise.race([ promiseA, promiseB ]);\n   * if(winner === promiseB){\n   *   const result = await promiseB;\n   *   // do the thing\n   * }\n   * ```\n   * */\n  static async raceReferences<TPromise extends Promise<unknown>>(\n    promises: readonly TPromise[]\n  ) {\n    // map each promise to an eventual 1-tuple containing itself\n    const selfPromises = promises.map(resolveSelfTuple);\n\n    // now race them. They will fulfil to a readonly [P] or reject.\n    try {\n      return await Promise.race(selfPromises);\n    } finally {\n      for (const promise of selfPromises) {\n        // unsubscribe proxy promises when the race is over to mitigate memory leaks\n        promise.unsubscribe();\n      }\n    }\n  }\n}\n\n/** Promises a 1-tuple containing the original promise when it resolves. Allows\n * awaiting the eventual Promise ***reference*** (easy to destructure and\n * exactly compare with ===). Avoids resolving to the Promise ***value*** (which\n * may be ambiguous and therefore hard to identify as the winner of a race).\n * You can call unsubscribe on the Promise to mitigate memory leaks.\n * */\nexport function resolveSelfTuple<TPromise extends Promise<unknown>>(\n  promise: TPromise\n): SubscribedPromise<readonly [TPromise]> {\n  return Unpromise.proxy(promise).then(() => [promise] as const);\n}\n\n/** VENDORED (Future) PROMISE UTILITIES */\n\n/** Reference implementation of https://github.com/tc39/proposal-promise-with-resolvers */\nfunction withResolvers<T>(): PromiseWithResolvers<T> {\n  let resolve!: PromiseWithResolvers<T>[\"resolve\"];\n  let reject!: PromiseWithResolvers<T>[\"reject\"];\n  const promise = new Promise<T>((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  return {\n    promise,\n    resolve,\n    reject,\n  };\n}\n\n/** IMMUTABLE LIST OPERATIONS */\n\nfunction listWithMember<T>(arr: readonly T[], member: T): readonly T[] {\n  return [...arr, member];\n}\n\nfunction listWithoutIndex<T>(arr: readonly T[], index: number) {\n  return [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n\nfunction listWithoutMember<T>(arr: readonly T[], member: unknown) {\n  const index = arr.indexOf(member as T);\n  if (index !== -1) {\n    return listWithoutIndex(arr, index);\n  }\n  return arr;\n}\n","// @ts-expect-error - polyfilling symbol\n// eslint-disable-next-line no-restricted-syntax\nSymbol.dispose ??= Symbol();\n\n// @ts-expect-error - polyfilling symbol\n// eslint-disable-next-line no-restricted-syntax\nSymbol.asyncDispose ??= Symbol();\n\n/**\n * Takes a value and a dispose function and returns a new object that implements the Disposable interface.\n * The returned object is the original value augmented with a Symbol.dispose method.\n * @param thing The value to make disposable\n * @param dispose Function to call when disposing the resource\n * @returns The original value with Symbol.dispose method added\n */\nexport function makeResource<T>(thing: T, dispose: () => void): T & Disposable {\n  const it = thing as T & Partial<Disposable>;\n\n  // eslint-disable-next-line no-restricted-syntax\n  const existing = it[Symbol.dispose];\n\n  // eslint-disable-next-line no-restricted-syntax\n  it[Symbol.dispose] = () => {\n    dispose();\n    existing?.();\n  };\n\n  return it as T & Disposable;\n}\n\n/**\n * Takes a value and an async dispose function and returns a new object that implements the AsyncDisposable interface.\n * The returned object is the original value augmented with a Symbol.asyncDispose method.\n * @param thing The value to make async disposable\n * @param dispose Async function to call when disposing the resource\n * @returns The original value with Symbol.asyncDispose method added\n */\nexport function makeAsyncResource<T>(\n  thing: T,\n  dispose: () => Promise<void>,\n): T & AsyncDisposable {\n  const it = thing as T & Partial<AsyncDisposable>;\n\n  // eslint-disable-next-line no-restricted-syntax\n  const existing = it[Symbol.asyncDispose];\n\n  // eslint-disable-next-line no-restricted-syntax\n  it[Symbol.asyncDispose] = async () => {\n    await dispose();\n    await existing?.();\n  };\n\n  return it as T & AsyncDisposable;\n}\n","import { makeResource } from './disposable';\n\nexport const disposablePromiseTimerResult = Symbol();\n\nexport function timerResource(ms: number) {\n  let timer: ReturnType<typeof setTimeout> | null = null;\n\n  return makeResource(\n    {\n      start() {\n        if (timer) {\n          throw new Error('Timer already started');\n        }\n\n        const promise = new Promise<typeof disposablePromiseTimerResult>(\n          (resolve) => {\n            timer = setTimeout(() => resolve(disposablePromiseTimerResult), ms);\n          },\n        );\n        return promise;\n      },\n    },\n    () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    },\n  );\n}\n","function _usingCtx() {\n  var r = \"function\" == typeof SuppressedError ? SuppressedError : function (r, e) {\n      var n = Error();\n      return n.name = \"SuppressedError\", n.error = r, n.suppressed = e, n;\n    },\n    e = {},\n    n = [];\n  function using(r, e) {\n    if (null != e) {\n      if (Object(e) !== e) throw new TypeError(\"using declarations can only be used with objects, functions, null, or undefined.\");\n      if (r) var o = e[Symbol.asyncDispose || Symbol[\"for\"](\"Symbol.asyncDispose\")];\n      if (void 0 === o && (o = e[Symbol.dispose || Symbol[\"for\"](\"Symbol.dispose\")], r)) var t = o;\n      if (\"function\" != typeof o) throw new TypeError(\"Object is not disposable.\");\n      t && (o = function o() {\n        try {\n          t.call(e);\n        } catch (r) {\n          return Promise.reject(r);\n        }\n      }), n.push({\n        v: e,\n        d: o,\n        a: r\n      });\n    } else r && n.push({\n      d: e,\n      a: r\n    });\n    return e;\n  }\n  return {\n    e: e,\n    u: using.bind(null, !1),\n    a: using.bind(null, !0),\n    d: function d() {\n      var o,\n        t = this.e,\n        s = 0;\n      function next() {\n        for (; o = n.pop();) try {\n          if (!o.a && 1 === s) return s = 0, n.push(o), Promise.resolve().then(next);\n          if (o.d) {\n            var r = o.d.call(o.v);\n            if (o.a) return s |= 2, Promise.resolve(r).then(next, err);\n          } else s |= 1;\n        } catch (r) {\n          return err(r);\n        }\n        if (1 === s) return t !== e ? Promise.reject(t) : Promise.resolve();\n        if (t !== e) throw t;\n      }\n      function err(n) {\n        return t = t !== e ? new r(n, t) : n, next();\n      }\n      return next();\n    }\n  };\n}\nmodule.exports = _usingCtx, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _OverloadYield(e, d) {\n  this.v = e, this.k = d;\n}\nmodule.exports = _OverloadYield, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var OverloadYield = require(\"./OverloadYield.js\");\nfunction _awaitAsyncGenerator(e) {\n  return new OverloadYield(e, 0);\n}\nmodule.exports = _awaitAsyncGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var OverloadYield = require(\"./OverloadYield.js\");\nfunction _wrapAsyncGenerator(e) {\n  return function () {\n    return new AsyncGenerator(e.apply(this, arguments));\n  };\n}\nfunction AsyncGenerator(e) {\n  var r, t;\n  function resume(r, t) {\n    try {\n      var n = e[r](t),\n        o = n.value,\n        u = o instanceof OverloadYield;\n      Promise.resolve(u ? o.v : o).then(function (t) {\n        if (u) {\n          var i = \"return\" === r ? \"return\" : \"next\";\n          if (!o.k || t.done) return resume(i, t);\n          t = e[i](t).value;\n        }\n        settle(n.done ? \"return\" : \"normal\", t);\n      }, function (e) {\n        resume(\"throw\", e);\n      });\n    } catch (e) {\n      settle(\"throw\", e);\n    }\n  }\n  function settle(e, n) {\n    switch (e) {\n      case \"return\":\n        r.resolve({\n          value: n,\n          done: !0\n        });\n        break;\n      case \"throw\":\n        r.reject(n);\n        break;\n      default:\n        r.resolve({\n          value: n,\n          done: !1\n        });\n    }\n    (r = r.next) ? resume(r.key, r.arg) : t = null;\n  }\n  this._invoke = function (e, n) {\n    return new Promise(function (o, u) {\n      var i = {\n        key: e,\n        arg: n,\n        resolve: o,\n        reject: u,\n        next: null\n      };\n      t ? t = t.next = i : (r = t = i, resume(e, n));\n    });\n  }, \"function\" != typeof e[\"return\"] && (this[\"return\"] = void 0);\n}\nAsyncGenerator.prototype[\"function\" == typeof Symbol && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n}, AsyncGenerator.prototype.next = function (e) {\n  return this._invoke(\"next\", e);\n}, AsyncGenerator.prototype[\"throw\"] = function (e) {\n  return this._invoke(\"throw\", e);\n}, AsyncGenerator.prototype[\"return\"] = function (e) {\n  return this._invoke(\"return\", e);\n};\nmodule.exports = _wrapAsyncGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { Unpromise } from '../../../vendor/unpromise';\nimport { throwAbortError } from '../../http/abortError';\nimport { makeAsyncResource } from './disposable';\nimport { disposablePromiseTimerResult, timerResource } from './timerResource';\n\nexport function iteratorResource<TYield, TReturn, TNext>(\n  iterable: AsyncIterable<TYield, TReturn, TNext>,\n): AsyncIterator<TYield, TReturn, TNext> & AsyncDisposable {\n  const iterator = iterable[Symbol.asyncIterator]();\n\n  // @ts-expect-error - this is added in node 24 which we don't officially support yet\n  // eslint-disable-next-line no-restricted-syntax\n  if (iterator[Symbol.asyncDispose]) {\n    return iterator as AsyncIterator<TYield, TReturn, TNext> & AsyncDisposable;\n  }\n\n  return makeAsyncResource(iterator, async () => {\n    await iterator.return?.();\n  });\n}\n/**\n * Derives a new {@link AsyncGenerator} based on {@link iterable}, that automatically aborts after the specified duration.\n */\nexport async function* withMaxDuration<T>(\n  iterable: AsyncIterable<T>,\n  opts: { maxDurationMs: number },\n): AsyncGenerator<T> {\n  await using iterator = iteratorResource(iterable);\n\n  using timer = timerResource(opts.maxDurationMs);\n\n  const timerPromise = timer.start();\n\n  // declaration outside the loop for garbage collection reasons\n  let result: null | IteratorResult<T> | typeof disposablePromiseTimerResult;\n\n  while (true) {\n    result = await Unpromise.race([iterator.next(), timerPromise]);\n    if (result === disposablePromiseTimerResult) {\n      // cancelled due to timeout\n      throwAbortError();\n    }\n    if (result.done) {\n      return result;\n    }\n    yield result.value;\n    // free up reference for garbage collection\n    result = null;\n  }\n}\n\n/**\n * Derives a new {@link AsyncGenerator} based of {@link iterable}, that yields its first\n * {@link count} values. Then, a grace period of {@link gracePeriodMs} is started in which further\n * values may still come through. After this period, the generator aborts.\n */\nexport async function* takeWithGrace<T>(\n  iterable: AsyncIterable<T>,\n  opts: {\n    count: number;\n    gracePeriodMs: number;\n  },\n): AsyncGenerator<T> {\n  await using iterator = iteratorResource(iterable);\n\n  // declaration outside the loop for garbage collection reasons\n  let result: null | IteratorResult<T> | typeof disposablePromiseTimerResult;\n\n  using timer = timerResource(opts.gracePeriodMs);\n\n  let count = opts.count;\n\n  let timerPromise = new Promise<typeof disposablePromiseTimerResult>(() => {\n    // never resolves\n  });\n\n  while (true) {\n    result = await Unpromise.race([iterator.next(), timerPromise]);\n    if (result === disposablePromiseTimerResult) {\n      throwAbortError();\n    }\n    if (result.done) {\n      return result.value;\n    }\n    yield result.value;\n    if (--count === 0) {\n      timerPromise = timer.start();\n    }\n    // free up reference for garbage collection\n    result = null;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nexport function createDeferred<TValue = void>() {\n  let resolve: (value: TValue) => void;\n  let reject: (error: unknown) => void;\n  const promise = new Promise<TValue>((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n\n  return { promise, resolve: resolve!, reject: reject! };\n}\nexport type Deferred<TValue> = ReturnType<typeof createDeferred<TValue>>;\n","import { createDeferred } from './createDeferred';\nimport { makeAsyncResource } from './disposable';\n\ntype ManagedIteratorResult<TYield, TReturn> =\n  | { status: 'yield'; value: TYield }\n  | { status: 'return'; value: TReturn }\n  | { status: 'error'; error: unknown };\nfunction createManagedIterator<TYield, TReturn>(\n  iterable: AsyncIterable<TYield, TReturn>,\n  onResult: (result: ManagedIteratorResult<TYield, TReturn>) => void,\n) {\n  const iterator = iterable[Symbol.asyncIterator]();\n  let state: 'idle' | 'pending' | 'done' = 'idle';\n\n  function cleanup() {\n    state = 'done';\n    onResult = () => {\n      // noop\n    };\n  }\n\n  function pull() {\n    if (state !== 'idle') {\n      return;\n    }\n    state = 'pending';\n\n    const next = iterator.next();\n    next\n      .then((result) => {\n        if (result.done) {\n          state = 'done';\n          onResult({ status: 'return', value: result.value });\n          cleanup();\n          return;\n        }\n        state = 'idle';\n        onResult({ status: 'yield', value: result.value });\n      })\n      .catch((cause) => {\n        onResult({ status: 'error', error: cause });\n        cleanup();\n      });\n  }\n\n  return {\n    pull,\n    destroy: async () => {\n      cleanup();\n      await iterator.return?.();\n    },\n  };\n}\ntype ManagedIterator<TYield, TReturn> = ReturnType<\n  typeof createManagedIterator<TYield, TReturn>\n>;\n\ninterface MergedAsyncIterables<TYield>\n  extends AsyncIterable<TYield, void, unknown> {\n  add(iterable: AsyncIterable<TYield>): void;\n}\n\n/**\n * Creates a new async iterable that merges multiple async iterables into a single stream.\n * Values from the input iterables are yielded in the order they resolve, similar to Promise.race().\n *\n * New iterables can be added dynamically using the returned {@link MergedAsyncIterables.add} method, even after iteration has started.\n *\n * If any of the input iterables throws an error, that error will be propagated through the merged stream.\n * Other iterables will not continue to be processed.\n *\n * @template TYield The type of values yielded by the input iterables\n */\nexport function mergeAsyncIterables<TYield>(): MergedAsyncIterables<TYield> {\n  let state: 'idle' | 'pending' | 'done' = 'idle';\n  let flushSignal = createDeferred();\n\n  /**\n   * used while {@link state} is `idle`\n   */\n  const iterables: AsyncIterable<TYield, void, unknown>[] = [];\n  /**\n   * used while {@link state} is `pending`\n   */\n  const iterators = new Set<ManagedIterator<TYield, void>>();\n\n  const buffer: Array<\n    [\n      iterator: ManagedIterator<TYield, void>,\n      result: Exclude<\n        ManagedIteratorResult<TYield, void>,\n        { status: 'return' }\n      >,\n    ]\n  > = [];\n\n  function initIterable(iterable: AsyncIterable<TYield, void, unknown>) {\n    if (state !== 'pending') {\n      // shouldn't happen\n      return;\n    }\n    const iterator = createManagedIterator(iterable, (result) => {\n      if (state !== 'pending') {\n        // shouldn't happen\n        return;\n      }\n      switch (result.status) {\n        case 'yield':\n          buffer.push([iterator, result]);\n          break;\n        case 'return':\n          iterators.delete(iterator);\n          break;\n        case 'error':\n          buffer.push([iterator, result]);\n          iterators.delete(iterator);\n          break;\n      }\n      flushSignal.resolve();\n    });\n    iterators.add(iterator);\n    iterator.pull();\n  }\n\n  return {\n    add(iterable: AsyncIterable<TYield, void, unknown>) {\n      switch (state) {\n        case 'idle':\n          iterables.push(iterable);\n          break;\n        case 'pending':\n          initIterable(iterable);\n          break;\n        case 'done': {\n          // shouldn't happen\n          break;\n        }\n      }\n    },\n    async *[Symbol.asyncIterator]() {\n      if (state !== 'idle') {\n        throw new Error('Cannot iterate twice');\n      }\n      state = 'pending';\n\n      await using _finally = makeAsyncResource({}, async () => {\n        state = 'done';\n\n        const errors: unknown[] = [];\n        await Promise.all(\n          Array.from(iterators.values()).map(async (it) => {\n            try {\n              await it.destroy();\n            } catch (cause) {\n              errors.push(cause);\n            }\n          }),\n        );\n        buffer.length = 0;\n        iterators.clear();\n        flushSignal.resolve();\n\n        if (errors.length > 0) {\n          throw new AggregateError(errors);\n        }\n      });\n\n      while (iterables.length > 0) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        initIterable(iterables.shift()!);\n      }\n\n      while (iterators.size > 0) {\n        await flushSignal.promise;\n\n        while (buffer.length > 0) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const [iterator, result] = buffer.shift()!;\n\n          switch (result.status) {\n            case 'yield':\n              yield result.value;\n              iterator.pull();\n              break;\n            case 'error':\n              throw result.error;\n          }\n        }\n        flushSignal = createDeferred();\n      }\n    },\n  };\n}\n","/**\n * Creates a ReadableStream from an AsyncIterable.\n *\n * @param iterable - The source AsyncIterable to stream from\n * @returns A ReadableStream that yields values from the AsyncIterable\n */\nexport function readableStreamFrom<TYield>(\n  iterable: AsyncIterable<TYield, void>,\n): ReadableStream<TYield> {\n  const iterator = iterable[Symbol.asyncIterator]();\n\n  return new ReadableStream({\n    async cancel() {\n      await iterator.return?.();\n    },\n\n    async pull(controller) {\n      const result = await iterator.next();\n\n      if (result.done) {\n        controller.close();\n        return;\n      }\n\n      controller.enqueue(result.value);\n    },\n  });\n}\n","import { Unpromise } from '../../../vendor/unpromise';\nimport { iteratorResource } from './asyncIterable';\nimport { disposablePromiseTimerResult, timerResource } from './timerResource';\n\nexport const PING_SYM = Symbol('ping');\n\n/**\n * Derives a new {@link AsyncGenerator} based of {@link iterable}, that yields {@link PING_SYM}\n * whenever no value has been yielded for {@link pingIntervalMs}.\n */\nexport async function* withPing<TValue>(\n  iterable: AsyncIterable<TValue>,\n  pingIntervalMs: number,\n): AsyncGenerator<TValue | typeof PING_SYM> {\n  await using iterator = iteratorResource(iterable);\n\n  // declaration outside the loop for garbage collection reasons\n  let result:\n    | null\n    | IteratorResult<TValue>\n    | typeof disposablePromiseTimerResult;\n\n  let nextPromise = iterator.next();\n\n  while (true) {\n    using pingPromise = timerResource(pingIntervalMs);\n\n    result = await Unpromise.race([nextPromise, pingPromise.start()]);\n\n    if (result === disposablePromiseTimerResult) {\n      // cancelled\n\n      yield PING_SYM;\n      continue;\n    }\n\n    if (result.done) {\n      return result.value;\n    }\n\n    nextPromise = iterator.next();\n    yield result.value;\n\n    // free up reference for garbage collection\n    result = null;\n  }\n}\n","function _asyncIterator(r) {\n  var n,\n    t,\n    o,\n    e = 2;\n  for (\"undefined\" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) {\n    if (t && null != (n = r[t])) return n.call(r);\n    if (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r));\n    t = \"@@asyncIterator\", o = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(r) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var n = r.done;\n    return Promise.resolve(r.value).then(function (r) {\n      return {\n        value: r,\n        done: n\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(r) {\n    this.s = r, this.n = r.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(r) {\n      var n = this.s[\"return\"];\n      return void 0 === n ? Promise.resolve({\n        value: r,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(r) {\n      var n = this.s[\"return\"];\n      return void 0 === n ? Promise.reject(r) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(r);\n}\nmodule.exports = _asyncIterator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { isPlainObject } from '@trpc/server/vendor/is-plain-object';\nimport { isAsyncIterable, isFunction, isObject, run } from '../utils';\nimport { iteratorResource } from './utils/asyncIterable';\nimport type { Deferred } from './utils/createDeferred';\nimport { createDeferred } from './utils/createDeferred';\nimport { makeResource } from './utils/disposable';\nimport { mergeAsyncIterables } from './utils/mergeAsyncIterables';\nimport { readableStreamFrom } from './utils/readableStreamFrom';\nimport { PING_SYM, withPing } from './utils/withPing';\n\n/**\n * A subset of the standard ReadableStream properties needed by tRPC internally.\n * @see ReadableStream from lib.dom.d.ts\n */\nexport type WebReadableStreamEsque = {\n  getReader: () => ReadableStreamDefaultReader<Uint8Array>;\n};\n\nexport type NodeJSReadableStreamEsque = {\n  on(\n    eventName: string | symbol,\n    listener: (...args: any[]) => void,\n  ): NodeJSReadableStreamEsque;\n};\n\n// ---------- types\nconst CHUNK_VALUE_TYPE_PROMISE = 0;\ntype CHUNK_VALUE_TYPE_PROMISE = typeof CHUNK_VALUE_TYPE_PROMISE;\nconst CHUNK_VALUE_TYPE_ASYNC_ITERABLE = 1;\ntype CHUNK_VALUE_TYPE_ASYNC_ITERABLE = typeof CHUNK_VALUE_TYPE_ASYNC_ITERABLE;\n\nconst PROMISE_STATUS_FULFILLED = 0;\ntype PROMISE_STATUS_FULFILLED = typeof PROMISE_STATUS_FULFILLED;\nconst PROMISE_STATUS_REJECTED = 1;\ntype PROMISE_STATUS_REJECTED = typeof PROMISE_STATUS_REJECTED;\n\nconst ASYNC_ITERABLE_STATUS_RETURN = 0;\ntype ASYNC_ITERABLE_STATUS_RETURN = typeof ASYNC_ITERABLE_STATUS_RETURN;\nconst ASYNC_ITERABLE_STATUS_YIELD = 1;\ntype ASYNC_ITERABLE_STATUS_YIELD = typeof ASYNC_ITERABLE_STATUS_YIELD;\nconst ASYNC_ITERABLE_STATUS_ERROR = 2;\ntype ASYNC_ITERABLE_STATUS_ERROR = typeof ASYNC_ITERABLE_STATUS_ERROR;\n\ntype ChunkDefinitionKey =\n  // root should be replaced\n  | null\n  // at array path\n  | number\n  // at key path\n  | string;\n\ntype ChunkIndex = number & { __chunkIndex: true };\ntype ChunkValueType =\n  | CHUNK_VALUE_TYPE_PROMISE\n  | CHUNK_VALUE_TYPE_ASYNC_ITERABLE;\ntype ChunkDefinition = [\n  key: ChunkDefinitionKey,\n  type: ChunkValueType,\n  chunkId: ChunkIndex,\n];\ntype EncodedValue = [\n  // data\n  [unknown] | [],\n  // chunk descriptions\n  ...ChunkDefinition[],\n];\n\ntype Head = Record<string, EncodedValue>;\ntype PromiseChunk =\n  | [\n      chunkIndex: ChunkIndex,\n      status: PROMISE_STATUS_FULFILLED,\n      value: EncodedValue,\n    ]\n  | [chunkIndex: ChunkIndex, status: PROMISE_STATUS_REJECTED, error: unknown];\ntype IterableChunk =\n  | [\n      chunkIndex: ChunkIndex,\n      status: ASYNC_ITERABLE_STATUS_RETURN,\n      value: EncodedValue,\n    ]\n  | [\n      chunkIndex: ChunkIndex,\n      status: ASYNC_ITERABLE_STATUS_YIELD,\n      value: EncodedValue,\n    ]\n  | [\n      chunkIndex: ChunkIndex,\n      status: ASYNC_ITERABLE_STATUS_ERROR,\n      error: unknown,\n    ];\ntype ChunkData = PromiseChunk | IterableChunk;\ntype PlaceholderValue = 0 & { __placeholder: true };\nexport function isPromise(value: unknown): value is Promise<unknown> {\n  return (\n    (isObject(value) || isFunction(value)) &&\n    typeof value?.['then'] === 'function' &&\n    typeof value?.['catch'] === 'function'\n  );\n}\n\ntype Serialize = (value: any) => any;\ntype Deserialize = (value: any) => any;\n\ntype PathArray = readonly (string | number)[];\nexport type ProducerOnError = (opts: {\n  error: unknown;\n  path: PathArray;\n}) => void;\nexport interface JSONLProducerOptions {\n  serialize?: Serialize;\n  data: Record<string, unknown> | unknown[];\n  onError?: ProducerOnError;\n  formatError?: (opts: { error: unknown; path: PathArray }) => unknown;\n  maxDepth?: number;\n  /**\n   * Interval in milliseconds to send a ping to the client to keep the connection alive\n   * This will be sent as a whitespace character\n   * @default undefined\n   */\n  pingMs?: number;\n}\n\nclass MaxDepthError extends Error {\n  constructor(public path: (string | number)[]) {\n    super('Max depth reached at path: ' + path.join('.'));\n  }\n}\n\nasync function* createBatchStreamProducer(\n  opts: JSONLProducerOptions,\n): AsyncIterable<Head | ChunkData | typeof PING_SYM, void> {\n  const { data } = opts;\n  let counter = 0 as ChunkIndex;\n  const placeholder = 0 as PlaceholderValue;\n\n  const mergedIterables = mergeAsyncIterables<ChunkData>();\n  function registerAsync(\n    callback: (idx: ChunkIndex) => AsyncIterable<ChunkData, void>,\n  ) {\n    const idx = counter++ as ChunkIndex;\n\n    const iterable = callback(idx);\n    mergedIterables.add(iterable);\n\n    return idx;\n  }\n\n  function encodePromise(promise: Promise<unknown>, path: (string | number)[]) {\n    return registerAsync(async function* (idx) {\n      const error = checkMaxDepth(path);\n      if (error) {\n        // Catch any errors from the original promise to ensure they're reported\n        promise.catch((cause) => {\n          opts.onError?.({ error: cause, path });\n        });\n        // Replace the promise with a rejected one containing the max depth error\n        promise = Promise.reject(error);\n      }\n      try {\n        const next = await promise;\n        yield [idx, PROMISE_STATUS_FULFILLED, encode(next, path)];\n      } catch (cause) {\n        opts.onError?.({ error: cause, path });\n        yield [\n          idx,\n          PROMISE_STATUS_REJECTED,\n          opts.formatError?.({ error: cause, path }),\n        ];\n      }\n    });\n  }\n  function encodeAsyncIterable(\n    iterable: AsyncIterable<unknown>,\n    path: (string | number)[],\n  ) {\n    return registerAsync(async function* (idx) {\n      const error = checkMaxDepth(path);\n      if (error) {\n        throw error;\n      }\n      await using iterator = iteratorResource(iterable);\n\n      try {\n        while (true) {\n          const next = await iterator.next();\n          if (next.done) {\n            yield [idx, ASYNC_ITERABLE_STATUS_RETURN, encode(next.value, path)];\n            break;\n          }\n          yield [idx, ASYNC_ITERABLE_STATUS_YIELD, encode(next.value, path)];\n        }\n      } catch (cause) {\n        opts.onError?.({ error: cause, path });\n\n        yield [\n          idx,\n          ASYNC_ITERABLE_STATUS_ERROR,\n          opts.formatError?.({ error: cause, path }),\n        ];\n      }\n    });\n  }\n  function checkMaxDepth(path: (string | number)[]) {\n    if (opts.maxDepth && path.length > opts.maxDepth) {\n      return new MaxDepthError(path);\n    }\n    return null;\n  }\n  function encodeAsync(\n    value: unknown,\n    path: (string | number)[],\n  ): null | [type: ChunkValueType, chunkId: ChunkIndex] {\n    if (isPromise(value)) {\n      return [CHUNK_VALUE_TYPE_PROMISE, encodePromise(value, path)];\n    }\n    if (isAsyncIterable(value)) {\n      if (opts.maxDepth && path.length >= opts.maxDepth) {\n        throw new Error('Max depth reached');\n      }\n      return [\n        CHUNK_VALUE_TYPE_ASYNC_ITERABLE,\n        encodeAsyncIterable(value, path),\n      ];\n    }\n    return null;\n  }\n  function encode(value: unknown, path: (string | number)[]): EncodedValue {\n    if (value === undefined) {\n      return [[]];\n    }\n    const reg = encodeAsync(value, path);\n    if (reg) {\n      return [[placeholder], [null, ...reg]];\n    }\n\n    if (!isPlainObject(value)) {\n      return [[value]];\n    }\n\n    const newObj: Record<string, unknown> = {};\n    const asyncValues: ChunkDefinition[] = [];\n    for (const [key, item] of Object.entries(value)) {\n      const transformed = encodeAsync(item, [...path, key]);\n      if (!transformed) {\n        newObj[key] = item;\n        continue;\n      }\n      newObj[key] = placeholder;\n      asyncValues.push([key, ...transformed]);\n    }\n    return [[newObj], ...asyncValues];\n  }\n\n  const newHead: Head = {};\n  for (const [key, item] of Object.entries(data)) {\n    newHead[key] = encode(item, [key]);\n  }\n\n  yield newHead;\n\n  let iterable: AsyncIterable<ChunkData | typeof PING_SYM, void> =\n    mergedIterables;\n  if (opts.pingMs) {\n    iterable = withPing(mergedIterables, opts.pingMs);\n  }\n\n  for await (const value of iterable) {\n    yield value;\n  }\n}\n/**\n * JSON Lines stream producer\n * @see https://jsonlines.org/\n */\nexport function jsonlStreamProducer(opts: JSONLProducerOptions) {\n  let stream = readableStreamFrom(createBatchStreamProducer(opts));\n\n  const { serialize } = opts;\n  if (serialize) {\n    stream = stream.pipeThrough(\n      new TransformStream({\n        transform(chunk, controller) {\n          if (chunk === PING_SYM) {\n            controller.enqueue(PING_SYM);\n          } else {\n            controller.enqueue(serialize(chunk));\n          }\n        },\n      }),\n    );\n  }\n\n  return stream\n    .pipeThrough(\n      new TransformStream({\n        transform(chunk, controller) {\n          if (chunk === PING_SYM) {\n            controller.enqueue(' ');\n          } else {\n            controller.enqueue(JSON.stringify(chunk) + '\\n');\n          }\n        },\n      }),\n    )\n    .pipeThrough(new TextEncoderStream());\n}\n\nclass AsyncError extends Error {\n  constructor(public readonly data: unknown) {\n    super('Received error from server');\n  }\n}\nexport type ConsumerOnError = (opts: { error: unknown }) => void;\n\nconst nodeJsStreamToReaderEsque = (source: NodeJSReadableStreamEsque) => {\n  return {\n    getReader() {\n      const stream = new ReadableStream<Uint8Array>({\n        start(controller) {\n          source.on('data', (chunk) => {\n            controller.enqueue(chunk);\n          });\n          source.on('end', () => {\n            controller.close();\n          });\n          source.on('error', (error) => {\n            controller.error(error);\n          });\n        },\n      });\n      return stream.getReader();\n    },\n  };\n};\n\nfunction createLineAccumulator(\n  from: NodeJSReadableStreamEsque | WebReadableStreamEsque,\n) {\n  const reader =\n    'getReader' in from\n      ? from.getReader()\n      : nodeJsStreamToReaderEsque(from).getReader();\n\n  let lineAggregate = '';\n\n  return new ReadableStream({\n    async pull(controller) {\n      const { done, value } = await reader.read();\n\n      if (done) {\n        controller.close();\n      } else {\n        controller.enqueue(value);\n      }\n    },\n    cancel() {\n      return reader.cancel();\n    },\n  })\n    .pipeThrough(new TextDecoderStream())\n    .pipeThrough(\n      new TransformStream<string, string>({\n        transform(chunk, controller) {\n          lineAggregate += chunk;\n          const parts = lineAggregate.split('\\n');\n          lineAggregate = parts.pop() ?? '';\n          for (const part of parts) {\n            controller.enqueue(part);\n          }\n        },\n      }),\n    );\n}\nfunction createConsumerStream<THead>(\n  from: NodeJSReadableStreamEsque | WebReadableStreamEsque,\n) {\n  const stream = createLineAccumulator(from);\n\n  let sentHead = false;\n  return stream.pipeThrough(\n    new TransformStream<string, ChunkData | THead>({\n      transform(line, controller) {\n        if (!sentHead) {\n          const head = JSON.parse(line);\n          controller.enqueue(head as THead);\n          sentHead = true;\n        } else {\n          const chunk: ChunkData = JSON.parse(line);\n          controller.enqueue(chunk);\n        }\n      },\n    }),\n  );\n}\n\n/**\n * Creates a handler for managing stream controllers and their lifecycle\n */\nfunction createStreamsManager(abortController: AbortController) {\n  const controllerMap = new Map<\n    ChunkIndex,\n    ReturnType<typeof createStreamController>\n  >();\n\n  /**\n   * Checks if there are no pending controllers or deferred promises\n   */\n  function isEmpty() {\n    return Array.from(controllerMap.values()).every((c) => c.closed);\n  }\n\n  /**\n   * Creates a stream controller\n   */\n  function createStreamController() {\n    let originalController: ReadableStreamDefaultController<ChunkData>;\n    const stream = new ReadableStream<ChunkData>({\n      start(controller) {\n        originalController = controller;\n      },\n    });\n\n    const streamController = {\n      enqueue: (v: ChunkData) => originalController.enqueue(v),\n      close: () => {\n        originalController.close();\n\n        clear();\n\n        if (isEmpty()) {\n          abortController.abort();\n        }\n      },\n      closed: false,\n      getReaderResource: () => {\n        const reader = stream.getReader();\n\n        return makeResource(reader, () => {\n          streamController.close();\n          reader.releaseLock();\n        });\n      },\n      error: (reason: unknown) => {\n        originalController.error(reason);\n\n        clear();\n      },\n    };\n    function clear() {\n      Object.assign(streamController, {\n        closed: true,\n        close: () => {\n          // noop\n        },\n        enqueue: () => {\n          // noop\n        },\n        getReaderResource: null,\n        error: () => {\n          // noop\n        },\n      });\n    }\n\n    return streamController;\n  }\n\n  /**\n   * Gets or creates a stream controller\n   */\n  function getOrCreate(chunkId: ChunkIndex) {\n    let c = controllerMap.get(chunkId);\n    if (!c) {\n      c = createStreamController();\n      controllerMap.set(chunkId, c);\n    }\n    return c;\n  }\n\n  /**\n   * Cancels all pending controllers and rejects deferred promises\n   */\n  function cancelAll(reason: unknown) {\n    for (const controller of controllerMap.values()) {\n      controller.error(reason);\n    }\n  }\n\n  return {\n    getOrCreate,\n    cancelAll,\n  };\n}\n\n/**\n * JSON Lines stream consumer\n * @see https://jsonlines.org/\n */\nexport async function jsonlStreamConsumer<THead>(opts: {\n  from: NodeJSReadableStreamEsque | WebReadableStreamEsque;\n  deserialize?: Deserialize;\n  onError?: ConsumerOnError;\n  formatError?: (opts: { error: unknown }) => Error;\n  /**\n   * This `AbortController` will be triggered when there are no more listeners to the stream.\n   */\n  abortController: AbortController;\n}) {\n  const { deserialize = (v) => v } = opts;\n\n  let source = createConsumerStream<Head>(opts.from);\n  if (deserialize) {\n    source = source.pipeThrough(\n      new TransformStream({\n        transform(chunk, controller) {\n          controller.enqueue(deserialize(chunk));\n        },\n      }),\n    );\n  }\n  let headDeferred: null | Deferred<THead> = createDeferred();\n\n  const streamManager = createStreamsManager(opts.abortController);\n\n  function decodeChunkDefinition(value: ChunkDefinition) {\n    const [_path, type, chunkId] = value;\n\n    const controller = streamManager.getOrCreate(chunkId);\n\n    switch (type) {\n      case CHUNK_VALUE_TYPE_PROMISE: {\n        return run(async () => {\n          using reader = controller.getReaderResource();\n\n          const { value } = await reader.read();\n          const [_chunkId, status, data] = value as PromiseChunk;\n          switch (status) {\n            case PROMISE_STATUS_FULFILLED:\n              return decode(data);\n            case PROMISE_STATUS_REJECTED:\n              throw opts.formatError?.({ error: data }) ?? new AsyncError(data);\n          }\n        });\n      }\n      case CHUNK_VALUE_TYPE_ASYNC_ITERABLE: {\n        return run(async function* () {\n          using reader = controller.getReaderResource();\n\n          while (true) {\n            const { value } = await reader.read();\n\n            const [_chunkId, status, data] = value as IterableChunk;\n\n            switch (status) {\n              case ASYNC_ITERABLE_STATUS_YIELD:\n                yield decode(data);\n                break;\n              case ASYNC_ITERABLE_STATUS_RETURN:\n                return decode(data);\n              case ASYNC_ITERABLE_STATUS_ERROR:\n                throw (\n                  opts.formatError?.({ error: data }) ?? new AsyncError(data)\n                );\n            }\n          }\n        });\n      }\n    }\n  }\n\n  function decode(value: EncodedValue): unknown {\n    const [[data], ...asyncProps] = value;\n\n    for (const value of asyncProps) {\n      const [key] = value;\n      const decoded = decodeChunkDefinition(value);\n\n      if (key === null) {\n        return decoded;\n      }\n\n      (data as any)[key] = decoded;\n    }\n    return data;\n  }\n\n  const closeOrAbort = (reason?: unknown) => {\n    headDeferred?.reject(reason);\n    streamManager.cancelAll(reason);\n  };\n\n  source\n    .pipeTo(\n      new WritableStream({\n        write(chunkOrHead) {\n          if (headDeferred) {\n            const head = chunkOrHead as Record<number | string, unknown>;\n\n            for (const [key, value] of Object.entries(chunkOrHead)) {\n              const parsed = decode(value as any);\n              head[key] = parsed;\n            }\n            headDeferred.resolve(head as THead);\n            headDeferred = null;\n\n            return;\n          }\n          const chunk = chunkOrHead as ChunkData;\n          const [idx] = chunk;\n\n          const controller = streamManager.getOrCreate(idx);\n          controller.enqueue(chunk);\n        },\n        close: closeOrAbort,\n        abort: closeOrAbort,\n      }),\n    )\n    .catch((error) => {\n      opts.onError?.({ error });\n      closeOrAbort(error);\n    });\n\n  return [await headDeferred.promise] as const;\n}\n","var OverloadYield = require(\"./OverloadYield.js\");\nfunction _asyncGeneratorDelegate(t) {\n  var e = {},\n    n = !1;\n  function pump(e, r) {\n    return n = !0, r = new Promise(function (n) {\n      n(t[e](r));\n    }), {\n      done: !1,\n      value: new OverloadYield(r, 1)\n    };\n  }\n  return e[\"undefined\" != typeof Symbol && Symbol.iterator || \"@@iterator\"] = function () {\n    return this;\n  }, e.next = function (t) {\n    return n ? (n = !1, t) : pump(\"next\", t);\n  }, \"function\" == typeof t[\"throw\"] && (e[\"throw\"] = function (t) {\n    if (n) throw n = !1, t;\n    return pump(\"throw\", t);\n  }), \"function\" == typeof t[\"return\"] && (e[\"return\"] = function (t) {\n    return n ? (n = !1, t) : pump(\"return\", t);\n  }), e;\n}\nmodule.exports = _asyncGeneratorDelegate, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { Unpromise } from '../../vendor/unpromise';\nimport { getTRPCErrorFromUnknown } from '../error/TRPCError';\nimport { isAbortError } from '../http/abortError';\nimport type { MaybePromise } from '../types';\nimport { identity, run } from '../utils';\nimport type { EventSourceLike } from './sse.types';\nimport type { inferTrackedOutput } from './tracked';\nimport { isTrackedEnvelope } from './tracked';\nimport { takeWithGrace, withMaxDuration } from './utils/asyncIterable';\nimport { makeAsyncResource } from './utils/disposable';\nimport { readableStreamFrom } from './utils/readableStreamFrom';\nimport {\n  disposablePromiseTimerResult,\n  timerResource,\n} from './utils/timerResource';\nimport { PING_SYM, withPing } from './utils/withPing';\n\ntype Serialize = (value: any) => any;\ntype Deserialize = (value: any) => any;\n\n/**\n * @internal\n */\nexport interface SSEPingOptions {\n  /**\n   * Enable ping comments sent from the server\n   * @default false\n   */\n  enabled: boolean;\n  /**\n   * Interval in milliseconds\n   * @default 1000\n   */\n  intervalMs?: number;\n}\n\nexport interface SSEClientOptions {\n  /**\n   * Timeout and reconnect after inactivity in milliseconds\n   * @default undefined\n   */\n  reconnectAfterInactivityMs?: number;\n}\n\nexport interface SSEStreamProducerOptions<TValue = unknown> {\n  serialize?: Serialize;\n  data: AsyncIterable<TValue>;\n\n  maxDepth?: number;\n  ping?: SSEPingOptions;\n  /**\n   * Maximum duration in milliseconds for the request before ending the stream\n   * @default undefined\n   */\n  maxDurationMs?: number;\n  /**\n   * End the request immediately after data is sent\n   * Only useful for serverless runtimes that do not support streaming responses\n   * @default false\n   */\n  emitAndEndImmediately?: boolean;\n  formatError?: (opts: { error: unknown }) => unknown;\n  /**\n   * Client-specific options - these will be sent to the client as part of the first message\n   * @default {}\n   */\n  client?: SSEClientOptions;\n}\n\nconst PING_EVENT = 'ping';\nconst SERIALIZED_ERROR_EVENT = 'serialized-error';\nconst CONNECTED_EVENT = 'connected';\nconst RETURN_EVENT = 'return';\n\ninterface SSEvent {\n  id?: string;\n  data: unknown;\n  comment?: string;\n  event?: string;\n}\n/**\n *\n * @see https://html.spec.whatwg.org/multipage/server-sent-events.html\n */\nexport function sseStreamProducer<TValue = unknown>(\n  opts: SSEStreamProducerOptions<TValue>,\n) {\n  const { serialize = identity } = opts;\n\n  const ping: Required<SSEPingOptions> = {\n    enabled: opts.ping?.enabled ?? false,\n    intervalMs: opts.ping?.intervalMs ?? 1000,\n  };\n  const client: SSEClientOptions = opts.client ?? {};\n\n  if (\n    ping.enabled &&\n    client.reconnectAfterInactivityMs &&\n    ping.intervalMs > client.reconnectAfterInactivityMs\n  ) {\n    throw new Error(\n      `Ping interval must be less than client reconnect interval to prevent unnecessary reconnection - ping.intervalMs: ${ping.intervalMs} client.reconnectAfterInactivityMs: ${client.reconnectAfterInactivityMs}`,\n    );\n  }\n\n  async function* generator(): AsyncIterable<SSEvent, void> {\n    yield {\n      event: CONNECTED_EVENT,\n      data: JSON.stringify(client),\n    };\n\n    type TIteratorValue = Awaited<TValue> | typeof PING_SYM;\n\n    let iterable: AsyncIterable<TValue | typeof PING_SYM> = opts.data;\n\n    if (opts.emitAndEndImmediately) {\n      iterable = takeWithGrace(iterable, {\n        count: 1,\n        gracePeriodMs: 1,\n      });\n    }\n\n    if (\n      opts.maxDurationMs &&\n      opts.maxDurationMs > 0 &&\n      opts.maxDurationMs !== Infinity\n    ) {\n      iterable = withMaxDuration(iterable, {\n        maxDurationMs: opts.maxDurationMs,\n      });\n    }\n\n    if (ping.enabled && ping.intervalMs !== Infinity && ping.intervalMs > 0) {\n      iterable = withPing(iterable, ping.intervalMs);\n    }\n\n    // We need those declarations outside the loop for garbage collection reasons. If they were\n    // declared inside, they would not be freed until the next value is present.\n    let value: null | TIteratorValue;\n    let chunk: null | SSEvent;\n\n    for await (value of iterable) {\n      if (value === PING_SYM) {\n        yield { event: PING_EVENT, data: '' };\n        continue;\n      }\n\n      chunk = isTrackedEnvelope(value)\n        ? { id: value[0], data: value[1] }\n        : { data: value };\n\n      chunk.data = JSON.stringify(serialize(chunk.data));\n\n      yield chunk;\n\n      // free up references for garbage collection\n      value = null;\n      chunk = null;\n    }\n  }\n\n  async function* generatorWithErrorHandling(): AsyncIterable<SSEvent, void> {\n    try {\n      yield* generator();\n\n      yield {\n        event: RETURN_EVENT,\n        data: '',\n      };\n    } catch (cause) {\n      if (isAbortError(cause)) {\n        // ignore abort errors, send any other errors\n        return;\n      }\n      // `err` must be caused by `opts.data`, `JSON.stringify` or `serialize`.\n      // So, a user error in any case.\n      const error = getTRPCErrorFromUnknown(cause);\n      const data = opts.formatError?.({ error }) ?? null;\n      yield {\n        event: SERIALIZED_ERROR_EVENT,\n        data: JSON.stringify(serialize(data)),\n      };\n    }\n  }\n\n  const stream = readableStreamFrom(generatorWithErrorHandling());\n\n  return stream\n    .pipeThrough(\n      new TransformStream({\n        transform(chunk, controller: TransformStreamDefaultController<string>) {\n          if ('event' in chunk) {\n            controller.enqueue(`event: ${chunk.event}\\n`);\n          }\n          if ('data' in chunk) {\n            controller.enqueue(`data: ${chunk.data}\\n`);\n          }\n          if ('id' in chunk) {\n            controller.enqueue(`id: ${chunk.id}\\n`);\n          }\n          if ('comment' in chunk) {\n            controller.enqueue(`: ${chunk.comment}\\n`);\n          }\n          controller.enqueue('\\n\\n');\n        },\n      }),\n    )\n    .pipeThrough(new TextEncoderStream());\n}\n\ninterface ConsumerStreamResultBase<TConfig extends ConsumerConfig> {\n  eventSource: InstanceType<TConfig['EventSource']> | null;\n}\n\ninterface ConsumerStreamResultData<TConfig extends ConsumerConfig>\n  extends ConsumerStreamResultBase<TConfig> {\n  type: 'data';\n  data: inferTrackedOutput<TConfig['data']>;\n}\n\ninterface ConsumerStreamResultError<TConfig extends ConsumerConfig>\n  extends ConsumerStreamResultBase<TConfig> {\n  type: 'serialized-error';\n  error: TConfig['error'];\n}\n\ninterface ConsumerStreamResultConnecting<TConfig extends ConsumerConfig>\n  extends ConsumerStreamResultBase<TConfig> {\n  type: 'connecting';\n  event: EventSourceLike.EventOf<TConfig['EventSource']> | null;\n}\ninterface ConsumerStreamResultTimeout<TConfig extends ConsumerConfig>\n  extends ConsumerStreamResultBase<TConfig> {\n  type: 'timeout';\n  ms: number;\n}\ninterface ConsumerStreamResultPing<TConfig extends ConsumerConfig>\n  extends ConsumerStreamResultBase<TConfig> {\n  type: 'ping';\n}\n\ninterface ConsumerStreamResultConnected<TConfig extends ConsumerConfig>\n  extends ConsumerStreamResultBase<TConfig> {\n  type: 'connected';\n  options: SSEClientOptions;\n}\n\ntype ConsumerStreamResult<TConfig extends ConsumerConfig> =\n  | ConsumerStreamResultData<TConfig>\n  | ConsumerStreamResultError<TConfig>\n  | ConsumerStreamResultConnecting<TConfig>\n  | ConsumerStreamResultTimeout<TConfig>\n  | ConsumerStreamResultPing<TConfig>\n  | ConsumerStreamResultConnected<TConfig>;\n\nexport interface SSEStreamConsumerOptions<TConfig extends ConsumerConfig> {\n  url: () => MaybePromise<string>;\n  init: () =>\n    | MaybePromise<EventSourceLike.InitDictOf<TConfig['EventSource']>>\n    | undefined;\n  signal: AbortSignal;\n  deserialize?: Deserialize;\n  EventSource: TConfig['EventSource'];\n}\n\ninterface ConsumerConfig {\n  data: unknown;\n  error: unknown;\n  EventSource: EventSourceLike.AnyConstructor;\n}\n\nasync function withTimeout<T>(opts: {\n  promise: Promise<T>;\n  timeoutMs: number;\n  onTimeout: () => Promise<NoInfer<T>>;\n}): Promise<T> {\n  using timeoutPromise = timerResource(opts.timeoutMs);\n  const res = await Unpromise.race([opts.promise, timeoutPromise.start()]);\n\n  if (res === disposablePromiseTimerResult) {\n    return await opts.onTimeout();\n  }\n  return res;\n}\n\n/**\n * @see https://html.spec.whatwg.org/multipage/server-sent-events.html\n */\nexport function sseStreamConsumer<TConfig extends ConsumerConfig>(\n  opts: SSEStreamConsumerOptions<TConfig>,\n): AsyncIterable<ConsumerStreamResult<TConfig>> {\n  const { deserialize = (v) => v } = opts;\n\n  let clientOptions: SSEClientOptions = {};\n\n  const signal = opts.signal;\n\n  let _es: InstanceType<TConfig['EventSource']> | null = null;\n\n  const createStream = () =>\n    new ReadableStream<ConsumerStreamResult<TConfig>>({\n      async start(controller) {\n        const [url, init] = await Promise.all([opts.url(), opts.init()]);\n        const eventSource = (_es = new opts.EventSource(\n          url,\n          init,\n        ) as InstanceType<TConfig['EventSource']>);\n\n        controller.enqueue({\n          type: 'connecting',\n          eventSource: _es,\n          event: null,\n        });\n\n        eventSource.addEventListener(CONNECTED_EVENT, (_msg) => {\n          const msg = _msg as EventSourceLike.MessageEvent;\n\n          const options: SSEClientOptions = JSON.parse(msg.data);\n\n          clientOptions = options;\n          controller.enqueue({\n            type: 'connected',\n            options,\n            eventSource,\n          });\n        });\n\n        eventSource.addEventListener(SERIALIZED_ERROR_EVENT, (_msg) => {\n          const msg = _msg as EventSourceLike.MessageEvent;\n\n          controller.enqueue({\n            type: 'serialized-error',\n            error: deserialize(JSON.parse(msg.data)),\n            eventSource,\n          });\n        });\n        eventSource.addEventListener(PING_EVENT, () => {\n          controller.enqueue({\n            type: 'ping',\n            eventSource,\n          });\n        });\n        eventSource.addEventListener(RETURN_EVENT, () => {\n          eventSource.close();\n          controller.close();\n          _es = null;\n        });\n        eventSource.addEventListener('error', (event) => {\n          if (eventSource.readyState === eventSource.CLOSED) {\n            controller.error(event);\n          } else {\n            controller.enqueue({\n              type: 'connecting',\n              eventSource,\n              event,\n            });\n          }\n        });\n        eventSource.addEventListener('message', (_msg) => {\n          const msg = _msg as EventSourceLike.MessageEvent;\n\n          const chunk = deserialize(JSON.parse(msg.data));\n\n          const def: SSEvent = {\n            data: chunk,\n          };\n          if (msg.lastEventId) {\n            def.id = msg.lastEventId;\n          }\n          controller.enqueue({\n            type: 'data',\n            data: def as inferTrackedOutput<TConfig['data']>,\n            eventSource,\n          });\n        });\n\n        const onAbort = () => {\n          try {\n            eventSource.close();\n            controller.close();\n          } catch {\n            // ignore errors in case the controller is already closed\n          }\n        };\n        if (signal.aborted) {\n          onAbort();\n        } else {\n          signal.addEventListener('abort', onAbort);\n        }\n      },\n      cancel() {\n        _es?.close();\n      },\n    });\n\n  const getStreamResource = () => {\n    let stream = createStream();\n    let reader = stream.getReader();\n\n    async function dispose() {\n      await reader.cancel();\n      _es = null;\n    }\n\n    return makeAsyncResource(\n      {\n        read() {\n          return reader.read();\n        },\n        async recreate() {\n          await dispose();\n\n          stream = createStream();\n          reader = stream.getReader();\n        },\n      },\n      dispose,\n    );\n  };\n\n  return run(async function* () {\n    await using stream = getStreamResource();\n\n    while (true) {\n      let promise = stream.read();\n\n      const timeoutMs = clientOptions.reconnectAfterInactivityMs;\n      if (timeoutMs) {\n        promise = withTimeout({\n          promise,\n          timeoutMs,\n          onTimeout: async () => {\n            const res: Awaited<typeof promise> = {\n              value: {\n                type: 'timeout',\n                ms: timeoutMs,\n                eventSource: _es,\n              },\n              done: false,\n            };\n            // Close and release old reader\n            await stream.recreate();\n\n            return res;\n          },\n        });\n      }\n\n      const result = await promise;\n\n      if (result.done) {\n        return result.value;\n      }\n      yield result.value;\n    }\n  });\n}\n\nexport const sseHeaders = {\n  'Content-Type': 'text/event-stream',\n  'Cache-Control': 'no-cache, no-transform',\n  'X-Accel-Buffering': 'no',\n  Connection: 'keep-alive',\n} as const;\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  isObservable,\n  observableToAsyncIterable,\n} from '../../observable/observable';\nimport { getErrorShape } from '../error/getErrorShape';\nimport { getTRPCErrorFromUnknown, TRPCError } from '../error/TRPCError';\nimport type { ProcedureType } from '../procedure';\nimport {\n  type AnyRouter,\n  type inferRouterContext,\n  type inferRouterError,\n} from '../router';\nimport type { TRPCResponse } from '../rpc';\nimport { isPromise, jsonlStreamProducer } from '../stream/jsonl';\nimport { sseHeaders, sseStreamProducer } from '../stream/sse';\nimport { transformTRPCResponse } from '../transformer';\nimport { isAsyncIterable, isObject, run } from '../utils';\nimport { getRequestInfo } from './contentType';\nimport { getHTTPStatusCode } from './getHTTPStatusCode';\nimport type {\n  HTTPBaseHandlerOptions,\n  ResolveHTTPRequestOptionsContextFn,\n  TRPCRequestInfo,\n} from './types';\n\nfunction errorToAsyncIterable(err: TRPCError): AsyncIterable<never> {\n  return run(async function* () {\n    throw err;\n  });\n}\ntype HTTPMethods =\n  | 'GET'\n  | 'POST'\n  | 'HEAD'\n  | 'OPTIONS'\n  | 'PUT'\n  | 'DELETE'\n  | 'PATCH';\n\nconst TYPE_ACCEPTED_METHOD_MAP: Record<ProcedureType, HTTPMethods[]> = {\n  mutation: ['POST'],\n  query: ['GET'],\n  subscription: ['GET'],\n};\nconst TYPE_ACCEPTED_METHOD_MAP_WITH_METHOD_OVERRIDE: Record<\n  ProcedureType,\n  HTTPMethods[]\n> = {\n  // never allow GET to do a mutation\n  mutation: ['POST'],\n  query: ['GET', 'POST'],\n  subscription: ['GET', 'POST'],\n};\n\ninterface ResolveHTTPRequestOptions<TRouter extends AnyRouter>\n  extends HTTPBaseHandlerOptions<TRouter, Request> {\n  createContext: ResolveHTTPRequestOptionsContextFn<TRouter>;\n  req: Request;\n  path: string;\n  /**\n   * If the request had an issue before reaching the handler\n   */\n  error: TRPCError | null;\n}\n\nfunction initResponse<TRouter extends AnyRouter, TRequest>(initOpts: {\n  ctx: inferRouterContext<TRouter> | undefined;\n  info: TRPCRequestInfo | undefined;\n  responseMeta?: HTTPBaseHandlerOptions<TRouter, TRequest>['responseMeta'];\n  untransformedJSON:\n    | TRPCResponse<unknown, inferRouterError<TRouter>>\n    | TRPCResponse<unknown, inferRouterError<TRouter>>[]\n    | null;\n  errors: TRPCError[];\n  headers: Headers;\n}) {\n  const {\n    ctx,\n    info,\n    responseMeta,\n    untransformedJSON,\n    errors = [],\n    headers,\n  } = initOpts;\n\n  let status = untransformedJSON ? getHTTPStatusCode(untransformedJSON) : 200;\n\n  const eagerGeneration = !untransformedJSON;\n  const data = eagerGeneration\n    ? []\n    : Array.isArray(untransformedJSON)\n      ? untransformedJSON\n      : [untransformedJSON];\n\n  const meta =\n    responseMeta?.({\n      ctx,\n      info,\n      paths: info?.calls.map((call) => call.path),\n      data,\n      errors,\n      eagerGeneration,\n      type:\n        info?.calls.find((call) => call.procedure?._def.type)?.procedure?._def\n          .type ?? 'unknown',\n    }) ?? {};\n\n  if (meta.headers) {\n    if (meta.headers instanceof Headers) {\n      for (const [key, value] of meta.headers.entries()) {\n        headers.append(key, value);\n      }\n    } else {\n      /**\n       * @deprecated, delete in v12\n       */\n      for (const [key, value] of Object.entries(meta.headers)) {\n        if (Array.isArray(value)) {\n          for (const v of value) {\n            headers.append(key, v);\n          }\n        } else if (typeof value === 'string') {\n          headers.set(key, value);\n        }\n      }\n    }\n  }\n  if (meta.status) {\n    status = meta.status;\n  }\n\n  return {\n    status,\n  };\n}\n\nfunction caughtErrorToData<TRouter extends AnyRouter>(\n  cause: unknown,\n  errorOpts: {\n    opts: Pick<\n      ResolveHTTPRequestOptions<TRouter>,\n      'onError' | 'req' | 'router'\n    >;\n    ctx: inferRouterContext<TRouter> | undefined;\n    type: ProcedureType | 'unknown';\n    path?: string;\n    input?: unknown;\n  },\n) {\n  const { router, req, onError } = errorOpts.opts;\n  const error = getTRPCErrorFromUnknown(cause);\n  onError?.({\n    error,\n    path: errorOpts.path,\n    input: errorOpts.input,\n    ctx: errorOpts.ctx,\n    type: errorOpts.type,\n    req,\n  });\n  const untransformedJSON = {\n    error: getErrorShape({\n      config: router._def._config,\n      error,\n      type: errorOpts.type,\n      path: errorOpts.path,\n      input: errorOpts.input,\n      ctx: errorOpts.ctx,\n    }),\n  };\n  const transformedJSON = transformTRPCResponse(\n    router._def._config,\n    untransformedJSON,\n  );\n  const body = JSON.stringify(transformedJSON);\n  return {\n    error,\n    untransformedJSON,\n    body,\n  };\n}\n\n/**\n * Check if a value is a stream-like object\n * - if it's an async iterable\n * - if it's an object with async iterables or promises\n */\nfunction isDataStream(v: unknown) {\n  if (!isObject(v)) {\n    return false;\n  }\n\n  if (isAsyncIterable(v)) {\n    return true;\n  }\n\n  return (\n    Object.values(v).some(isPromise) || Object.values(v).some(isAsyncIterable)\n  );\n}\n\ntype ResultTuple<T> = [undefined, T] | [TRPCError, undefined];\n\nexport async function resolveResponse<TRouter extends AnyRouter>(\n  opts: ResolveHTTPRequestOptions<TRouter>,\n): Promise<Response> {\n  const { router, req } = opts;\n  const headers = new Headers([['vary', 'trpc-accept']]);\n  const config = router._def._config;\n\n  const url = new URL(req.url);\n\n  if (req.method === 'HEAD') {\n    // can be used for lambda warmup\n    return new Response(null, {\n      status: 204,\n    });\n  }\n\n  const allowBatching = opts.allowBatching ?? opts.batching?.enabled ?? true;\n  const allowMethodOverride =\n    (opts.allowMethodOverride ?? false) && req.method === 'POST';\n\n  type $Context = inferRouterContext<TRouter>;\n\n  const infoTuple: ResultTuple<TRPCRequestInfo> = await run(async () => {\n    try {\n      return [\n        undefined,\n        await getRequestInfo({\n          req,\n          path: decodeURIComponent(opts.path),\n          router,\n          searchParams: url.searchParams,\n          headers: opts.req.headers,\n          url,\n        }),\n      ];\n    } catch (cause) {\n      return [getTRPCErrorFromUnknown(cause), undefined];\n    }\n  });\n\n  interface ContextManager {\n    valueOrUndefined: () => $Context | undefined;\n    value: () => $Context;\n    create: (info: TRPCRequestInfo) => Promise<void>;\n  }\n  const ctxManager: ContextManager = run(() => {\n    let result: ResultTuple<$Context> | undefined = undefined;\n    return {\n      valueOrUndefined: () => {\n        if (!result) {\n          return undefined;\n        }\n        return result[1];\n      },\n      value: () => {\n        const [err, ctx] = result!;\n        if (err) {\n          throw err;\n        }\n        return ctx;\n      },\n      create: async (info) => {\n        if (result) {\n          throw new Error(\n            'This should only be called once - report a bug in tRPC',\n          );\n        }\n        try {\n          const ctx = await opts.createContext({\n            info,\n          });\n          result = [undefined, ctx];\n        } catch (cause) {\n          result = [getTRPCErrorFromUnknown(cause), undefined];\n        }\n      },\n    };\n  });\n\n  const methodMapper = allowMethodOverride\n    ? TYPE_ACCEPTED_METHOD_MAP_WITH_METHOD_OVERRIDE\n    : TYPE_ACCEPTED_METHOD_MAP;\n\n  /**\n   * @deprecated\n   */\n  const isStreamCall = req.headers.get('trpc-accept') === 'application/jsonl';\n\n  const experimentalSSE = config.sse?.enabled ?? true;\n  try {\n    const [infoError, info] = infoTuple;\n    if (infoError) {\n      throw infoError;\n    }\n    if (info.isBatchCall && !allowBatching) {\n      throw new TRPCError({\n        code: 'BAD_REQUEST',\n        message: `Batching is not enabled on the server`,\n      });\n    }\n    /* istanbul ignore if -- @preserve */\n    if (isStreamCall && !info.isBatchCall) {\n      throw new TRPCError({\n        message: `Streaming requests must be batched (you can do a batch of 1)`,\n        code: 'BAD_REQUEST',\n      });\n    }\n    await ctxManager.create(info);\n\n    interface RPCResultOk {\n      data: unknown;\n    }\n    type RPCResult = ResultTuple<RPCResultOk>;\n    const rpcCalls = info.calls.map(async (call): Promise<RPCResult> => {\n      const proc = call.procedure;\n      try {\n        if (opts.error) {\n          throw opts.error;\n        }\n\n        if (!proc) {\n          throw new TRPCError({\n            code: 'NOT_FOUND',\n            message: `No procedure found on path \"${call.path}\"`,\n          });\n        }\n\n        if (!methodMapper[proc._def.type].includes(req.method as HTTPMethods)) {\n          throw new TRPCError({\n            code: 'METHOD_NOT_SUPPORTED',\n            message: `Unsupported ${req.method}-request to ${proc._def.type} procedure at path \"${call.path}\"`,\n          });\n        }\n\n        if (proc._def.type === 'subscription') {\n          /* istanbul ignore if -- @preserve */\n          if (info.isBatchCall) {\n            throw new TRPCError({\n              code: 'BAD_REQUEST',\n              message: `Cannot batch subscription calls`,\n            });\n          }\n        }\n        const data: unknown = await proc({\n          path: call.path,\n          getRawInput: call.getRawInput,\n          ctx: ctxManager.value(),\n          type: proc._def.type,\n          signal: opts.req.signal,\n        });\n        return [undefined, { data }];\n      } catch (cause) {\n        const error = getTRPCErrorFromUnknown(cause);\n        const input = call.result();\n\n        opts.onError?.({\n          error,\n          path: call.path,\n          input,\n          ctx: ctxManager.valueOrUndefined(),\n          type: call.procedure?._def.type ?? 'unknown',\n          req: opts.req,\n        });\n\n        return [error, undefined];\n      }\n    });\n\n    // ----------- response handlers -----------\n    if (!info.isBatchCall) {\n      const [call] = info.calls;\n      const [error, result] = await rpcCalls[0]!;\n\n      switch (info.type) {\n        case 'unknown':\n        case 'mutation':\n        case 'query': {\n          // httpLink\n          headers.set('content-type', 'application/json');\n\n          if (isDataStream(result?.data)) {\n            throw new TRPCError({\n              code: 'UNSUPPORTED_MEDIA_TYPE',\n              message:\n                'Cannot use stream-like response in non-streaming request - use httpBatchStreamLink',\n            });\n          }\n          const res: TRPCResponse<unknown, inferRouterError<TRouter>> = error\n            ? {\n                error: getErrorShape({\n                  config,\n                  ctx: ctxManager.valueOrUndefined(),\n                  error,\n                  input: call!.result(),\n                  path: call!.path,\n                  type: info.type,\n                }),\n              }\n            : { result: { data: result.data } };\n\n          const headResponse = initResponse({\n            ctx: ctxManager.valueOrUndefined(),\n            info,\n            responseMeta: opts.responseMeta,\n            errors: error ? [error] : [],\n            headers,\n            untransformedJSON: [res],\n          });\n          return new Response(\n            JSON.stringify(transformTRPCResponse(config, res)),\n            {\n              status: headResponse.status,\n              headers,\n            },\n          );\n        }\n        case 'subscription': {\n          // httpSubscriptionLink\n\n          const iterable: AsyncIterable<unknown> = run(() => {\n            if (error) {\n              return errorToAsyncIterable(error);\n            }\n            if (!experimentalSSE) {\n              return errorToAsyncIterable(\n                new TRPCError({\n                  code: 'METHOD_NOT_SUPPORTED',\n                  message: 'Missing experimental flag \"sseSubscriptions\"',\n                }),\n              );\n            }\n\n            if (!isObservable(result.data) && !isAsyncIterable(result.data)) {\n              return errorToAsyncIterable(\n                new TRPCError({\n                  message: `Subscription ${\n                    call!.path\n                  } did not return an observable or a AsyncGenerator`,\n                  code: 'INTERNAL_SERVER_ERROR',\n                }),\n              );\n            }\n            const dataAsIterable = isObservable(result.data)\n              ? observableToAsyncIterable(result.data, opts.req.signal)\n              : result.data;\n            return dataAsIterable;\n          });\n\n          const stream = sseStreamProducer({\n            ...config.sse,\n            data: iterable,\n            serialize: (v) => config.transformer.output.serialize(v),\n            formatError(errorOpts) {\n              const error = getTRPCErrorFromUnknown(errorOpts.error);\n              const input = call?.result();\n              const path = call?.path;\n              const type = call?.procedure?._def.type ?? 'unknown';\n\n              opts.onError?.({\n                error,\n                path,\n                input,\n                ctx: ctxManager.valueOrUndefined(),\n                req: opts.req,\n                type,\n              });\n\n              const shape = getErrorShape({\n                config,\n                ctx: ctxManager.valueOrUndefined(),\n                error,\n                input,\n                path,\n                type,\n              });\n\n              return shape;\n            },\n          });\n          for (const [key, value] of Object.entries(sseHeaders)) {\n            headers.set(key, value);\n          }\n\n          const headResponse = initResponse({\n            ctx: ctxManager.valueOrUndefined(),\n            info,\n            responseMeta: opts.responseMeta,\n            errors: [],\n            headers,\n            untransformedJSON: null,\n          });\n\n          return new Response(stream, {\n            headers,\n            status: headResponse.status,\n          });\n        }\n      }\n    }\n\n    // batch response handlers\n    if (info.accept === 'application/jsonl') {\n      // httpBatchStreamLink\n      headers.set('content-type', 'application/json');\n      headers.set('transfer-encoding', 'chunked');\n      const headResponse = initResponse({\n        ctx: ctxManager.valueOrUndefined(),\n        info,\n        responseMeta: opts.responseMeta,\n        errors: [],\n        headers,\n        untransformedJSON: null,\n      });\n      const stream = jsonlStreamProducer({\n        ...config.jsonl,\n        /**\n         * Example structure for `maxDepth: 4`:\n         * {\n         *   // 1\n         *   0: {\n         *     // 2\n         *     result: {\n         *       // 3\n         *       data: // 4\n         *     }\n         *   }\n         * }\n         */\n        maxDepth: Infinity,\n        data: rpcCalls.map(async (res) => {\n          const [error, result] = await res;\n\n          const call = info.calls[0];\n\n          if (error) {\n            return {\n              error: getErrorShape({\n                config,\n                ctx: ctxManager.valueOrUndefined(),\n                error,\n                input: call!.result(),\n                path: call!.path,\n                type: call!.procedure?._def.type ?? 'unknown',\n              }),\n            };\n          }\n\n          /**\n           * Not very pretty, but we need to wrap nested data in promises\n           * Our stream producer will only resolve top-level async values or async values that are directly nested in another async value\n           */\n          const iterable = isObservable(result.data)\n            ? observableToAsyncIterable(result.data, opts.req.signal)\n            : Promise.resolve(result.data);\n          return {\n            result: Promise.resolve({\n              data: iterable,\n            }),\n          };\n        }),\n        serialize: (data) => config.transformer.output.serialize(data),\n        onError: (cause) => {\n          opts.onError?.({\n            error: getTRPCErrorFromUnknown(cause),\n            path: undefined,\n            input: undefined,\n            ctx: ctxManager.valueOrUndefined(),\n            req: opts.req,\n            type: info?.type ?? 'unknown',\n          });\n        },\n\n        formatError(errorOpts) {\n          const call = info?.calls[errorOpts.path[0] as any];\n\n          const error = getTRPCErrorFromUnknown(errorOpts.error);\n          const input = call?.result();\n          const path = call?.path;\n          const type = call?.procedure?._def.type ?? 'unknown';\n\n          // no need to call `onError` here as it will be propagated through the stream itself\n\n          const shape = getErrorShape({\n            config,\n            ctx: ctxManager.valueOrUndefined(),\n            error,\n            input,\n            path,\n            type,\n          });\n\n          return shape;\n        },\n      });\n\n      return new Response(stream, {\n        headers,\n        status: headResponse.status,\n      });\n    }\n\n    // httpBatchLink\n    /**\n     * Non-streaming response:\n     * - await all responses in parallel, blocking on the slowest one\n     * - create headers with known response body\n     * - return a complete HTTPResponse\n     */\n    headers.set('content-type', 'application/json');\n    const results: RPCResult[] = (await Promise.all(rpcCalls)).map(\n      (res): RPCResult => {\n        const [error, result] = res;\n        if (error) {\n          return res;\n        }\n\n        if (isDataStream(result.data)) {\n          return [\n            new TRPCError({\n              code: 'UNSUPPORTED_MEDIA_TYPE',\n              message:\n                'Cannot use stream-like response in non-streaming request - use httpBatchStreamLink',\n            }),\n            undefined,\n          ];\n        }\n        return res;\n      },\n    );\n    const resultAsRPCResponse = results.map(\n      (\n        [error, result],\n        index,\n      ): TRPCResponse<unknown, inferRouterError<TRouter>> => {\n        const call = info.calls[index]!;\n        if (error) {\n          return {\n            error: getErrorShape({\n              config,\n              ctx: ctxManager.valueOrUndefined(),\n              error,\n              input: call.result(),\n              path: call.path,\n              type: call.procedure?._def.type ?? 'unknown',\n            }),\n          };\n        }\n        return {\n          result: { data: result.data },\n        };\n      },\n    );\n\n    const errors = results\n      .map(([error]) => error)\n      .filter(Boolean) as TRPCError[];\n\n    const headResponse = initResponse({\n      ctx: ctxManager.valueOrUndefined(),\n      info,\n      responseMeta: opts.responseMeta,\n      untransformedJSON: resultAsRPCResponse,\n      errors,\n      headers,\n    });\n\n    return new Response(\n      JSON.stringify(transformTRPCResponse(config, resultAsRPCResponse)),\n      {\n        status: headResponse.status,\n        headers,\n      },\n    );\n  } catch (cause) {\n    const [_infoError, info] = infoTuple;\n    const ctx = ctxManager.valueOrUndefined();\n    // we get here if\n    // - batching is called when it's not enabled\n    // - `createContext()` throws\n    // - `router._def._config.transformer.output.serialize()` throws\n    // - post body is too large\n    // - input deserialization fails\n    // - `errorFormatter` return value is malformed\n    const { error, untransformedJSON, body } = caughtErrorToData(cause, {\n      opts,\n      ctx: ctxManager.valueOrUndefined(),\n      type: info?.type ?? 'unknown',\n    });\n\n    const headResponse = initResponse({\n      ctx,\n      info,\n      responseMeta: opts.responseMeta,\n      untransformedJSON,\n      errors: [error],\n      headers,\n    });\n\n    return new Response(body, {\n      status: headResponse.status,\n      headers,\n    });\n  }\n}\n"],"names":["parsed: unknown","str: string","fn: () => Promise<TReturn>","promise: Promise<TReturn> | null","value: TReturn | typeof sym","jsonContentTypeHandler: ContentTypeHandler","inputs: unknown","acc: InputRecord","type: ProcedureType | 'unknown'","info: TRPCRequestInfo","formDataContentTypeHandler: ContentTypeHandler","octetStreamContentTypeHandler: ContentTypeHandler","req: Request","handler","opts: GetRequestInfoOptions","error: unknown","isObject","o: unknown","arg: Promise<T> | PromiseLike<T> | PromiseExecutor<T>","promise: Promise<T>","unsubscribe: () => void","onfulfilled?:\n      | ((value: T) => TResult1 | PromiseLike<TResult1>)\n      | null","onrejected?:\n      | ((reason: any) => TResult2 | PromiseLike<TResult2>)\n      | null","onrejected?:\n      | ((reason: any) => TResult | PromiseLike<TResult>)\n      | null","onfinally?: (() => void) | null","promise: PromiseLike<T>","value: T | PromiseLike<T>","values: Iterable<T | PromiseLike<T>>","promises: readonly TPromise[]","promise: TPromise","resolve!: PromiseWithResolvers<T>[\"resolve\"]","reject!: PromiseWithResolvers<T>[\"reject\"]","arr: readonly T[]","member: T","index: number","member: unknown","thing: T","dispose: () => void","dispose: () => Promise<void>","ms: number","timer: ReturnType<typeof setTimeout> | null","r","e","n","o","OverloadYield","_awaitAsyncGenerator","OverloadYield","_wrapAsyncGenerator","r","t","e","iterable: AsyncIterable<TYield, TReturn, TNext>","iterable: AsyncIterable<T>","opts: { maxDurationMs: number }","result: null | IteratorResult<T> | typeof disposablePromiseTimerResult","opts: {\n    count: number;\n    gracePeriodMs: number;\n  }","resolve: (value: TValue) => void","reject: (error: unknown) => void","iterable: AsyncIterable<TYield, TReturn>","onResult: (result: ManagedIteratorResult<TYield, TReturn>) => void","state: 'idle' | 'pending' | 'done'","iterables: AsyncIterable<TYield, void, unknown>[]","buffer: Array<\n    [\n      iterator: ManagedIterator<TYield, void>,\n      result: Exclude<\n        ManagedIteratorResult<TYield, void>,\n        { status: 'return' }\n      >,\n    ]\n  >","iterable: AsyncIterable<TYield, void, unknown>","errors: unknown[]","iterable: AsyncIterable<TYield, void>","iterable: AsyncIterable<TValue>","pingIntervalMs: number","result:\n    | null\n    | IteratorResult<TValue>\n    | typeof disposablePromiseTimerResult","_asyncIterator","r","AsyncFromSyncIterator","value: unknown","path: (string | number)[]","opts: JSONLProducerOptions","callback: (idx: ChunkIndex) => AsyncIterable<ChunkData, void>","iterable","promise: Promise<unknown>","iterable: AsyncIterable<unknown>","newObj: Record<string, unknown>","asyncValues: ChunkDefinition[]","newHead: Head","iterable: AsyncIterable<ChunkData | typeof PING_SYM, void>","data: unknown","source: NodeJSReadableStreamEsque","from: NodeJSReadableStreamEsque | WebReadableStreamEsque","chunk: ChunkData","abortController: AbortController","originalController: ReadableStreamDefaultController<ChunkData>","v: ChunkData","reason: unknown","chunkId: ChunkIndex","opts: {\n  from: NodeJSReadableStreamEsque | WebReadableStreamEsque;\n  deserialize?: Deserialize;\n  onError?: ConsumerOnError;\n  formatError?: (opts: { error: unknown }) => Error;\n  /**\n   * This `AbortController` will be triggered when there are no more listeners to the stream.\n   */\n  abortController: AbortController;\n}","headDeferred: null | Deferred<THead>","value: ChunkDefinition","value","value: EncodedValue","reason?: unknown","_asyncGeneratorDelegate","e","n","t","opts: SSEStreamProducerOptions<TValue>","ping: Required<SSEPingOptions>","client: SSEClientOptions","iterable: AsyncIterable<TValue | typeof PING_SYM>","value: null | TIteratorValue","chunk: null | SSEvent","controller: TransformStreamDefaultController<string>","opts: {\n  promise: Promise<T>;\n  timeoutMs: number;\n  onTimeout: () => Promise<NoInfer<T>>;\n}","opts: SSEStreamConsumerOptions<TConfig>","clientOptions: SSEClientOptions","_es: InstanceType<TConfig['EventSource']> | null","options: SSEClientOptions","def: SSEvent","res: Awaited<typeof promise>","err: TRPCError","TYPE_ACCEPTED_METHOD_MAP: Record<ProcedureType, HTTPMethods[]>","TYPE_ACCEPTED_METHOD_MAP_WITH_METHOD_OVERRIDE: Record<\n  ProcedureType,\n  HTTPMethods[]\n>","initOpts: {\n  ctx: inferRouterContext<TRouter> | undefined;\n  info: TRPCRequestInfo | undefined;\n  responseMeta?: HTTPBaseHandlerOptions<TRouter, TRequest>['responseMeta'];\n  untransformedJSON:\n    | TRPCResponse<unknown, inferRouterError<TRouter>>\n    | TRPCResponse<unknown, inferRouterError<TRouter>>[]\n    | null;\n  errors: TRPCError[];\n  headers: Headers;\n}","cause: unknown","errorOpts: {\n    opts: Pick<\n      ResolveHTTPRequestOptions<TRouter>,\n      'onError' | 'req' | 'router'\n    >;\n    ctx: inferRouterContext<TRouter> | undefined;\n    type: ProcedureType | 'unknown';\n    path?: string;\n    input?: unknown;\n  }","v: unknown","opts: ResolveHTTPRequestOptions<TRouter>","infoTuple: ResultTuple<TRPCRequestInfo>","ctxManager: ContextManager","result: ResultTuple<$Context> | undefined","data: unknown","res: TRPCResponse<unknown, inferRouterError<TRouter>>","headResponse","iterable: AsyncIterable<unknown>","error","results: RPCResult[]"],"mappings":"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","debugId":null}},
    {"offset": {"line": 7644, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@trpc/client/dist/index.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/internals/TRPCUntypedClient.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/createTRPCUntypedClient.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/createTRPCClient.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/links/httpBatchStreamLink.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/internals/inputWithTrackedEventId.ts","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/asyncIterator.js","file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/links/httpSubscriptionLink.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/links/retryLink.ts","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/usingCtx.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/OverloadYield.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/awaitAsyncGenerator.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/wrapAsyncGenerator.js","file:///D:/github2/interview-prep-app/node_modules/%40trpc/client/src/links/localLink.ts"],"sourcesContent":["import type {\n  inferObservableValue,\n  Unsubscribable,\n} from '@trpc/server/observable';\nimport { observableToPromise, share } from '@trpc/server/observable';\nimport type {\n  AnyRouter,\n  inferAsyncIterableYield,\n  InferrableClientTypes,\n  Maybe,\n  TypeError,\n} from '@trpc/server/unstable-core-do-not-import';\nimport { createChain } from '../links/internals/createChain';\nimport type { TRPCConnectionState } from '../links/internals/subscriptions';\nimport type {\n  OperationContext,\n  OperationLink,\n  TRPCClientRuntime,\n  TRPCLink,\n} from '../links/types';\nimport { TRPCClientError } from '../TRPCClientError';\n\ntype TRPCType = 'mutation' | 'query' | 'subscription';\nexport interface TRPCRequestOptions {\n  /**\n   * Pass additional context to links\n   */\n  context?: OperationContext;\n  signal?: AbortSignal;\n}\n\nexport interface TRPCSubscriptionObserver<TValue, TError> {\n  onStarted: (opts: { context: OperationContext | undefined }) => void;\n  onData: (value: inferAsyncIterableYield<TValue>) => void;\n  onError: (err: TError) => void;\n  onStopped: () => void;\n  onComplete: () => void;\n  onConnectionStateChange: (state: TRPCConnectionState<TError>) => void;\n}\n\n/** @internal */\nexport type CreateTRPCClientOptions<TRouter extends InferrableClientTypes> = {\n  links: TRPCLink<TRouter>[];\n  transformer?: TypeError<'The transformer property has moved to httpLink/httpBatchLink/wsLink'>;\n};\n\nexport class TRPCUntypedClient<TInferrable extends InferrableClientTypes> {\n  private readonly links: OperationLink<TInferrable>[];\n  public readonly runtime: TRPCClientRuntime;\n  private requestId: number;\n\n  constructor(opts: CreateTRPCClientOptions<TInferrable>) {\n    this.requestId = 0;\n\n    this.runtime = {};\n\n    // Initialize the links\n    this.links = opts.links.map((link) => link(this.runtime));\n  }\n\n  private $request<TInput = unknown, TOutput = unknown>(opts: {\n    type: TRPCType;\n    input: TInput;\n    path: string;\n    context?: OperationContext;\n    signal: Maybe<AbortSignal>;\n  }) {\n    const chain$ = createChain<AnyRouter, TInput, TOutput>({\n      links: this.links as OperationLink<any, any, any>[],\n      op: {\n        ...opts,\n        context: opts.context ?? {},\n        id: ++this.requestId,\n      },\n    });\n    return chain$.pipe(share());\n  }\n\n  private async requestAsPromise<TInput = unknown, TOutput = unknown>(opts: {\n    type: TRPCType;\n    input: TInput;\n    path: string;\n    context?: OperationContext;\n    signal: Maybe<AbortSignal>;\n  }): Promise<TOutput> {\n    try {\n      const req$ = this.$request<TInput, TOutput>(opts);\n      type TValue = inferObservableValue<typeof req$>;\n\n      const envelope = await observableToPromise<TValue>(req$);\n      const data = (envelope.result as any).data;\n      return data;\n    } catch (err) {\n      throw TRPCClientError.from(err as Error);\n    }\n  }\n  public query(path: string, input?: unknown, opts?: TRPCRequestOptions) {\n    return this.requestAsPromise<unknown, unknown>({\n      type: 'query',\n      path,\n      input,\n      context: opts?.context,\n      signal: opts?.signal,\n    });\n  }\n  public mutation(path: string, input?: unknown, opts?: TRPCRequestOptions) {\n    return this.requestAsPromise<unknown, unknown>({\n      type: 'mutation',\n      path,\n      input,\n      context: opts?.context,\n      signal: opts?.signal,\n    });\n  }\n  public subscription(\n    path: string,\n    input: unknown,\n    opts: Partial<\n      TRPCSubscriptionObserver<unknown, TRPCClientError<AnyRouter>>\n    > &\n      TRPCRequestOptions,\n  ): Unsubscribable {\n    const observable$ = this.$request({\n      type: 'subscription',\n      path,\n      input,\n      context: opts.context,\n      signal: opts.signal,\n    });\n    return observable$.subscribe({\n      next(envelope) {\n        switch (envelope.result.type) {\n          case 'state': {\n            opts.onConnectionStateChange?.(envelope.result);\n            break;\n          }\n          case 'started': {\n            opts.onStarted?.({\n              context: envelope.context,\n            });\n            break;\n          }\n          case 'stopped': {\n            opts.onStopped?.();\n            break;\n          }\n          case 'data':\n          case undefined: {\n            opts.onData?.(envelope.result.data);\n            break;\n          }\n        }\n      },\n      error(err) {\n        opts.onError?.(err);\n      },\n      complete() {\n        opts.onComplete?.();\n      },\n    });\n  }\n}\n","import type { AnyRouter } from '@trpc/server/unstable-core-do-not-import';\nimport type { CreateTRPCClientOptions } from './internals/TRPCUntypedClient';\nimport { TRPCUntypedClient } from './internals/TRPCUntypedClient';\n\nexport function createTRPCUntypedClient<TRouter extends AnyRouter>(\n  opts: CreateTRPCClientOptions<TRouter>,\n): TRPCUntypedClient<TRouter> {\n  return new TRPCUntypedClient(opts);\n}\n\nexport type {\n  CreateTRPCClientOptions,\n  TRPCRequestOptions,\n} from './internals/TRPCUntypedClient';\nexport { TRPCUntypedClient } from './internals/TRPCUntypedClient';\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport type { Unsubscribable } from '@trpc/server/observable';\nimport type {\n  AnyProcedure,\n  AnyRouter,\n  inferClientTypes,\n  inferProcedureInput,\n  InferrableClientTypes,\n  inferTransformedProcedureOutput,\n  ProcedureType,\n  RouterRecord,\n} from '@trpc/server/unstable-core-do-not-import';\nimport {\n  createFlatProxy,\n  createRecursiveProxy,\n} from '@trpc/server/unstable-core-do-not-import';\nimport type { CreateTRPCClientOptions } from './createTRPCUntypedClient';\nimport type { TRPCSubscriptionObserver } from './internals/TRPCUntypedClient';\nimport { TRPCUntypedClient } from './internals/TRPCUntypedClient';\nimport type { TRPCProcedureOptions } from './internals/types';\nimport type { TRPCClientError } from './TRPCClientError';\n\n/**\n * @public\n * @deprecated use {@link TRPCClient} instead, will be removed in v12\n **/\nexport type inferRouterClient<TRouter extends AnyRouter> = TRPCClient<TRouter>;\n\n/**\n * @public\n * @deprecated use {@link TRPCClient} instead, will be removed in v12\n **/\nexport type CreateTRPCClient<TRouter extends AnyRouter> = TRPCClient<TRouter>;\n\nconst untypedClientSymbol = Symbol.for('trpc_untypedClient');\n\n/**\n * @public\n **/\nexport type TRPCClient<TRouter extends AnyRouter> = DecoratedProcedureRecord<\n  {\n    transformer: TRouter['_def']['_config']['$types']['transformer'];\n    errorShape: TRouter['_def']['_config']['$types']['errorShape'];\n  },\n  TRouter['_def']['record']\n> & {\n  [untypedClientSymbol]: TRPCUntypedClient<TRouter>;\n};\n\ntype ResolverDef = {\n  input: any;\n  output: any;\n  transformer: boolean;\n  errorShape: any;\n};\n\ntype coerceAsyncGeneratorToIterable<T> =\n  T extends AsyncGenerator<infer $T, infer $Return, infer $Next>\n    ? AsyncIterable<$T, $Return, $Next>\n    : T;\n\n/** @internal */\nexport type Resolver<TDef extends ResolverDef> = (\n  input: TDef['input'],\n  opts?: TRPCProcedureOptions,\n) => Promise<coerceAsyncGeneratorToIterable<TDef['output']>>;\n\ntype SubscriptionResolver<TDef extends ResolverDef> = (\n  input: TDef['input'],\n  opts: Partial<\n    TRPCSubscriptionObserver<TDef['output'], TRPCClientError<TDef>>\n  > &\n    TRPCProcedureOptions,\n) => Unsubscribable;\n\ntype DecorateProcedure<\n  TType extends ProcedureType,\n  TDef extends ResolverDef,\n> = TType extends 'query'\n  ? {\n      query: Resolver<TDef>;\n    }\n  : TType extends 'mutation'\n    ? {\n        mutate: Resolver<TDef>;\n      }\n    : TType extends 'subscription'\n      ? {\n          subscribe: SubscriptionResolver<TDef>;\n        }\n      : never;\n\n/**\n * @internal\n */\ntype DecoratedProcedureRecord<\n  TRoot extends InferrableClientTypes,\n  TRecord extends RouterRecord,\n> = {\n  [TKey in keyof TRecord]: TRecord[TKey] extends infer $Value\n    ? $Value extends AnyProcedure\n      ? DecorateProcedure<\n          $Value['_def']['type'],\n          {\n            input: inferProcedureInput<$Value>;\n            output: inferTransformedProcedureOutput<\n              inferClientTypes<TRoot>,\n              $Value\n            >;\n            errorShape: inferClientTypes<TRoot>['errorShape'];\n            transformer: inferClientTypes<TRoot>['transformer'];\n          }\n        >\n      : $Value extends RouterRecord\n        ? DecoratedProcedureRecord<TRoot, $Value>\n        : never\n    : never;\n};\n\nconst clientCallTypeMap: Record<\n  keyof DecorateProcedure<any, any>,\n  ProcedureType\n> = {\n  query: 'query',\n  mutate: 'mutation',\n  subscribe: 'subscription',\n};\n\n/** @internal */\nexport const clientCallTypeToProcedureType = (\n  clientCallType: string,\n): ProcedureType => {\n  return clientCallTypeMap[clientCallType as keyof typeof clientCallTypeMap];\n};\n\n/**\n * @internal\n */\nexport function createTRPCClientProxy<TRouter extends AnyRouter>(\n  client: TRPCUntypedClient<TRouter>,\n): TRPCClient<TRouter> {\n  const proxy = createRecursiveProxy<TRPCClient<TRouter>>(({ path, args }) => {\n    const pathCopy = [...path];\n    const procedureType = clientCallTypeToProcedureType(pathCopy.pop()!);\n\n    const fullPath = pathCopy.join('.');\n\n    return (client[procedureType] as any)(fullPath, ...(args as any));\n  });\n  return createFlatProxy<TRPCClient<TRouter>>((key) => {\n    if (key === untypedClientSymbol) {\n      return client;\n    }\n    return proxy[key];\n  });\n}\n\nexport function createTRPCClient<TRouter extends AnyRouter>(\n  opts: CreateTRPCClientOptions<TRouter>,\n): TRPCClient<TRouter> {\n  const client = new TRPCUntypedClient(opts);\n  const proxy = createTRPCClientProxy<TRouter>(client);\n  return proxy;\n}\n\n/**\n * Get an untyped client from a proxy client\n * @internal\n */\nexport function getUntypedClient<TRouter extends AnyRouter>(\n  client: TRPCClient<TRouter>,\n): TRPCUntypedClient<TRouter> {\n  return client[untypedClientSymbol];\n}\n","import type { AnyRouter, ProcedureType } from '@trpc/server';\nimport { observable } from '@trpc/server/observable';\nimport type { TRPCErrorShape, TRPCResponse } from '@trpc/server/rpc';\nimport { jsonlStreamConsumer } from '@trpc/server/unstable-core-do-not-import';\nimport type { BatchLoader } from '../internals/dataLoader';\nimport { dataLoader } from '../internals/dataLoader';\nimport { allAbortSignals, raceAbortSignals } from '../internals/signals';\nimport type { NonEmptyArray } from '../internals/types';\nimport { TRPCClientError } from '../TRPCClientError';\nimport type { HTTPBatchLinkOptions } from './HTTPBatchLinkOptions';\nimport type { HTTPResult } from './internals/httpUtils';\nimport {\n  fetchHTTPResponse,\n  getBody,\n  getUrl,\n  resolveHTTPLinkOptions,\n} from './internals/httpUtils';\nimport type { Operation, TRPCLink } from './types';\n\n/**\n * @see https://trpc.io/docs/client/links/httpBatchStreamLink\n */\nexport function httpBatchStreamLink<TRouter extends AnyRouter>(\n  opts: HTTPBatchLinkOptions<TRouter['_def']['_config']['$types']>,\n): TRPCLink<TRouter> {\n  const resolvedOpts = resolveHTTPLinkOptions(opts);\n  const maxURLLength = opts.maxURLLength ?? Infinity;\n  const maxItems = opts.maxItems ?? Infinity;\n\n  return () => {\n    const batchLoader = (\n      type: ProcedureType,\n    ): BatchLoader<Operation, HTTPResult> => {\n      return {\n        validate(batchOps) {\n          if (maxURLLength === Infinity && maxItems === Infinity) {\n            // escape hatch for quick calcs\n            return true;\n          }\n          if (batchOps.length > maxItems) {\n            return false;\n          }\n          const path = batchOps.map((op) => op.path).join(',');\n          const inputs = batchOps.map((op) => op.input);\n\n          const url = getUrl({\n            ...resolvedOpts,\n            type,\n            path,\n            inputs,\n            signal: null,\n          });\n\n          return url.length <= maxURLLength;\n        },\n        async fetch(batchOps) {\n          const path = batchOps.map((op) => op.path).join(',');\n          const inputs = batchOps.map((op) => op.input);\n\n          const batchSignals = allAbortSignals(\n            ...batchOps.map((op) => op.signal),\n          );\n          const abortController = new AbortController();\n\n          const responsePromise = fetchHTTPResponse({\n            ...resolvedOpts,\n            signal: raceAbortSignals(batchSignals, abortController.signal),\n            type,\n            contentTypeHeader: 'application/json',\n            trpcAcceptHeader: 'application/jsonl',\n            getUrl,\n            getBody,\n            inputs,\n            path,\n            headers() {\n              if (!opts.headers) {\n                return {};\n              }\n              if (typeof opts.headers === 'function') {\n                return opts.headers({\n                  opList: batchOps as NonEmptyArray<Operation>,\n                });\n              }\n              return opts.headers;\n            },\n          });\n\n          const res = await responsePromise;\n          const [head] = await jsonlStreamConsumer<\n            Record<string, Promise<any>>\n          >({\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            from: res.body!,\n            deserialize: (data) =>\n              resolvedOpts.transformer.output.deserialize(data),\n            // onError: console.error,\n            formatError(opts) {\n              const error = opts.error as TRPCErrorShape;\n              return TRPCClientError.from({\n                error,\n              });\n            },\n            abortController,\n          });\n          const promises = Object.keys(batchOps).map(\n            async (key): Promise<HTTPResult> => {\n              let json: TRPCResponse = await Promise.resolve(head[key]);\n\n              if ('result' in json) {\n                /**\n                 * Not very pretty, but we need to unwrap nested data as promises\n                 * Our stream producer will only resolve top-level async values or async values that are directly nested in another async value\n                 */\n                const result = await Promise.resolve(json.result);\n                json = {\n                  result: {\n                    data: await Promise.resolve(result.data),\n                  },\n                };\n              }\n\n              return {\n                json,\n                meta: {\n                  response: res,\n                },\n              };\n            },\n          );\n          return promises;\n        },\n      };\n    };\n\n    const query = dataLoader(batchLoader('query'));\n    const mutation = dataLoader(batchLoader('mutation'));\n\n    const loaders = { query, mutation };\n    return ({ op }) => {\n      return observable((observer) => {\n        /* istanbul ignore if -- @preserve */\n        if (op.type === 'subscription') {\n          throw new Error(\n            'Subscriptions are unsupported by `httpBatchStreamLink` - use `httpSubscriptionLink` or `wsLink`',\n          );\n        }\n        const loader = loaders[op.type];\n        const promise = loader.load(op);\n\n        let _res = undefined as HTTPResult | undefined;\n        promise\n          .then((res) => {\n            _res = res;\n            if ('error' in res.json) {\n              observer.error(\n                TRPCClientError.from(res.json, {\n                  meta: res.meta,\n                }),\n              );\n              return;\n            } else if ('result' in res.json) {\n              observer.next({\n                context: res.meta,\n                result: res.json.result,\n              });\n              observer.complete();\n              return;\n            }\n\n            observer.complete();\n          })\n          .catch((err) => {\n            observer.error(\n              TRPCClientError.from(err, {\n                meta: _res?.meta,\n              }),\n            );\n          });\n\n        return () => {\n          // noop\n        };\n      });\n    };\n  };\n}\n\n/**\n * @deprecated use {@link httpBatchStreamLink} instead\n */\nexport const unstable_httpBatchStreamLink = httpBatchStreamLink;\n","export function inputWithTrackedEventId(\n  input: unknown,\n  lastEventId: string | undefined,\n) {\n  if (!lastEventId) {\n    return input;\n  }\n  if (input != null && typeof input !== 'object') {\n    return input;\n  }\n  return {\n    ...(input ?? {}),\n    lastEventId,\n  };\n}\n","function _asyncIterator(r) {\n  var n,\n    t,\n    o,\n    e = 2;\n  for (\"undefined\" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) {\n    if (t && null != (n = r[t])) return n.call(r);\n    if (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r));\n    t = \"@@asyncIterator\", o = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(r) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var n = r.done;\n    return Promise.resolve(r.value).then(function (r) {\n      return {\n        value: r,\n        done: n\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(r) {\n    this.s = r, this.n = r.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(r) {\n      var n = this.s[\"return\"];\n      return void 0 === n ? Promise.resolve({\n        value: r,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(r) {\n      var n = this.s[\"return\"];\n      return void 0 === n ? Promise.reject(r) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(r);\n}\nmodule.exports = _asyncIterator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { behaviorSubject, observable } from '@trpc/server/observable';\nimport type { TRPCErrorShape, TRPCResult } from '@trpc/server/rpc';\nimport type {\n  AnyClientTypes,\n  EventSourceLike,\n  inferClientTypes,\n  InferrableClientTypes,\n} from '@trpc/server/unstable-core-do-not-import';\nimport {\n  retryableRpcCodes,\n  run,\n  sseStreamConsumer,\n} from '@trpc/server/unstable-core-do-not-import';\nimport { inputWithTrackedEventId } from '../internals/inputWithTrackedEventId';\nimport { raceAbortSignals } from '../internals/signals';\nimport { TRPCClientError } from '../TRPCClientError';\nimport type { TRPCConnectionState } from '../unstable-internals';\nimport { getTransformer, type TransformerOptions } from '../unstable-internals';\nimport { getUrl } from './internals/httpUtils';\nimport {\n  resultOf,\n  type UrlOptionsWithConnectionParams,\n} from './internals/urlWithConnectionParams';\nimport type { Operation, TRPCLink } from './types';\n\nasync function urlWithConnectionParams(\n  opts: UrlOptionsWithConnectionParams,\n): Promise<string> {\n  let url = await resultOf(opts.url);\n  if (opts.connectionParams) {\n    const params = await resultOf(opts.connectionParams);\n\n    const prefix = url.includes('?') ? '&' : '?';\n    url +=\n      prefix + 'connectionParams=' + encodeURIComponent(JSON.stringify(params));\n  }\n\n  return url;\n}\n\ntype HTTPSubscriptionLinkOptions<\n  TRoot extends AnyClientTypes,\n  TEventSource extends EventSourceLike.AnyConstructor = typeof EventSource,\n> = {\n  /**\n   * EventSource ponyfill\n   */\n  EventSource?: TEventSource;\n  /**\n   * EventSource options or a callback that returns them\n   */\n  eventSourceOptions?:\n    | EventSourceLike.InitDictOf<TEventSource>\n    | ((opts: {\n        op: Operation;\n      }) =>\n        | EventSourceLike.InitDictOf<TEventSource>\n        | Promise<EventSourceLike.InitDictOf<TEventSource>>);\n} & TransformerOptions<TRoot> &\n  UrlOptionsWithConnectionParams;\n\n/**\n * @see https://trpc.io/docs/client/links/httpSubscriptionLink\n */\nexport function httpSubscriptionLink<\n  TInferrable extends InferrableClientTypes,\n  TEventSource extends EventSourceLike.AnyConstructor,\n>(\n  opts: HTTPSubscriptionLinkOptions<\n    inferClientTypes<TInferrable>,\n    TEventSource\n  >,\n): TRPCLink<TInferrable> {\n  const transformer = getTransformer(opts.transformer);\n\n  return () => {\n    return ({ op }) => {\n      return observable((observer) => {\n        const { type, path, input } = op;\n\n        /* istanbul ignore if -- @preserve */\n        if (type !== 'subscription') {\n          throw new Error('httpSubscriptionLink only supports subscriptions');\n        }\n\n        let lastEventId: string | undefined = undefined;\n        const ac = new AbortController();\n        const signal = raceAbortSignals(op.signal, ac.signal);\n        const eventSourceStream = sseStreamConsumer<{\n          EventSource: TEventSource;\n          data: Partial<{\n            id?: string;\n            data: unknown;\n          }>;\n          error: TRPCErrorShape;\n        }>({\n          url: async () =>\n            getUrl({\n              transformer,\n              url: await urlWithConnectionParams(opts),\n              input: inputWithTrackedEventId(input, lastEventId),\n              path,\n              type,\n              signal: null,\n            }),\n          init: () => resultOf(opts.eventSourceOptions, { op }),\n          signal,\n          deserialize: (data) => transformer.output.deserialize(data),\n          EventSource:\n            opts.EventSource ??\n            (globalThis.EventSource as never as TEventSource),\n        });\n\n        const connectionState = behaviorSubject<\n          TRPCConnectionState<TRPCClientError<any>>\n        >({\n          type: 'state',\n          state: 'connecting',\n          error: null,\n        });\n\n        const connectionSub = connectionState.subscribe({\n          next(state) {\n            observer.next({\n              result: state,\n            });\n          },\n        });\n        run(async () => {\n          for await (const chunk of eventSourceStream) {\n            switch (chunk.type) {\n              case 'ping':\n                // do nothing\n                break;\n              case 'data':\n                const chunkData = chunk.data;\n\n                let result: TRPCResult<unknown>;\n                if (chunkData.id) {\n                  // if the `tracked()`-helper is used, we always have an `id` field\n                  lastEventId = chunkData.id;\n                  result = {\n                    id: chunkData.id,\n                    data: chunkData,\n                  };\n                } else {\n                  result = {\n                    data: chunkData.data,\n                  };\n                }\n\n                observer.next({\n                  result,\n                  context: {\n                    eventSource: chunk.eventSource,\n                  },\n                });\n                break;\n              case 'connected': {\n                observer.next({\n                  result: {\n                    type: 'started',\n                  },\n                  context: {\n                    eventSource: chunk.eventSource,\n                  },\n                });\n                connectionState.next({\n                  type: 'state',\n                  state: 'pending',\n                  error: null,\n                });\n                break;\n              }\n              case 'serialized-error': {\n                const error = TRPCClientError.from({ error: chunk.error });\n\n                if (retryableRpcCodes.includes(chunk.error.code)) {\n                  //\n                  connectionState.next({\n                    type: 'state',\n                    state: 'connecting',\n                    error,\n                  });\n                  break;\n                }\n                //\n                // non-retryable error, cancel the subscription\n                throw error;\n              }\n              case 'connecting': {\n                const lastState = connectionState.get();\n\n                const error = chunk.event && TRPCClientError.from(chunk.event);\n                if (!error && lastState.state === 'connecting') {\n                  break;\n                }\n\n                connectionState.next({\n                  type: 'state',\n                  state: 'connecting',\n                  error,\n                });\n                break;\n              }\n              case 'timeout': {\n                connectionState.next({\n                  type: 'state',\n                  state: 'connecting',\n                  error: new TRPCClientError(\n                    `Timeout of ${chunk.ms}ms reached while waiting for a response`,\n                  ),\n                });\n              }\n            }\n          }\n          observer.next({\n            result: {\n              type: 'stopped',\n            },\n          });\n          connectionState.next({\n            type: 'state',\n            state: 'idle',\n            error: null,\n          });\n          observer.complete();\n        }).catch((error) => {\n          observer.error(TRPCClientError.from(error));\n        });\n\n        return () => {\n          observer.complete();\n          ac.abort();\n          connectionSub.unsubscribe();\n        };\n      });\n    };\n  };\n}\n\n/**\n * @deprecated use {@link httpSubscriptionLink} instead\n */\nexport const unstable_httpSubscriptionLink = httpSubscriptionLink;\n","/* istanbul ignore file -- @preserve */\n// We're not actually exporting this link\nimport type { Unsubscribable } from '@trpc/server/observable';\nimport { observable } from '@trpc/server/observable';\nimport type { InferrableClientTypes } from '@trpc/server/unstable-core-do-not-import';\nimport { inputWithTrackedEventId } from '../internals/inputWithTrackedEventId';\nimport type { TRPCClientError } from '../TRPCClientError';\nimport type { Operation, TRPCLink } from './types';\n\ninterface RetryLinkOptions<TInferrable extends InferrableClientTypes> {\n  /**\n   * The retry function\n   */\n  retry: (opts: RetryFnOptions<TInferrable>) => boolean;\n  /**\n   * The delay between retries in ms (defaults to 0)\n   */\n  retryDelayMs?: (attempt: number) => number;\n}\n\ninterface RetryFnOptions<TInferrable extends InferrableClientTypes> {\n  /**\n   * The operation that failed\n   */\n  op: Operation;\n  /**\n   * The error that occurred\n   */\n  error: TRPCClientError<TInferrable>;\n  /**\n   * The number of attempts that have been made (including the first call)\n   */\n  attempts: number;\n}\n\n/**\n * @see https://trpc.io/docs/v11/client/links/retryLink\n */\nexport function retryLink<TInferrable extends InferrableClientTypes>(\n  opts: RetryLinkOptions<TInferrable>,\n): TRPCLink<TInferrable> {\n  // initialized config\n  return () => {\n    // initialized in app\n    return (callOpts) => {\n      // initialized for request\n      return observable((observer) => {\n        let next$: Unsubscribable;\n        let callNextTimeout: ReturnType<typeof setTimeout> | undefined =\n          undefined;\n\n        let lastEventId: string | undefined = undefined;\n\n        attempt(1);\n\n        function opWithLastEventId() {\n          const op = callOpts.op;\n          if (!lastEventId) {\n            return op;\n          }\n\n          return {\n            ...op,\n            input: inputWithTrackedEventId(op.input, lastEventId),\n          };\n        }\n\n        function attempt(attempts: number) {\n          const op = opWithLastEventId();\n\n          next$ = callOpts.next(op).subscribe({\n            error(error) {\n              const shouldRetry = opts.retry({\n                op,\n                attempts,\n                error,\n              });\n              if (!shouldRetry) {\n                observer.error(error);\n                return;\n              }\n              const delayMs = opts.retryDelayMs?.(attempts) ?? 0;\n\n              if (delayMs <= 0) {\n                attempt(attempts + 1);\n                return;\n              }\n              callNextTimeout = setTimeout(\n                () => attempt(attempts + 1),\n                delayMs,\n              );\n            },\n            next(envelope) {\n              //\n              if (\n                (!envelope.result.type || envelope.result.type === 'data') &&\n                envelope.result.id\n              ) {\n                //\n                lastEventId = envelope.result.id;\n              }\n\n              observer.next(envelope);\n            },\n            complete() {\n              observer.complete();\n            },\n          });\n        }\n        return () => {\n          next$.unsubscribe();\n          clearTimeout(callNextTimeout);\n        };\n      });\n    };\n  };\n}\n","function _usingCtx() {\n  var r = \"function\" == typeof SuppressedError ? SuppressedError : function (r, e) {\n      var n = Error();\n      return n.name = \"SuppressedError\", n.error = r, n.suppressed = e, n;\n    },\n    e = {},\n    n = [];\n  function using(r, e) {\n    if (null != e) {\n      if (Object(e) !== e) throw new TypeError(\"using declarations can only be used with objects, functions, null, or undefined.\");\n      if (r) var o = e[Symbol.asyncDispose || Symbol[\"for\"](\"Symbol.asyncDispose\")];\n      if (void 0 === o && (o = e[Symbol.dispose || Symbol[\"for\"](\"Symbol.dispose\")], r)) var t = o;\n      if (\"function\" != typeof o) throw new TypeError(\"Object is not disposable.\");\n      t && (o = function o() {\n        try {\n          t.call(e);\n        } catch (r) {\n          return Promise.reject(r);\n        }\n      }), n.push({\n        v: e,\n        d: o,\n        a: r\n      });\n    } else r && n.push({\n      d: e,\n      a: r\n    });\n    return e;\n  }\n  return {\n    e: e,\n    u: using.bind(null, !1),\n    a: using.bind(null, !0),\n    d: function d() {\n      var o,\n        t = this.e,\n        s = 0;\n      function next() {\n        for (; o = n.pop();) try {\n          if (!o.a && 1 === s) return s = 0, n.push(o), Promise.resolve().then(next);\n          if (o.d) {\n            var r = o.d.call(o.v);\n            if (o.a) return s |= 2, Promise.resolve(r).then(next, err);\n          } else s |= 1;\n        } catch (r) {\n          return err(r);\n        }\n        if (1 === s) return t !== e ? Promise.reject(t) : Promise.resolve();\n        if (t !== e) throw t;\n      }\n      function err(n) {\n        return t = t !== e ? new r(n, t) : n, next();\n      }\n      return next();\n    }\n  };\n}\nmodule.exports = _usingCtx, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _OverloadYield(e, d) {\n  this.v = e, this.k = d;\n}\nmodule.exports = _OverloadYield, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var OverloadYield = require(\"./OverloadYield.js\");\nfunction _awaitAsyncGenerator(e) {\n  return new OverloadYield(e, 0);\n}\nmodule.exports = _awaitAsyncGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var OverloadYield = require(\"./OverloadYield.js\");\nfunction _wrapAsyncGenerator(e) {\n  return function () {\n    return new AsyncGenerator(e.apply(this, arguments));\n  };\n}\nfunction AsyncGenerator(e) {\n  var r, t;\n  function resume(r, t) {\n    try {\n      var n = e[r](t),\n        o = n.value,\n        u = o instanceof OverloadYield;\n      Promise.resolve(u ? o.v : o).then(function (t) {\n        if (u) {\n          var i = \"return\" === r ? \"return\" : \"next\";\n          if (!o.k || t.done) return resume(i, t);\n          t = e[i](t).value;\n        }\n        settle(n.done ? \"return\" : \"normal\", t);\n      }, function (e) {\n        resume(\"throw\", e);\n      });\n    } catch (e) {\n      settle(\"throw\", e);\n    }\n  }\n  function settle(e, n) {\n    switch (e) {\n      case \"return\":\n        r.resolve({\n          value: n,\n          done: !0\n        });\n        break;\n      case \"throw\":\n        r.reject(n);\n        break;\n      default:\n        r.resolve({\n          value: n,\n          done: !1\n        });\n    }\n    (r = r.next) ? resume(r.key, r.arg) : t = null;\n  }\n  this._invoke = function (e, n) {\n    return new Promise(function (o, u) {\n      var i = {\n        key: e,\n        arg: n,\n        resolve: o,\n        reject: u,\n        next: null\n      };\n      t ? t = t.next = i : (r = t = i, resume(e, n));\n    });\n  }, \"function\" != typeof e[\"return\"] && (this[\"return\"] = void 0);\n}\nAsyncGenerator.prototype[\"function\" == typeof Symbol && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n}, AsyncGenerator.prototype.next = function (e) {\n  return this._invoke(\"next\", e);\n}, AsyncGenerator.prototype[\"throw\"] = function (e) {\n  return this._invoke(\"throw\", e);\n}, AsyncGenerator.prototype[\"return\"] = function (e) {\n  return this._invoke(\"return\", e);\n};\nmodule.exports = _wrapAsyncGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import {\n  getTRPCErrorFromUnknown,\n  getTRPCErrorShape,\n  isTrackedEnvelope,\n} from '@trpc/server';\nimport { behaviorSubject, observable } from '@trpc/server/observable';\nimport { TRPC_ERROR_CODES_BY_KEY, type TRPCResult } from '@trpc/server/rpc';\nimport {\n  callProcedure,\n  isAbortError,\n  isAsyncIterable,\n  iteratorResource,\n  makeResource,\n  retryableRpcCodes,\n  run,\n  type AnyRouter,\n  type ErrorHandlerOptions,\n  type inferClientTypes,\n  type inferRouterContext,\n} from '@trpc/server/unstable-core-do-not-import';\nimport { inputWithTrackedEventId } from '../internals/inputWithTrackedEventId';\nimport { abortSignalToPromise, raceAbortSignals } from '../internals/signals';\nimport { getTransformer } from '../internals/transformer';\nimport type { TransformerOptions } from '../internals/transformer';\nimport { isTRPCClientError, TRPCClientError } from '../TRPCClientError';\nimport type { TRPCConnectionState } from './internals/subscriptions';\nimport type { TRPCLink } from './types';\n\nexport type LocalLinkOptions<TRouter extends AnyRouter> = {\n  router: TRouter;\n  createContext: () => Promise<inferRouterContext<TRouter>>;\n  onError?: (opts: ErrorHandlerOptions<inferRouterContext<TRouter>>) => void;\n} & TransformerOptions<inferClientTypes<TRouter>>;\n\n/**\n * localLink is a terminating link that allows you to make tRPC procedure calls directly in your application without going through HTTP.\n *\n * @see https://trpc.io/docs/links/localLink\n */\nexport function unstable_localLink<TRouter extends AnyRouter>(\n  opts: LocalLinkOptions<TRouter>,\n): TRPCLink<TRouter> {\n  const transformer = getTransformer(opts.transformer);\n\n  const transformChunk = (chunk: unknown) => {\n    if (opts.transformer) {\n      // assume transformer will do the right thing\n      return chunk;\n    }\n    // Special case for undefined, because `JSON.stringify(undefined)` throws\n    if (chunk === undefined) {\n      return chunk;\n    }\n    const serialized = JSON.stringify(transformer.input.serialize(chunk));\n    const deserialized = JSON.parse(transformer.output.deserialize(serialized));\n    return deserialized;\n  };\n\n  return () =>\n    ({ op }) =>\n      observable((observer) => {\n        let ctx: inferRouterContext<TRouter> | undefined = undefined;\n        const ac = new AbortController();\n\n        const signal = raceAbortSignals(op.signal, ac.signal);\n        const signalPromise = abortSignalToPromise(signal);\n\n        signalPromise.catch(() => {\n          // prevent unhandled rejection\n        });\n\n        let input = op.input;\n        async function runProcedure(newInput: unknown): Promise<unknown> {\n          input = newInput;\n\n          ctx = await opts.createContext();\n\n          return callProcedure({\n            router: opts.router,\n            path: op.path,\n            getRawInput: async () => newInput,\n            ctx,\n            type: op.type,\n            signal,\n          });\n        }\n\n        function onErrorCallback(cause: unknown) {\n          if (isAbortError(cause)) {\n            return;\n          }\n          opts.onError?.({\n            error: getTRPCErrorFromUnknown(cause),\n            type: op.type,\n            path: op.path,\n            input,\n            ctx,\n          });\n        }\n\n        function coerceToTRPCClientError(cause: unknown) {\n          if (isTRPCClientError<TRouter>(cause)) {\n            return cause;\n          }\n          const error = getTRPCErrorFromUnknown(cause);\n\n          const shape = getTRPCErrorShape({\n            config: opts.router._def._config,\n            ctx,\n            error,\n            input,\n            path: op.path,\n            type: op.type,\n          });\n          return TRPCClientError.from({\n            error: transformChunk(shape),\n          });\n        }\n\n        run(async () => {\n          switch (op.type) {\n            case 'query':\n            case 'mutation': {\n              const result = await runProcedure(op.input);\n              if (!isAsyncIterable(result)) {\n                observer.next({\n                  result: { data: transformChunk(result) },\n                });\n                observer.complete();\n                break;\n              }\n\n              observer.next({\n                result: {\n                  data: (async function* () {\n                    await using iterator = iteratorResource(result);\n                    using _finally = makeResource({}, () => {\n                      observer.complete();\n                    });\n                    try {\n                      while (true) {\n                        const res = await Promise.race([\n                          iterator.next(),\n                          signalPromise,\n                        ]);\n                        if (res.done) {\n                          return transformChunk(res.value);\n                        }\n                        yield transformChunk(res.value);\n                      }\n                    } catch (cause) {\n                      onErrorCallback(cause);\n                      throw coerceToTRPCClientError(cause);\n                    }\n                  })(),\n                },\n              });\n              break;\n            }\n            case 'subscription': {\n              const connectionState = behaviorSubject<\n                TRPCConnectionState<TRPCClientError<any>>\n              >({\n                type: 'state',\n                state: 'connecting',\n                error: null,\n              });\n\n              const connectionSub = connectionState.subscribe({\n                next(state) {\n                  observer.next({\n                    result: state,\n                  });\n                },\n              });\n              let lastEventId: string | undefined = undefined;\n\n              using _finally = makeResource({}, async () => {\n                observer.complete();\n\n                connectionState.next({\n                  type: 'state',\n                  state: 'idle',\n                  error: null,\n                });\n                connectionSub.unsubscribe();\n              });\n              while (true) {\n                const result = await runProcedure(\n                  inputWithTrackedEventId(op.input, lastEventId),\n                );\n                if (!isAsyncIterable(result)) {\n                  throw new Error('Expected an async iterable');\n                }\n                await using iterator = iteratorResource(result);\n\n                observer.next({\n                  result: {\n                    type: 'started',\n                  },\n                });\n                connectionState.next({\n                  type: 'state',\n                  state: 'pending',\n                  error: null,\n                });\n\n                // Use a while loop to handle errors and reconnects\n                while (true) {\n                  let res;\n                  try {\n                    res = await Promise.race([iterator.next(), signalPromise]);\n                  } catch (cause) {\n                    if (isAbortError(cause)) {\n                      return;\n                    }\n                    const error = getTRPCErrorFromUnknown(cause);\n\n                    if (\n                      !retryableRpcCodes.includes(\n                        TRPC_ERROR_CODES_BY_KEY[error.code],\n                      )\n                    ) {\n                      throw coerceToTRPCClientError(error);\n                    }\n\n                    onErrorCallback(error);\n                    connectionState.next({\n                      type: 'state',\n                      state: 'connecting',\n                      error: coerceToTRPCClientError(error),\n                    });\n\n                    break;\n                  }\n\n                  if (res.done) {\n                    return;\n                  }\n                  let chunk: TRPCResult<unknown>;\n                  if (isTrackedEnvelope(res.value)) {\n                    lastEventId = res.value[0];\n\n                    chunk = {\n                      id: res.value[0],\n                      data: {\n                        id: res.value[0],\n                        data: res.value[1],\n                      },\n                    };\n                  } else {\n                    chunk = {\n                      data: res.value,\n                    };\n                  }\n\n                  observer.next({\n                    result: {\n                      ...chunk,\n                      data: transformChunk(chunk.data),\n                    },\n                  });\n                }\n              }\n              break;\n            }\n          }\n        }).catch((cause) => {\n          onErrorCallback(cause);\n          observer.error(coerceToTRPCClientError(cause));\n        });\n\n        return () => {\n          ac.abort();\n        };\n      });\n}\n/**\n * @deprecated Renamed to `unstable_localLink`. This alias will be removed in a future major release.\n */\nexport const experimental_localLink: typeof unstable_localLink =\n  unstable_localLink;\n"],"names":["opts: CreateTRPCClientOptions<TInferrable>","opts: {\n    type: TRPCType;\n    input: TInput;\n    path: string;\n    context?: OperationContext;\n    signal: Maybe<AbortSignal>;\n  }","path: string","input?: unknown","opts?: TRPCRequestOptions","input: unknown","opts: Partial<\n      TRPCSubscriptionObserver<unknown, TRPCClientError<AnyRouter>>\n    > &\n      TRPCRequestOptions","opts: CreateTRPCClientOptions<TRouter>","clientCallTypeMap: Record<\n  keyof DecorateProcedure<any, any>,\n  ProcedureType\n>","clientCallType: string","client: TRPCUntypedClient<TRouter>","opts: CreateTRPCClientOptions<TRouter>","client: TRPCClient<TRouter>","opts: HTTPBatchLinkOptions<TRouter['_def']['_config']['$types']>","type: ProcedureType","opts","json: TRPCResponse","input: unknown","lastEventId: string | undefined","_asyncIterator","r","AsyncFromSyncIterator","opts: UrlOptionsWithConnectionParams","opts: HTTPSubscriptionLinkOptions<\n    inferClientTypes<TInferrable>,\n    TEventSource\n  >","lastEventId: string | undefined","result: TRPCResult<unknown>","opts: RetryLinkOptions<TInferrable>","next$: Unsubscribable","callNextTimeout: ReturnType<typeof setTimeout> | undefined","lastEventId: string | undefined","attempts: number","r","e","n","o","OverloadYield","_awaitAsyncGenerator","_wrapAsyncGenerator","r","t","e","opts: LocalLinkOptions<TRouter>","chunk: unknown","ctx: inferRouterContext<TRouter> | undefined","newInput: unknown","cause: unknown","lastEventId: string | undefined","chunk: TRPCResult<unknown>","experimental_localLink: typeof unstable_localLink"],"mappings":"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","debugId":null}},
    {"offset": {"line": 8635, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/superjson/dist/double-indexed-kv.js","sources":["file:///D:/github2/interview-prep-app/node_modules/superjson/src/double-indexed-kv.ts"],"sourcesContent":["unable to read source [project]/node_modules/superjson/src/double-indexed-kv.ts"],"names":[],"mappings":";;;;AAAM,MAAO,eAAe;IAA5B,aAAA;QACE,IAAA,CAAA,UAAU,GAAG,IAAI,GAAG,EAAQ,CAAC;QAC7B,IAAA,CAAA,UAAU,GAAG,IAAI,GAAG,EAAQ,CAAC;IAmB/B,CAAC;IAjBC,GAAG,CAAC,GAAM,EAAE,KAAQ,EAAA;QAClB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAClC,CAAC;IAED,QAAQ,CAAC,GAAM,EAAA;QACb,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;IAED,UAAU,CAAC,KAAQ,EAAA;QACjB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAED,KAAK,GAAA;QACH,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;CACF","debugId":null}},
    {"offset": {"line": 8663, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/superjson/dist/registry.js","sources":["file:///D:/github2/interview-prep-app/node_modules/superjson/src/registry.ts"],"sourcesContent":["unable to read source [project]/node_modules/superjson/src/registry.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;;AAEnD,MAAO,QAAQ;IAGnB,YAA6B,kBAAoC,CAAA;QAApC,IAAA,CAAA,kBAAkB,GAAlB,kBAAkB,CAAkB;QAFzD,IAAA,CAAA,EAAE,GAAG,IAAI,+KAAe,EAAa,CAAC;IAEsB,CAAC;IAErE,QAAQ,CAAC,KAAQ,EAAE,UAAmB,EAAA;QACpC,IAAI,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;YAC7B,OAAO;SACR;QAED,IAAI,CAAC,UAAU,EAAE;YACf,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;SAC7C;QAED,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,KAAK,GAAA;QACH,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;IAClB,CAAC;IAED,aAAa,CAAC,KAAQ,EAAA;QACpB,OAAO,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ,CAAC,UAAkB,EAAA;QACzB,OAAO,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;CACF","debugId":null}},
    {"offset": {"line": 8697, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/superjson/dist/class-registry.js","sources":["file:///D:/github2/interview-prep-app/node_modules/superjson/src/class-registry.ts"],"sourcesContent":["unable to read source [project]/node_modules/superjson/src/class-registry.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;;AAQnC,MAAO,aAAc,SAAQ,yJAAe;IAChD,aAAA;QACE,KAAK,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAGb,IAAA,CAAA,mBAAmB,GAAG,IAAI,GAAG,EAAmB,CAAC;IAFzD,CAAC;IAID,QAAQ,CAAC,KAAY,EAAE,OAAkC,EAAA;QACvD,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;YAC/B,IAAI,OAAO,CAAC,UAAU,EAAE;gBACtB,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;aACzD;YAED,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;SAC3C,MAAM;YACL,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;SAChC;IACH,CAAC;IAED,eAAe,CAAC,KAAY,EAAA;QAC1B,OAAO,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC7C,CAAC;CACF","debugId":null}},
    {"offset": {"line": 8726, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/superjson/dist/util.js","sources":["file:///D:/github2/interview-prep-app/node_modules/superjson/src/util.ts"],"sourcesContent":["unable to read source [project]/node_modules/superjson/src/util.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,SAAS,WAAW,CAAI,MAAyB;IAC/C,IAAI,QAAQ,IAAI,MAAM,EAAE;QACtB,8CAA8C;QAC9C,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;KAC9B;IAED,MAAM,MAAM,GAAQ,EAAE,CAAC;IAEvB,gDAAgD;IAChD,IAAK,MAAM,GAAG,IAAI,MAAM,CAAE;QACxB,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;YAC9B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;SAC1B;KACF;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAEK,SAAU,IAAI,CAClB,MAAyB,EACzB,SAA4B;IAE5B,MAAM,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;IACnC,IAAI,MAAM,IAAI,MAAM,EAAE;QACpB,8CAA8C;QAC9C,OAAO,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC/B;IAED,MAAM,cAAc,GAAG,MAAa,CAAC;IAErC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;QAC9C,MAAM,KAAK,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;QAChC,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;YACpB,OAAO,KAAK,CAAC;SACd;KACF;IAED,OAAO,SAAS,CAAC;AACnB,CAAC;AAEK,SAAU,OAAO,CACrB,MAAyB,EACzB,GAAgC;IAEhC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAG,CAAD,EAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;AACpE,CAAC;AAEK,SAAU,QAAQ,CAAI,GAAQ,EAAE,KAAQ;IAC5C,OAAO,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AACnC,CAAC;AAEK,SAAU,OAAO,CACrB,MAAW,EACX,SAA4B;IAE5B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;QACtC,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;YACpB,OAAO,KAAK,CAAC;SACd;KACF;IAED,OAAO,SAAS,CAAC;AACnB,CAAC","debugId":null}},
    {"offset": {"line": 8784, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/superjson/dist/custom-transformer-registry.js","sources":["file:///D:/github2/interview-prep-app/node_modules/superjson/src/custom-transformer-registry.ts"],"sourcesContent":["unable to read source [project]/node_modules/superjson/src/custom-transformer-registry.ts"],"names":[],"mappings":";;;;AACA,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;;AAS3B,MAAO,yBAAyB;IAAtC,aAAA;QACU,IAAA,CAAA,WAAW,GAA+C,CAAA,CAAE,CAAC;IAevE,CAAC;IAbC,QAAQ,CAAyB,WAAmC,EAAA;QAClE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC;IACnD,CAAC;IAED,cAAc,CAAI,CAAI,EAAA;QACpB,WAAO,iJAAI,EAAC,IAAI,CAAC,WAAW,GAAE,WAAW,CAAC,EAAE,AAC1C,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,CACkB,CAAC;IAClD,CAAC;IAED,UAAU,CAAC,IAAY,EAAA;QACrB,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;CACF","debugId":null}},
    {"offset": {"line": 8808, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/superjson/dist/is.js","sources":["file:///D:/github2/interview-prep-app/node_modules/superjson/src/is.ts"],"sourcesContent":["unable to read source [project]/node_modules/superjson/src/is.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8880, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/superjson/dist/pathstringifier.js","sources":["file:///D:/github2/interview-prep-app/node_modules/superjson/src/pathstringifier.ts"],"sourcesContent":["unable to read source [project]/node_modules/superjson/src/pathstringifier.ts"],"names":[],"mappings":";;;;;;;;AAGO,MAAM,SAAS,GAAG,CAAC,GAAW,EAAE,CACrC,CADuC,EACpC,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAE5C,MAAM,aAAa,GAAG,CAAC,IAAU,EAAmB,CACzD,CAD2D,GACvD,CACD,GAAG,CAAC,MAAM,CAAC,CACX,GAAG,CAAC,SAAS,CAAC,CACd,IAAI,CAAC,GAAG,CAAC,CAAC;AAER,MAAM,SAAS,GAAG,CAAC,MAAuB,EAAE,WAAoB,EAAE,EAAE;IACzE,MAAM,MAAM,GAAa,EAAE,CAAC;IAE5B,IAAI,OAAO,GAAG,EAAE,CAAC;IACjB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;QACtC,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAE5B,IAAI,CAAC,WAAW,IAAI,IAAI,KAAK,IAAI,EAAE;YACjC,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACrC,IAAI,OAAO,KAAK,IAAI,EAAE;gBACpB,OAAO,IAAI,IAAI,CAAC;gBAChB,CAAC,EAAE,CAAC;gBACJ,SAAS;aACV,MAAM,IAAI,OAAO,KAAK,GAAG,EAAE;gBAC1B,MAAM,KAAK,CAAC,cAAc,CAAC,CAAC;aAC7B;SACF;QAED,MAAM,YAAY,GAAG,IAAI,KAAK,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC;QACnE,IAAI,YAAY,EAAE;YAChB,OAAO,IAAI,GAAG,CAAC;YACf,CAAC,EAAE,CAAC;YACJ,SAAS;SACV;QAED,MAAM,cAAc,GAAG,IAAI,KAAK,GAAG,CAAC;QACpC,IAAI,cAAc,EAAE;YAClB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrB,OAAO,GAAG,EAAE,CAAC;YACb,SAAS;SACV;QAED,OAAO,IAAI,IAAI,CAAC;KACjB;IAED,MAAM,WAAW,GAAG,OAAO,CAAC;IAC5B,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAEzB,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 8927, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/superjson/dist/transformer.js","sources":["file:///D:/github2/interview-prep-app/node_modules/superjson/src/transformer.ts"],"sourcesContent":["unable to read source [project]/node_modules/superjson/src/transformer.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9164, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/superjson/dist/accessDeep.js","sources":["file:///D:/github2/interview-prep-app/node_modules/superjson/src/accessDeep.ts"],"sourcesContent":["unable to read source [project]/node_modules/superjson/src/accessDeep.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9293, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/superjson/dist/plainer.js","sources":["file:///D:/github2/interview-prep-app/node_modules/superjson/src/plainer.ts"],"sourcesContent":["unable to read source [project]/node_modules/superjson/src/plainer.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9489, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/is-what/dist/getType.js"],"sourcesContent":["/** Returns the object type of the given payload */\nexport function getType(payload) {\n    return Object.prototype.toString.call(payload).slice(8, -1);\n}\n"],"names":[],"mappings":"AAAA,iDAAiD;;;;AAC1C,SAAS,QAAQ,OAAO;IAC3B,OAAO,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,KAAK,CAAC,GAAG,CAAC;AAC7D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9500, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/is-what/dist/isArray.js"],"sourcesContent":["import { getType } from './getType.js';\n/** Returns whether the payload is an array */\nexport function isArray(payload) {\n    return getType(payload) === 'Array';\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,SAAS,QAAQ,OAAO;IAC3B,OAAO,IAAA,wJAAO,EAAC,aAAa;AAChC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9513, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/is-what/dist/isPlainObject.js"],"sourcesContent":["import { getType } from './getType.js';\n/**\n * Returns whether the payload is a plain JavaScript object (excluding special classes or objects\n * with other prototypes)\n */\nexport function isPlainObject(payload) {\n    if (getType(payload) !== 'Object')\n        return false;\n    const prototype = Object.getPrototypeOf(payload);\n    return !!prototype && prototype.constructor === Object && prototype === Object.prototype;\n}\n"],"names":[],"mappings":";;;;AAAA;;AAKO,SAAS,cAAc,OAAO;IACjC,IAAI,IAAA,wJAAO,EAAC,aAAa,UACrB,OAAO;IACX,MAAM,YAAY,OAAO,cAAc,CAAC;IACxC,OAAO,CAAC,CAAC,aAAa,UAAU,WAAW,KAAK,UAAU,cAAc,OAAO,SAAS;AAC5F","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9528, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/copy-anything/dist/index.js"],"sourcesContent":["import { isArray, isPlainObject } from 'is-what';\nfunction assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\n    const propType = {}.propertyIsEnumerable.call(originalObject, key)\n        ? 'enumerable'\n        : 'nonenumerable';\n    if (propType === 'enumerable')\n        carry[key] = newVal;\n    if (includeNonenumerable && propType === 'nonenumerable') {\n        Object.defineProperty(carry, key, {\n            value: newVal,\n            enumerable: false,\n            writable: true,\n            configurable: true,\n        });\n    }\n}\n/**\n * Copy (clone) an object and all its props recursively to get rid of any prop referenced of the\n * original object. Arrays are also cloned, however objects inside arrays are still linked.\n *\n * @param target Target can be anything\n * @param [options={}] See type {@link Options} for more details.\n *\n *   - `{ props: ['key1'] }` will only copy the `key1` property. When using this you will need to cast\n *       the return type manually (in order to keep the TS implementation in here simple I didn't\n *       built a complex auto resolved type for those few cases people want to use this option)\n *   - `{ nonenumerable: true }` will copy all non-enumerable properties. Default is `{}`\n *\n * @returns The target with replaced values\n */\nexport function copy(target, options = {}) {\n    if (isArray(target)) {\n        return target.map((item) => copy(item, options));\n    }\n    if (!isPlainObject(target)) {\n        return target;\n    }\n    const props = Object.getOwnPropertyNames(target);\n    const symbols = Object.getOwnPropertySymbols(target);\n    return [...props, ...symbols].reduce((carry, key) => {\n        // Skip __proto__ properties to prevent prototype pollution\n        if (key === '__proto__')\n            return carry;\n        if (isArray(options.props) && !options.props.includes(key)) {\n            return carry;\n        }\n        const val = target[key];\n        const newVal = copy(val, options);\n        assignProp(carry, key, newVal, target, options.nonenumerable);\n        return carry;\n    }, {});\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AACA,SAAS,WAAW,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,cAAc,EAAE,oBAAoB;IACxE,MAAM,WAAW,CAAA,CAAC,CAAA,EAAE,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,OACxD,eACA;IACN,IAAI,aAAa,cACb,KAAK,CAAC,IAAI,GAAG;IACjB,IAAI,wBAAwB,aAAa,iBAAiB;QACtD,OAAO,cAAc,CAAC,OAAO,KAAK;YAC9B,OAAO;YACP,YAAY;YACZ,UAAU;YACV,cAAc;QAClB;IACJ;AACJ;AAeO,SAAS,KAAK,MAAM,EAAE,UAAU,CAAC,CAAC;IACrC,IAAI,IAAA,wJAAO,EAAC,SAAS;QACjB,OAAO,OAAO,GAAG,CAAC,CAAC,OAAS,KAAK,MAAM;IAC3C;IACA,IAAI,CAAC,IAAA,oKAAa,EAAC,SAAS;QACxB,OAAO;IACX;IACA,MAAM,QAAQ,OAAO,mBAAmB,CAAC;IACzC,MAAM,UAAU,OAAO,qBAAqB,CAAC;IAC7C,OAAO;WAAI;WAAU;KAAQ,CAAC,MAAM,CAAC,CAAC,OAAO;QACzC,2DAA2D;QAC3D,IAAI,QAAQ,aACR,OAAO;QACX,IAAI,IAAA,wJAAO,EAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,KAAK,CAAC,QAAQ,CAAC,MAAM;YACxD,OAAO;QACX;QACA,MAAM,MAAM,MAAM,CAAC,IAAI;QACvB,MAAM,SAAS,KAAK,KAAK;QACzB,WAAW,OAAO,KAAK,QAAQ,QAAQ,QAAQ,aAAa;QAC5D,OAAO;IACX,GAAG,CAAC;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9575, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/superjson/dist/index.js","sources":["file:///D:/github2/interview-prep-app/node_modules/superjson/src/index.ts"],"sourcesContent":["unable to read source [project]/node_modules/superjson/src/index.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9696, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@trpc/react-query/dist/getQueryKey-BY58RNzP.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/objectWithoutPropertiesLoose.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/objectWithoutProperties.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/typeof.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/toPrimitive.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/toPropertyKey.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/defineProperty.js","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/objectSpread2.js","file:///D:/github2/interview-prep-app/node_modules/%40trpc/react-query/src/internals/getQueryKey.ts"],"sourcesContent":["function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var s = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var defineProperty = require(\"./defineProperty.js\");\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { skipToken } from '@tanstack/react-query';\nimport {\n  isObject,\n  type DeepPartial,\n} from '@trpc/server/unstable-core-do-not-import';\nimport type { DecoratedMutation, DecoratedQuery } from '../createTRPCReact';\nimport type { DecorateRouterRecord } from '../shared';\n\nexport type QueryType = 'any' | 'infinite' | 'query';\n\nexport type TRPCQueryKey = [\n  readonly string[],\n  { input?: unknown; type?: Exclude<QueryType, 'any'> }?,\n];\n\nexport type TRPCMutationKey = [readonly string[]]; // = [TRPCQueryKey[0]]\n\ntype ProcedureOrRouter =\n  | DecoratedMutation<any>\n  | DecoratedQuery<any>\n  | DecorateRouterRecord<any, any>;\n\n/**\n * To allow easy interactions with groups of related queries, such as\n * invalidating all queries of a router, we use an array as the path when\n * storing in tanstack query.\n **/\nexport function getQueryKeyInternal(\n  path: readonly string[],\n  input: unknown,\n  type: QueryType,\n): TRPCQueryKey {\n  // Construct a query key that is easy to destructure and flexible for\n  // partial selecting etc.\n  // https://github.com/trpc/trpc/issues/3128\n\n  // some parts of the path may be dot-separated, split them up\n  const splitPath = path.flatMap((part) => part.split('.'));\n\n  if (!input && (!type || type === 'any')) {\n    // this matches also all mutations (see `getMutationKeyInternal`)\n\n    // for `utils.invalidate()` to match all queries (including vanilla react-query)\n    // we don't want nested array if path is empty, i.e. `[]` instead of `[[]]`\n    return splitPath.length ? [splitPath] : ([] as unknown as TRPCQueryKey);\n  }\n\n  if (\n    type === 'infinite' &&\n    isObject(input) &&\n    ('direction' in input || 'cursor' in input)\n  ) {\n    const {\n      cursor: _,\n      direction: __,\n      ...inputWithoutCursorAndDirection\n    } = input;\n    return [\n      splitPath,\n      {\n        input: inputWithoutCursorAndDirection,\n        type: 'infinite',\n      },\n    ];\n  }\n  return [\n    splitPath,\n    {\n      ...(typeof input !== 'undefined' &&\n        input !== skipToken && { input: input }),\n      ...(type && type !== 'any' && { type: type }),\n    },\n  ];\n}\n\nexport function getMutationKeyInternal(path: readonly string[]) {\n  return getQueryKeyInternal(path, undefined, 'any') as TRPCMutationKey;\n}\n\ntype GetInfiniteQueryInput<\n  TProcedureInput,\n  TInputWithoutCursorAndDirection = Omit<\n    TProcedureInput,\n    'cursor' | 'direction'\n  >,\n> = keyof TInputWithoutCursorAndDirection extends never\n  ? undefined\n  : DeepPartial<TInputWithoutCursorAndDirection> | undefined;\n\n/** @internal */\nexport type GetQueryProcedureInput<TProcedureInput> = TProcedureInput extends {\n  cursor?: any;\n}\n  ? GetInfiniteQueryInput<TProcedureInput>\n  : DeepPartial<TProcedureInput> | undefined;\n\ntype GetParams<TProcedureOrRouter extends ProcedureOrRouter> =\n  TProcedureOrRouter extends DecoratedQuery<infer $Def>\n    ? [input?: GetQueryProcedureInput<$Def['input']>, type?: QueryType]\n    : [];\n\n/**\n * Method to extract the query key for a procedure\n * @param procedureOrRouter - procedure or AnyRouter\n * @param input - input to procedureOrRouter\n * @param type - defaults to `any`\n * @see https://trpc.io/docs/v11/getQueryKey\n */\nexport function getQueryKey<TProcedureOrRouter extends ProcedureOrRouter>(\n  procedureOrRouter: TProcedureOrRouter,\n  ..._params: GetParams<TProcedureOrRouter>\n) {\n  const [input, type] = _params;\n\n  // @ts-expect-error - we don't expose _def on the type layer\n  const path = procedureOrRouter._def().path as string[];\n  const queryKey = getQueryKeyInternal(path, input, type ?? 'any');\n  return queryKey;\n}\n\n// TODO: look over if we can't use a single type\nexport type QueryKeyKnown<TInput, TType extends Exclude<QueryType, 'any'>> = [\n  string[],\n  { input?: GetQueryProcedureInput<TInput>; type: TType }?,\n];\n\n/**\n * Method to extract the mutation key for a procedure\n * @param procedure - procedure\n * @see https://trpc.io/docs/v11/getQueryKey#mutations\n */\nexport function getMutationKey<TProcedure extends DecoratedMutation<any>>(\n  procedure: TProcedure,\n) {\n  // @ts-expect-error - we don't expose _def on the type layer\n  const path = procedure._def().path as string[];\n  return getMutationKeyInternal(path);\n}\n"],"names":["_objectWithoutProperties","_typeof","o","_typeof","toPrimitive","toPropertyKey","r","path: readonly string[]","input: unknown","type: QueryType","procedureOrRouter: TProcedureOrRouter","procedure: TProcedure"],"mappings":"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","debugId":null}},
    {"offset": {"line": 9933, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/react-query/src/infiniteQueryOptions.ts"],"sourcesContent":["import type {\n  DataTag,\n  DefaultError,\n  InfiniteData,\n  InitialDataFunction,\n  NonUndefinedGuard,\n  OmitKeyof,\n  QueryKey,\n  SkipToken,\n} from '@tanstack/query-core'\nimport type { UseInfiniteQueryOptions } from './types'\n\nexport type UndefinedInitialDataInfiniteOptions<\n  TQueryFnData,\n  TError = DefaultError,\n  TData = InfiniteData<TQueryFnData>,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n> = UseInfiniteQueryOptions<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey,\n  TPageParam\n> & {\n  initialData?:\n    | undefined\n    | NonUndefinedGuard<InfiniteData<TQueryFnData, TPageParam>>\n    | InitialDataFunction<\n        NonUndefinedGuard<InfiniteData<TQueryFnData, TPageParam>>\n      >\n}\n\nexport type UnusedSkipTokenInfiniteOptions<\n  TQueryFnData,\n  TError = DefaultError,\n  TData = InfiniteData<TQueryFnData>,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n> = OmitKeyof<\n  UseInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey, TPageParam>,\n  'queryFn'\n> & {\n  queryFn?: Exclude<\n    UseInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >['queryFn'],\n    SkipToken | undefined\n  >\n}\n\nexport type DefinedInitialDataInfiniteOptions<\n  TQueryFnData,\n  TError = DefaultError,\n  TData = InfiniteData<TQueryFnData>,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n> = UseInfiniteQueryOptions<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey,\n  TPageParam\n> & {\n  initialData:\n    | NonUndefinedGuard<InfiniteData<TQueryFnData, TPageParam>>\n    | (() => NonUndefinedGuard<InfiniteData<TQueryFnData, TPageParam>>)\n    | undefined\n}\n\nexport function infiniteQueryOptions<\n  TQueryFnData,\n  TError = DefaultError,\n  TData = InfiniteData<TQueryFnData>,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n>(\n  options: DefinedInitialDataInfiniteOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryKey,\n    TPageParam\n  >,\n): DefinedInitialDataInfiniteOptions<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey,\n  TPageParam\n> & {\n  queryKey: DataTag<TQueryKey, InfiniteData<TQueryFnData>, TError>\n}\n\nexport function infiniteQueryOptions<\n  TQueryFnData,\n  TError = DefaultError,\n  TData = InfiniteData<TQueryFnData>,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n>(\n  options: UnusedSkipTokenInfiniteOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryKey,\n    TPageParam\n  >,\n): UnusedSkipTokenInfiniteOptions<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey,\n  TPageParam\n> & {\n  queryKey: DataTag<TQueryKey, InfiniteData<TQueryFnData>, TError>\n}\n\nexport function infiniteQueryOptions<\n  TQueryFnData,\n  TError = DefaultError,\n  TData = InfiniteData<TQueryFnData>,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n>(\n  options: UndefinedInitialDataInfiniteOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryKey,\n    TPageParam\n  >,\n): UndefinedInitialDataInfiniteOptions<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey,\n  TPageParam\n> & {\n  queryKey: DataTag<TQueryKey, InfiniteData<TQueryFnData>, TError>\n}\n\nexport function infiniteQueryOptions(options: unknown) {\n  return options\n}\n"],"names":[],"mappings":";;;;;AAkJO,SAAS,qBAAqB,OAAA,EAAkB;IACrD,OAAO;AACT","debugId":null}},
    {"offset": {"line": 9947, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/react-query/src/queryOptions.ts"],"sourcesContent":["import type {\n  DataTag,\n  DefaultError,\n  InitialDataFunction,\n  NonUndefinedGuard,\n  OmitKeyof,\n  QueryFunction,\n  QueryKey,\n  SkipToken,\n} from '@tanstack/query-core'\nimport type { UseQueryOptions } from './types'\n\nexport type UndefinedInitialDataOptions<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> = UseQueryOptions<TQueryFnData, TError, TData, TQueryKey> & {\n  initialData?:\n    | undefined\n    | InitialDataFunction<NonUndefinedGuard<TQueryFnData>>\n    | NonUndefinedGuard<TQueryFnData>\n}\n\nexport type UnusedSkipTokenOptions<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> = OmitKeyof<\n  UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  'queryFn'\n> & {\n  queryFn?: Exclude<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>['queryFn'],\n    SkipToken | undefined\n  >\n}\n\nexport type DefinedInitialDataOptions<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> = Omit<UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>, 'queryFn'> & {\n  initialData:\n    | NonUndefinedGuard<TQueryFnData>\n    | (() => NonUndefinedGuard<TQueryFnData>)\n  queryFn?: QueryFunction<TQueryFnData, TQueryKey>\n}\n\nexport function queryOptions<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: DefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n): DefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey> & {\n  queryKey: DataTag<TQueryKey, TQueryFnData, TError>\n}\n\nexport function queryOptions<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UnusedSkipTokenOptions<TQueryFnData, TError, TData, TQueryKey>,\n): UnusedSkipTokenOptions<TQueryFnData, TError, TData, TQueryKey> & {\n  queryKey: DataTag<TQueryKey, TQueryFnData, TError>\n}\n\nexport function queryOptions<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UndefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n): UndefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey> & {\n  queryKey: DataTag<TQueryKey, TQueryFnData, TError>\n}\n\nexport function queryOptions(options: unknown) {\n  return options\n}\n"],"names":[],"mappings":";;;;;AAoFO,SAAS,aAAa,OAAA,EAAkB;IAC7C,OAAO;AACT","debugId":null}},
    {"offset": {"line": 9961, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/query-core/src/queryObserver.ts"],"sourcesContent":["import { focusManager } from './focusManager'\nimport { notifyManager } from './notifyManager'\nimport { fetchState } from './query'\nimport { Subscribable } from './subscribable'\nimport { pendingThenable } from './thenable'\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale,\n} from './utils'\nimport { timeoutManager } from './timeoutManager'\nimport type { ManagedTimerId } from './timeoutManager'\nimport type { FetchOptions, Query, QueryState } from './query'\nimport type { QueryClient } from './queryClient'\nimport type { PendingThenable, Thenable } from './thenable'\nimport type {\n  DefaultError,\n  DefaultedQueryObserverOptions,\n  PlaceholderDataFunction,\n  QueryKey,\n  QueryObserverBaseResult,\n  QueryObserverOptions,\n  QueryObserverResult,\n  QueryOptions,\n  RefetchOptions,\n} from './types'\n\ntype QueryObserverListener<TData, TError> = (\n  result: QueryObserverResult<TData, TError>,\n) => void\n\ninterface ObserverFetchOptions extends FetchOptions {\n  throwOnError?: boolean\n}\n\nexport class QueryObserver<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Subscribable<QueryObserverListener<TData, TError>> {\n  #client: QueryClient\n  #currentQuery: Query<TQueryFnData, TError, TQueryData, TQueryKey> = undefined!\n  #currentQueryInitialState: QueryState<TQueryData, TError> = undefined!\n  #currentResult: QueryObserverResult<TData, TError> = undefined!\n  #currentResultState?: QueryState<TQueryData, TError>\n  #currentResultOptions?: QueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >\n  #currentThenable: Thenable<TData>\n  #selectError: TError | null\n  #selectFn?: (data: TQueryData) => TData\n  #selectResult?: TData\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData?: Query<TQueryFnData, TError, TQueryData, TQueryKey>\n  #staleTimeoutId?: ManagedTimerId\n  #refetchIntervalId?: ManagedTimerId\n  #currentRefetchInterval?: number | false\n  #trackedProps = new Set<keyof QueryObserverResult>()\n\n  constructor(\n    client: QueryClient,\n    public options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ) {\n    super()\n\n    this.#client = client\n    this.#selectError = null\n    this.#currentThenable = pendingThenable()\n\n    this.bindMethods()\n    this.setOptions(options)\n  }\n\n  protected bindMethods(): void {\n    this.refetch = this.refetch.bind(this)\n  }\n\n  protected onSubscribe(): void {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this)\n\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch()\n      } else {\n        this.updateResult()\n      }\n\n      this.#updateTimers()\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.destroy()\n    }\n  }\n\n  shouldFetchOnReconnect(): boolean {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect,\n    )\n  }\n\n  shouldFetchOnWindowFocus(): boolean {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus,\n    )\n  }\n\n  destroy(): void {\n    this.listeners = new Set()\n    this.#clearStaleTimeout()\n    this.#clearRefetchInterval()\n    this.#currentQuery.removeObserver(this)\n  }\n\n  setOptions(\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): void {\n    const prevOptions = this.options\n    const prevQuery = this.#currentQuery\n\n    this.options = this.#client.defaultQueryOptions(options)\n\n    if (\n      this.options.enabled !== undefined &&\n      typeof this.options.enabled !== 'boolean' &&\n      typeof this.options.enabled !== 'function' &&\n      typeof resolveEnabled(this.options.enabled, this.#currentQuery) !==\n        'boolean'\n    ) {\n      throw new Error(\n        'Expected enabled to be a boolean or a callback that returns a boolean',\n      )\n    }\n\n    this.#updateQuery()\n    this.#currentQuery.setOptions(this.options)\n\n    if (\n      prevOptions._defaulted &&\n      !shallowEqualObjects(this.options, prevOptions)\n    ) {\n      this.#client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.#currentQuery,\n        observer: this,\n      })\n    }\n\n    const mounted = this.hasListeners()\n\n    // Fetch if there are subscribers\n    if (\n      mounted &&\n      shouldFetchOptionally(\n        this.#currentQuery,\n        prevQuery,\n        this.options,\n        prevOptions,\n      )\n    ) {\n      this.#executeFetch()\n    }\n\n    // Update result\n    this.updateResult()\n\n    // Update stale interval if needed\n    if (\n      mounted &&\n      (this.#currentQuery !== prevQuery ||\n        resolveEnabled(this.options.enabled, this.#currentQuery) !==\n          resolveEnabled(prevOptions.enabled, this.#currentQuery) ||\n        resolveStaleTime(this.options.staleTime, this.#currentQuery) !==\n          resolveStaleTime(prevOptions.staleTime, this.#currentQuery))\n    ) {\n      this.#updateStaleTimeout()\n    }\n\n    const nextRefetchInterval = this.#computeRefetchInterval()\n\n    // Update refetch interval if needed\n    if (\n      mounted &&\n      (this.#currentQuery !== prevQuery ||\n        resolveEnabled(this.options.enabled, this.#currentQuery) !==\n          resolveEnabled(prevOptions.enabled, this.#currentQuery) ||\n        nextRefetchInterval !== this.#currentRefetchInterval)\n    ) {\n      this.#updateRefetchInterval(nextRefetchInterval)\n    }\n  }\n\n  getOptimisticResult(\n    options: DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const query = this.#client.getQueryCache().build(this.#client, options)\n\n    const result = this.createResult(query, options)\n\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      // this assigns the optimistic result to the current Observer\n      // because if the query function changes, useQuery will be performing\n      // an effect where it would fetch again.\n      // When the fetch finishes, we perform a deep data cloning in order\n      // to reuse objects references. This deep data clone is performed against\n      // the `observer.currentResult.data` property\n      // When QueryKey changes, we refresh the query and get new `optimistic`\n      // result, while we leave the `observer.currentResult`, so when new data\n      // arrives, it finds the old `observer.currentResult` which is related\n      // to the old QueryKey. Which means that currentResult and selectData are\n      // out of sync already.\n      // To solve this, we move the cursor of the currentResult every time\n      // an observer reads an optimistic value.\n\n      // When keeping the previous data, the result doesn't change until new\n      // data arrives.\n      this.#currentResult = result\n      this.#currentResultOptions = this.options\n      this.#currentResultState = this.#currentQuery.state\n    }\n    return result\n  }\n\n  getCurrentResult(): QueryObserverResult<TData, TError> {\n    return this.#currentResult\n  }\n\n  trackResult(\n    result: QueryObserverResult<TData, TError>,\n    onPropTracked?: (key: keyof QueryObserverResult) => void,\n  ): QueryObserverResult<TData, TError> {\n    return new Proxy(result, {\n      get: (target, key) => {\n        this.trackProp(key as keyof QueryObserverResult)\n        onPropTracked?.(key as keyof QueryObserverResult)\n        if (key === 'promise') {\n          this.trackProp('data')\n          if (\n            !this.options.experimental_prefetchInRender &&\n            this.#currentThenable.status === 'pending'\n          ) {\n            this.#currentThenable.reject(\n              new Error(\n                'experimental_prefetchInRender feature flag is not enabled',\n              ),\n            )\n          }\n        }\n        return Reflect.get(target, key)\n      },\n    })\n  }\n\n  trackProp(key: keyof QueryObserverResult) {\n    this.#trackedProps.add(key)\n  }\n\n  getCurrentQuery(): Query<TQueryFnData, TError, TQueryData, TQueryKey> {\n    return this.#currentQuery\n  }\n\n  refetch({ ...options }: RefetchOptions = {}): Promise<\n    QueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n    })\n  }\n\n  fetchOptimistic(\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    const defaultedOptions = this.#client.defaultQueryOptions(options)\n\n    const query = this.#client\n      .getQueryCache()\n      .build(this.#client, defaultedOptions)\n\n    return query.fetch().then(() => this.createResult(query, defaultedOptions))\n  }\n\n  protected fetch(\n    fetchOptions: ObserverFetchOptions,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true,\n    }).then(() => {\n      this.updateResult()\n      return this.#currentResult\n    })\n  }\n\n  #executeFetch(\n    fetchOptions?: Omit<ObserverFetchOptions, 'initialPromise'>,\n  ): Promise<TQueryData | undefined> {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.#updateQuery()\n\n    // Fetch\n    let promise: Promise<TQueryData | undefined> = this.#currentQuery.fetch(\n      this.options as QueryOptions<TQueryFnData, TError, TQueryData, TQueryKey>,\n      fetchOptions,\n    )\n\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop)\n    }\n\n    return promise\n  }\n\n  #updateStaleTimeout(): void {\n    this.#clearStaleTimeout()\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery,\n    )\n\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return\n    }\n\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime)\n\n    // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n    const timeout = time + 1\n\n    this.#staleTimeoutId = timeoutManager.setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult()\n      }\n    }, timeout)\n  }\n\n  #computeRefetchInterval() {\n    return (\n      (typeof this.options.refetchInterval === 'function'\n        ? this.options.refetchInterval(this.#currentQuery)\n        : this.options.refetchInterval) ?? false\n    )\n  }\n\n  #updateRefetchInterval(nextInterval: number | false): void {\n    this.#clearRefetchInterval()\n\n    this.#currentRefetchInterval = nextInterval\n\n    if (\n      isServer ||\n      resolveEnabled(this.options.enabled, this.#currentQuery) === false ||\n      !isValidTimeout(this.#currentRefetchInterval) ||\n      this.#currentRefetchInterval === 0\n    ) {\n      return\n    }\n\n    this.#refetchIntervalId = timeoutManager.setInterval(() => {\n      if (\n        this.options.refetchIntervalInBackground ||\n        focusManager.isFocused()\n      ) {\n        this.#executeFetch()\n      }\n    }, this.#currentRefetchInterval)\n  }\n\n  #updateTimers(): void {\n    this.#updateStaleTimeout()\n    this.#updateRefetchInterval(this.#computeRefetchInterval())\n  }\n\n  #clearStaleTimeout(): void {\n    if (this.#staleTimeoutId) {\n      timeoutManager.clearTimeout(this.#staleTimeoutId)\n      this.#staleTimeoutId = undefined\n    }\n  }\n\n  #clearRefetchInterval(): void {\n    if (this.#refetchIntervalId) {\n      timeoutManager.clearInterval(this.#refetchIntervalId)\n      this.#refetchIntervalId = undefined\n    }\n  }\n\n  protected createResult(\n    query: Query<TQueryFnData, TError, TQueryData, TQueryKey>,\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const prevQuery = this.#currentQuery\n    const prevOptions = this.options\n    const prevResult = this.#currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n    const prevResultState = this.#currentResultState\n    const prevResultOptions = this.#currentResultOptions\n    const queryChange = query !== prevQuery\n    const queryInitialState = queryChange\n      ? query.state\n      : this.#currentQueryInitialState\n\n    const { state } = query\n    let newState = { ...state }\n    let isPlaceholderData = false\n    let data: TData | undefined\n\n    // Optimistically set result in fetching state if needed\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners()\n\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options)\n\n      const fetchOptionally =\n        mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions)\n\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options),\n        }\n      }\n      if (options._optimisticResults === 'isRestoring') {\n        newState.fetchStatus = 'idle'\n      }\n    }\n\n    let { error, errorUpdatedAt, status } = newState\n\n    // Per default, use query data\n    data = newState.data as unknown as TData\n    let skipSelect = false\n\n    // use placeholderData if needed\n    if (\n      options.placeholderData !== undefined &&\n      data === undefined &&\n      status === 'pending'\n    ) {\n      let placeholderData\n\n      // Memoize placeholder data\n      if (\n        prevResult?.isPlaceholderData &&\n        options.placeholderData === prevResultOptions?.placeholderData\n      ) {\n        placeholderData = prevResult.data\n        // we have to skip select when reading this memoization\n        // because prevResult.data is already \"selected\"\n        skipSelect = true\n      } else {\n        // compute placeholderData\n        placeholderData =\n          typeof options.placeholderData === 'function'\n            ? (\n                options.placeholderData as unknown as PlaceholderDataFunction<TQueryData>\n              )(\n                this.#lastQueryWithDefinedData?.state.data,\n                this.#lastQueryWithDefinedData as any,\n              )\n            : options.placeholderData\n      }\n\n      if (placeholderData !== undefined) {\n        status = 'success'\n        data = replaceData(\n          prevResult?.data,\n          placeholderData as unknown,\n          options,\n        ) as TData\n        isPlaceholderData = true\n      }\n    }\n\n    // Select data if needed\n    // this also runs placeholderData through the select function\n    if (options.select && data !== undefined && !skipSelect) {\n      // Memoize select result\n      if (\n        prevResult &&\n        data === prevResultState?.data &&\n        options.select === this.#selectFn\n      ) {\n        data = this.#selectResult\n      } else {\n        try {\n          this.#selectFn = options.select\n          data = options.select(data as any)\n          data = replaceData(prevResult?.data, data, options)\n          this.#selectResult = data\n          this.#selectError = null\n        } catch (selectError) {\n          this.#selectError = selectError as TError\n        }\n      }\n    }\n\n    if (this.#selectError) {\n      error = this.#selectError as any\n      data = this.#selectResult\n      errorUpdatedAt = Date.now()\n      status = 'error'\n    }\n\n    const isFetching = newState.fetchStatus === 'fetching'\n    const isPending = status === 'pending'\n    const isError = status === 'error'\n\n    const isLoading = isPending && isFetching\n    const hasData = data !== undefined\n\n    const result: QueryObserverBaseResult<TData, TError> = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount:\n        newState.dataUpdateCount > queryInitialState.dataUpdateCount ||\n        newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === 'paused',\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable,\n      isEnabled: resolveEnabled(options.enabled, query) !== false,\n    }\n\n    const nextResult = result as QueryObserverResult<TData, TError>\n\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable: PendingThenable<TData>) => {\n        if (nextResult.status === 'error') {\n          thenable.reject(nextResult.error)\n        } else if (nextResult.data !== undefined) {\n          thenable.resolve(nextResult.data)\n        }\n      }\n\n      /**\n       * Create a new thenable and result promise when the results have changed\n       */\n      const recreateThenable = () => {\n        const pending =\n          (this.#currentThenable =\n          nextResult.promise =\n            pendingThenable())\n\n        finalizeThenableIfPossible(pending)\n      }\n\n      const prevThenable = this.#currentThenable\n      switch (prevThenable.status) {\n        case 'pending':\n          // Finalize the previous thenable if it was pending\n          // and we are still observing the same query\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable)\n          }\n          break\n        case 'fulfilled':\n          if (\n            nextResult.status === 'error' ||\n            nextResult.data !== prevThenable.value\n          ) {\n            recreateThenable()\n          }\n          break\n        case 'rejected':\n          if (\n            nextResult.status !== 'error' ||\n            nextResult.error !== prevThenable.reason\n          ) {\n            recreateThenable()\n          }\n          break\n      }\n    }\n\n    return nextResult\n  }\n\n  updateResult(): void {\n    const prevResult = this.#currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n\n    const nextResult = this.createResult(this.#currentQuery, this.options)\n\n    this.#currentResultState = this.#currentQuery.state\n    this.#currentResultOptions = this.options\n\n    if (this.#currentResultState.data !== undefined) {\n      this.#lastQueryWithDefinedData = this.#currentQuery\n    }\n\n    // Only notify and update result if something has changed\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return\n    }\n\n    this.#currentResult = nextResult\n\n    const shouldNotifyListeners = (): boolean => {\n      if (!prevResult) {\n        return true\n      }\n\n      const { notifyOnChangeProps } = this.options\n      const notifyOnChangePropsValue =\n        typeof notifyOnChangeProps === 'function'\n          ? notifyOnChangeProps()\n          : notifyOnChangeProps\n\n      if (\n        notifyOnChangePropsValue === 'all' ||\n        (!notifyOnChangePropsValue && !this.#trackedProps.size)\n      ) {\n        return true\n      }\n\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps,\n      )\n\n      if (this.options.throwOnError) {\n        includedProps.add('error')\n      }\n\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key as keyof QueryObserverResult\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey]\n\n        return changed && includedProps.has(typedKey)\n      })\n    }\n\n    this.#notify({ listeners: shouldNotifyListeners() })\n  }\n\n  #updateQuery(): void {\n    const query = this.#client.getQueryCache().build(this.#client, this.options)\n\n    if (query === this.#currentQuery) {\n      return\n    }\n\n    const prevQuery = this.#currentQuery as\n      | Query<TQueryFnData, TError, TQueryData, TQueryKey>\n      | undefined\n    this.#currentQuery = query\n    this.#currentQueryInitialState = query.state\n\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this)\n      query.addObserver(this)\n    }\n  }\n\n  onQueryUpdate(): void {\n    this.updateResult()\n\n    if (this.hasListeners()) {\n      this.#updateTimers()\n    }\n  }\n\n  #notify(notifyOptions: { listeners: boolean }): void {\n    notifyManager.batch(() => {\n      // First, trigger the listeners\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult)\n        })\n      }\n\n      // Then the cache listeners\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: 'observerResultsUpdated',\n      })\n    })\n  }\n}\n\nfunction shouldLoadOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any>,\n): boolean {\n  return (\n    resolveEnabled(options.enabled, query) !== false &&\n    query.state.data === undefined &&\n    !(query.state.status === 'error' && options.retryOnMount === false)\n  )\n}\n\nfunction shouldFetchOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    shouldLoadOnMount(query, options) ||\n    (query.state.data !== undefined &&\n      shouldFetchOn(query, options, options.refetchOnMount))\n  )\n}\n\nfunction shouldFetchOn(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  field: (typeof options)['refetchOnMount'] &\n    (typeof options)['refetchOnWindowFocus'] &\n    (typeof options)['refetchOnReconnect'],\n) {\n  if (\n    resolveEnabled(options.enabled, query) !== false &&\n    resolveStaleTime(options.staleTime, query) !== 'static'\n  ) {\n    const value = typeof field === 'function' ? field(query) : field\n\n    return value === 'always' || (value !== false && isStale(query, options))\n  }\n  return false\n}\n\nfunction shouldFetchOptionally(\n  query: Query<any, any, any, any>,\n  prevQuery: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  prevOptions: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    (query !== prevQuery ||\n      resolveEnabled(prevOptions.enabled, query) === false) &&\n    (!options.suspense || query.state.status !== 'error') &&\n    isStale(query, options)\n  )\n}\n\nfunction isStale(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    resolveEnabled(options.enabled, query) !== false &&\n    query.isStaleByTime(resolveStaleTime(options.staleTime, query))\n  )\n}\n\n// this function would decide if we will update the observer's 'current'\n// properties after an optimistic reading via getOptimisticResult\nfunction shouldAssignObserverCurrentProperties<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  optimisticResult: QueryObserverResult<TData, TError>,\n) {\n  // if the newly created result isn't what the observer is holding as current,\n  // then we'll need to update the properties as well\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true\n  }\n\n  // basically, just keep previous properties if nothing changed\n  return false\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 10405, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/query-core/src/infiniteQueryObserver.ts"],"sourcesContent":["import { QueryObserver } from './queryObserver'\nimport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior,\n} from './infiniteQueryBehavior'\nimport type { Subscribable } from './subscribable'\nimport type {\n  DefaultError,\n  DefaultedInfiniteQueryObserverOptions,\n  FetchNextPageOptions,\n  FetchPreviousPageOptions,\n  InfiniteData,\n  InfiniteQueryObserverBaseResult,\n  InfiniteQueryObserverOptions,\n  InfiniteQueryObserverResult,\n  QueryKey,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { Query } from './query'\n\ntype InfiniteQueryObserverListener<TData, TError> = (\n  result: InfiniteQueryObserverResult<TData, TError>,\n) => void\n\nexport class InfiniteQueryObserver<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = InfiniteData<TQueryFnData>,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n> extends QueryObserver<\n  TQueryFnData,\n  TError,\n  TData,\n  InfiniteData<TQueryFnData, TPageParam>,\n  TQueryKey\n> {\n  // Type override\n  subscribe!: Subscribable<\n    InfiniteQueryObserverListener<TData, TError>\n  >['subscribe']\n\n  // Type override\n  getCurrentResult!: ReplaceReturnType<\n    QueryObserver<\n      TQueryFnData,\n      TError,\n      TData,\n      InfiniteData<TQueryFnData, TPageParam>,\n      TQueryKey\n    >['getCurrentResult'],\n    InfiniteQueryObserverResult<TData, TError>\n  >\n\n  // Type override\n  protected fetch!: ReplaceReturnType<\n    QueryObserver<\n      TQueryFnData,\n      TError,\n      TData,\n      InfiniteData<TQueryFnData, TPageParam>,\n      TQueryKey\n    >['fetch'],\n    Promise<InfiniteQueryObserverResult<TData, TError>>\n  >\n\n  constructor(\n    client: QueryClient,\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ) {\n    super(client, options)\n  }\n\n  protected bindMethods(): void {\n    super.bindMethods()\n    this.fetchNextPage = this.fetchNextPage.bind(this)\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this)\n  }\n\n  setOptions(\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): void {\n    super.setOptions({\n      ...options,\n      behavior: infiniteQueryBehavior(),\n    })\n  }\n\n  getOptimisticResult(\n    options: DefaultedInfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): InfiniteQueryObserverResult<TData, TError> {\n    options.behavior = infiniteQueryBehavior()\n    return super.getOptimisticResult(options) as InfiniteQueryObserverResult<\n      TData,\n      TError\n    >\n  }\n\n  fetchNextPage(\n    options?: FetchNextPageOptions,\n  ): Promise<InfiniteQueryObserverResult<TData, TError>> {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: 'forward' },\n      },\n    })\n  }\n\n  fetchPreviousPage(\n    options?: FetchPreviousPageOptions,\n  ): Promise<InfiniteQueryObserverResult<TData, TError>> {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: 'backward' },\n      },\n    })\n  }\n\n  protected createResult(\n    query: Query<\n      TQueryFnData,\n      TError,\n      InfiniteData<TQueryFnData, TPageParam>,\n      TQueryKey\n    >,\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): InfiniteQueryObserverResult<TData, TError> {\n    const { state } = query\n    const parentResult = super.createResult(query, options)\n\n    const { isFetching, isRefetching, isError, isRefetchError } = parentResult\n    const fetchDirection = state.fetchMeta?.fetchMore?.direction\n\n    const isFetchNextPageError = isError && fetchDirection === 'forward'\n    const isFetchingNextPage = isFetching && fetchDirection === 'forward'\n\n    const isFetchPreviousPageError = isError && fetchDirection === 'backward'\n    const isFetchingPreviousPage = isFetching && fetchDirection === 'backward'\n\n    const result: InfiniteQueryObserverBaseResult<TData, TError> = {\n      ...parentResult,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, state.data),\n      hasPreviousPage: hasPreviousPage(options, state.data),\n      isFetchNextPageError,\n      isFetchingNextPage,\n      isFetchPreviousPageError,\n      isFetchingPreviousPage,\n      isRefetchError:\n        isRefetchError && !isFetchNextPageError && !isFetchPreviousPageError,\n      isRefetching:\n        isRefetching && !isFetchingNextPage && !isFetchingPreviousPage,\n    }\n\n    return result as InfiniteQueryObserverResult<TData, TError>\n  }\n}\n\ntype ReplaceReturnType<\n  TFunction extends (...args: Array<any>) => unknown,\n  TReturn,\n> = (...args: Parameters<TFunction>) => TReturn\n"],"names":[],"mappings":";;;;;AAAA,SAAS,qBAAqB;AAC9B;;;AAwBO,IAAM,wBAAN,cAMG,gMAAA,CAMR;IA8BA,YACE,MAAA,EACA,OAAA,CAOA;QACA,KAAA,CAAM,QAAQ,OAAO;IACvB;IAEU,cAAoB;QAC5B,KAAA,CAAM,YAAY;QAClB,IAAA,CAAK,aAAA,GAAgB,IAAA,CAAK,aAAA,CAAc,IAAA,CAAK,IAAI;QACjD,IAAA,CAAK,iBAAA,GAAoB,IAAA,CAAK,iBAAA,CAAkB,IAAA,CAAK,IAAI;IAC3D;IAEA,WACE,OAAA,EAOM;QACN,KAAA,CAAM,WAAW;YACf,GAAG,OAAA;YACH,cAAU,gNAAA,CAAsB;QAClC,CAAC;IACH;IAEA,oBACE,OAAA,EAO4C;QAC5C,QAAQ,QAAA,OAAW,gNAAA,CAAsB;QACzC,OAAO,KAAA,CAAM,oBAAoB,OAAO;IAI1C;IAEA,cACE,OAAA,EACqD;QACrD,OAAO,IAAA,CAAK,KAAA,CAAM;YAChB,GAAG,OAAA;YACH,MAAM;gBACJ,WAAW;oBAAE,WAAW;gBAAU;YACpC;QACF,CAAC;IACH;IAEA,kBACE,OAAA,EACqD;QACrD,OAAO,IAAA,CAAK,KAAA,CAAM;YAChB,GAAG,OAAA;YACH,MAAM;gBACJ,WAAW;oBAAE,WAAW;gBAAW;YACrC;QACF,CAAC;IACH;IAEU,aACR,KAAA,EAMA,OAAA,EAO4C;QAC5C,MAAM,EAAE,KAAA,CAAM,CAAA,GAAI;QAClB,MAAM,eAAe,KAAA,CAAM,aAAa,OAAO,OAAO;QAEtD,MAAM,EAAE,UAAA,EAAY,YAAA,EAAc,OAAA,EAAS,cAAA,CAAe,CAAA,GAAI;QAC9D,MAAM,iBAAiB,MAAM,SAAA,EAAW,WAAW;QAEnD,MAAM,uBAAuB,WAAW,mBAAmB;QAC3D,MAAM,qBAAqB,cAAc,mBAAmB;QAE5D,MAAM,2BAA2B,WAAW,mBAAmB;QAC/D,MAAM,yBAAyB,cAAc,mBAAmB;QAEhE,MAAM,SAAyD;YAC7D,GAAG,YAAA;YACH,eAAe,IAAA,CAAK,aAAA;YACpB,mBAAmB,IAAA,CAAK,iBAAA;YACxB,iBAAa,sMAAA,EAAY,SAAS,MAAM,IAAI;YAC5C,qBAAiB,0MAAA,EAAgB,SAAS,MAAM,IAAI;YACpD;YACA;YACA;YACA;YACA,gBACE,kBAAkB,CAAC,wBAAwB,CAAC;YAC9C,cACE,gBAAgB,CAAC,sBAAsB,CAAC;QAC5C;QAEA,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 10484, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/react-query/src/QueryErrorResetBoundary.tsx"],"sourcesContent":["'use client'\nimport * as React from 'react'\n\n// CONTEXT\nexport type QueryErrorResetFunction = () => void\nexport type QueryErrorIsResetFunction = () => boolean\nexport type QueryErrorClearResetFunction = () => void\n\nexport interface QueryErrorResetBoundaryValue {\n  clearReset: QueryErrorClearResetFunction\n  isReset: QueryErrorIsResetFunction\n  reset: QueryErrorResetFunction\n}\n\nfunction createValue(): QueryErrorResetBoundaryValue {\n  let isReset = false\n  return {\n    clearReset: () => {\n      isReset = false\n    },\n    reset: () => {\n      isReset = true\n    },\n    isReset: () => {\n      return isReset\n    },\n  }\n}\n\nconst QueryErrorResetBoundaryContext = React.createContext(createValue())\n\n// HOOK\n\nexport const useQueryErrorResetBoundary = () =>\n  React.useContext(QueryErrorResetBoundaryContext)\n\n// COMPONENT\n\nexport type QueryErrorResetBoundaryFunction = (\n  value: QueryErrorResetBoundaryValue,\n) => React.ReactNode\n\nexport interface QueryErrorResetBoundaryProps {\n  children: QueryErrorResetBoundaryFunction | React.ReactNode\n}\n\nexport const QueryErrorResetBoundary = ({\n  children,\n}: QueryErrorResetBoundaryProps) => {\n  const [value] = React.useState(() => createValue())\n  return (\n    <QueryErrorResetBoundaryContext.Provider value={value}>\n      {typeof children === 'function' ? children(value) : children}\n    </QueryErrorResetBoundaryContext.Provider>\n  )\n}\n"],"names":[],"mappings":";;;;;;;AACA,YAAY,WAAW;AAkDnB;;;;AArCJ,SAAS,cAA4C;IACnD,IAAI,UAAU;IACd,OAAO;QACL,YAAY,MAAM;YAChB,UAAU;QACZ;QACA,OAAO,MAAM;YACX,UAAU;QACZ;QACA,SAAS,MAAM;YACb,OAAO;QACT;IACF;AACF;AAEA,IAAM,iCAAuC,sNAAA,CAAc,YAAY,CAAC;AAIjE,IAAM,6BAA6B,IAClC,mNAAA,CAAW,8BAA8B;AAY1C,IAAM,0BAA0B,CAAC,EACtC,QAAA,EACF,KAAoC;IAClC,MAAM,CAAC,KAAK,CAAA,GAAU,iNAAA,CAAS,IAAM,YAAY,CAAC;IAClD,OACE,aAAA,GAAA,IAAA,8NAAA,EAAC,+BAA+B,QAAA,EAA/B;QAAwC;QACtC,UAAA,OAAO,aAAa,aAAa,SAAS,KAAK,IAAI;IAAA,CACtD;AAEJ","debugId":null}},
    {"offset": {"line": 10525, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/react-query/src/errorBoundaryUtils.ts"],"sourcesContent":["'use client'\nimport * as React from 'react'\nimport { shouldThrowError } from '@tanstack/query-core'\nimport type {\n  DefaultedQueryObserverOptions,\n  Query,\n  QueryKey,\n  QueryObserverResult,\n  ThrowOnError,\n} from '@tanstack/query-core'\nimport type { QueryErrorResetBoundaryValue } from './QueryErrorResetBoundary'\n\nexport const ensurePreventErrorBoundaryRetry = <\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) => {\n  if (\n    options.suspense ||\n    options.throwOnError ||\n    options.experimental_prefetchInRender\n  ) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false\n    }\n  }\n}\n\nexport const useClearResetErrorBoundary = (\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset()\n  }, [errorResetBoundary])\n}\n\nexport const getHasError = <\n  TData,\n  TError,\n  TQueryFnData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query,\n  suspense,\n}: {\n  result: QueryObserverResult<TData, TError>\n  errorResetBoundary: QueryErrorResetBoundaryValue\n  throwOnError: ThrowOnError<TQueryFnData, TError, TQueryData, TQueryKey>\n  query: Query<TQueryFnData, TError, TQueryData, TQueryKey> | undefined\n  suspense: boolean | undefined\n}) => {\n  return (\n    result.isError &&\n    !errorResetBoundary.isReset() &&\n    !result.isFetching &&\n    query &&\n    ((suspense && result.data === undefined) ||\n      shouldThrowError(throwOnError, [result.error, query]))\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;AACA,YAAY,WAAW;AACvB,SAAS,wBAAwB;;;;AAU1B,IAAM,kCAAkC,CAO7C,SAOA,uBACG;IACH,IACE,QAAQ,QAAA,IACR,QAAQ,YAAA,IACR,QAAQ,6BAAA,EACR;QAEA,IAAI,CAAC,mBAAmB,OAAA,CAAQ,GAAG;YACjC,QAAQ,YAAA,GAAe;QACzB;IACF;AACF;AAEO,IAAM,6BAA6B,CACxC,uBACG;IACG,kNAAA,CAAU,MAAM;QACpB,mBAAmB,UAAA,CAAW;IAChC,GAAG;QAAC,kBAAkB;KAAC;AACzB;AAEO,IAAM,cAAc,CAMzB,EACA,MAAA,EACA,kBAAA,EACA,YAAA,EACA,KAAA,EACA,QAAA,EACF,KAMM;IACJ,OACE,OAAO,OAAA,IACP,CAAC,mBAAmB,OAAA,CAAQ,KAC5B,CAAC,OAAO,UAAA,IACR,SAAA,CACE,YAAY,OAAO,IAAA,KAAS,KAAA,SAC5B,2LAAA,EAAiB,cAAc;QAAC,OAAO,KAAA;QAAO,KAAK;KAAC,CAAA;AAE1D","debugId":null}},
    {"offset": {"line": 10565, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/react-query/src/IsRestoringProvider.ts"],"sourcesContent":["'use client'\nimport * as React from 'react'\n\nconst IsRestoringContext = React.createContext(false)\n\nexport const useIsRestoring = () => React.useContext(IsRestoringContext)\nexport const IsRestoringProvider = IsRestoringContext.Provider\n"],"names":[],"mappings":";;;;;;;AACA,YAAY,WAAW;;;AAEvB,IAAM,qBAA2B,sNAAA,CAAc,KAAK;AAE7C,IAAM,iBAAiB,IAAY,mNAAA,CAAW,kBAAkB;AAChE,IAAM,sBAAsB,mBAAmB,QAAA","debugId":null}},
    {"offset": {"line": 10584, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/react-query/src/suspense.ts"],"sourcesContent":["import type {\n  DefaultError,\n  DefaultedQueryObserverOptions,\n  Query,\n  QueryKey,\n  QueryObserver,\n  QueryObserverResult,\n} from '@tanstack/query-core'\nimport type { QueryErrorResetBoundaryValue } from './QueryErrorResetBoundary'\n\nexport const defaultThrowOnError = <\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  _error: TError,\n  query: Query<TQueryFnData, TError, TData, TQueryKey>,\n) => query.state.data === undefined\n\nexport const ensureSuspenseTimers = (\n  defaultedOptions: DefaultedQueryObserverOptions<any, any, any, any, any>,\n) => {\n  if (defaultedOptions.suspense) {\n    // Handle staleTime to ensure minimum 1000ms in Suspense mode\n    // This prevents unnecessary refetching when components remount after suspending\n    const MIN_SUSPENSE_TIME_MS = 1000\n\n    const clamp = (value: number | 'static' | undefined) =>\n      value === 'static'\n        ? value\n        : Math.max(value ?? MIN_SUSPENSE_TIME_MS, MIN_SUSPENSE_TIME_MS)\n\n    const originalStaleTime = defaultedOptions.staleTime\n    defaultedOptions.staleTime =\n      typeof originalStaleTime === 'function'\n        ? (...args) => clamp(originalStaleTime(...args))\n        : clamp(originalStaleTime)\n\n    if (typeof defaultedOptions.gcTime === 'number') {\n      defaultedOptions.gcTime = Math.max(\n        defaultedOptions.gcTime,\n        MIN_SUSPENSE_TIME_MS,\n      )\n    }\n  }\n}\n\nexport const willFetch = (\n  result: QueryObserverResult<any, any>,\n  isRestoring: boolean,\n) => result.isLoading && result.isFetching && !isRestoring\n\nexport const shouldSuspend = (\n  defaultedOptions:\n    | DefaultedQueryObserverOptions<any, any, any, any, any>\n    | undefined,\n  result: QueryObserverResult<any, any>,\n) => defaultedOptions?.suspense && result.isPending\n\nexport const fetchOptimistic = <\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  defaultedOptions: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) =>\n  observer.fetchOptimistic(defaultedOptions).catch(() => {\n    errorResetBoundary.clearReset()\n  })\n"],"names":[],"mappings":";;;;;;;;;;;;;AAUO,IAAM,sBAAsB,CAMjC,QACA,QACG,MAAM,KAAA,CAAM,IAAA,KAAS,KAAA;AAEnB,IAAM,uBAAuB,CAClC,qBACG;IACH,IAAI,iBAAiB,QAAA,EAAU;QAG7B,MAAM,uBAAuB;QAE7B,MAAM,QAAQ,CAAC,QACb,UAAU,WACN,QACA,KAAK,GAAA,CAAI,SAAS,sBAAsB,oBAAoB;QAElE,MAAM,oBAAoB,iBAAiB,SAAA;QAC3C,iBAAiB,SAAA,GACf,OAAO,sBAAsB,aACzB,CAAA,GAAI,OAAS,MAAM,kBAAkB,GAAG,IAAI,CAAC,IAC7C,MAAM,iBAAiB;QAE7B,IAAI,OAAO,iBAAiB,MAAA,KAAW,UAAU;YAC/C,iBAAiB,MAAA,GAAS,KAAK,GAAA,CAC7B,iBAAiB,MAAA,EACjB;QAEJ;IACF;AACF;AAEO,IAAM,YAAY,CACvB,QACA,cACG,OAAO,SAAA,IAAa,OAAO,UAAA,IAAc,CAAC;AAExC,IAAM,gBAAgB,CAC3B,kBAGA,SACG,kBAAkB,YAAY,OAAO,SAAA;AAEnC,IAAM,kBAAkB,CAO7B,kBAOA,UACA,qBAEA,SAAS,eAAA,CAAgB,gBAAgB,EAAE,KAAA,CAAM,MAAM;QACrD,mBAAmB,UAAA,CAAW;IAChC,CAAC","debugId":null}},
    {"offset": {"line": 10620, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/react-query/src/useBaseQuery.ts"],"sourcesContent":["'use client'\nimport * as React from 'react'\n\nimport { isServer, noop, notifyManager } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary'\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary,\n} from './errorBoundaryUtils'\nimport { useIsRestoring } from './IsRestoringProvider'\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch,\n} from './suspense'\nimport type {\n  QueryClient,\n  QueryKey,\n  QueryObserver,\n  QueryObserverResult,\n} from '@tanstack/query-core'\nimport type { UseBaseQueryOptions } from './types'\n\nexport function useBaseQuery<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: UseBaseQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  Observer: typeof QueryObserver,\n  queryClient?: QueryClient,\n): QueryObserverResult<TData, TError> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof options !== 'object' || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object',\n      )\n    }\n  }\n\n  const isRestoring = useIsRestoring()\n  const errorResetBoundary = useQueryErrorResetBoundary()\n  const client = useQueryClient(queryClient)\n  const defaultedOptions = client.defaultQueryOptions(options)\n\n  ;(client.getDefaultOptions().queries as any)?._experimental_beforeQuery?.(\n    defaultedOptions,\n  )\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!defaultedOptions.queryFn) {\n      console.error(\n        `[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`,\n      )\n    }\n  }\n\n  // Make sure results are optimistically set in fetching state before subscribing or updating options\n  defaultedOptions._optimisticResults = isRestoring\n    ? 'isRestoring'\n    : 'optimistic'\n\n  ensureSuspenseTimers(defaultedOptions)\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary)\n\n  useClearResetErrorBoundary(errorResetBoundary)\n\n  // this needs to be invoked before creating the Observer because that can create a cache entry\n  const isNewCacheEntry = !client\n    .getQueryCache()\n    .get(defaultedOptions.queryHash)\n\n  const [observer] = React.useState(\n    () =>\n      new Observer<TQueryFnData, TError, TData, TQueryData, TQueryKey>(\n        client,\n        defaultedOptions,\n      ),\n  )\n\n  // note: this must be called before useSyncExternalStore\n  const result = observer.getOptimisticResult(defaultedOptions)\n\n  const shouldSubscribe = !isRestoring && options.subscribed !== false\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = shouldSubscribe\n          ? observer.subscribe(notifyManager.batchCalls(onStoreChange))\n          : noop\n\n        // Update result to make sure we did not miss any query updates\n        // between creating the observer and subscribing to it.\n        observer.updateResult()\n\n        return unsubscribe\n      },\n      [observer, shouldSubscribe],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions)\n  }, [defaultedOptions, observer])\n\n  // Handle suspense\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n  }\n\n  // Handle error boundary\n  if (\n    getHasError({\n      result,\n      errorResetBoundary,\n      throwOnError: defaultedOptions.throwOnError,\n      query: client\n        .getQueryCache()\n        .get<\n          TQueryFnData,\n          TError,\n          TQueryData,\n          TQueryKey\n        >(defaultedOptions.queryHash),\n      suspense: defaultedOptions.suspense,\n    })\n  ) {\n    throw result.error\n  }\n\n  ;(client.getDefaultOptions().queries as any)?._experimental_afterQuery?.(\n    defaultedOptions,\n    result,\n  )\n\n  if (\n    defaultedOptions.experimental_prefetchInRender &&\n    !isServer &&\n    willFetch(result, isRestoring)\n  ) {\n    const promise = isNewCacheEntry\n      ? // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n        fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n      : // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n        client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n\n    promise?.catch(noop).finally(() => {\n      // `.updateResult()` will trigger `.#currentThenable` to finalize\n      observer.updateResult()\n    })\n  }\n\n  // Handle result property usage tracking\n  return !defaultedOptions.notifyOnChangeProps\n    ? observer.trackResult(result)\n    : result\n}\n"],"names":[],"mappings":";;;;;AACA,YAAY,WAAW;AAEvB,SAAS,UAAU,MAAM,qBAAqB;;AAC9C,SAAS,sBAAsB;AAC/B,SAAS,kCAAkC;AAC3C;AAKA,SAAS,sBAAsB;AAC/B;;;;;;;;;AAcO,SAAS,aAOd,OAAA,EAOA,QAAA,EACA,WAAA,EACoC;IACpC,IAAI,QAAQ,IAAI,aAAa,WAAc;QACzC,IAAI,OAAO,YAAY,YAAY,MAAM,OAAA,CAAQ,OAAO,GAAG;YACzD,MAAM,IAAI,MACR;QAEJ;IACF;IAEA,MAAM,kBAAc,wMAAA,CAAe;IACnC,MAAM,yBAAqB,wNAAA,CAA2B;IACtD,MAAM,aAAS,wMAAA,EAAe,WAAW;IACzC,MAAM,mBAAmB,OAAO,mBAAA,CAAoB,OAAO;IAEzD,OAAO,iBAAA,CAAkB,EAAE,OAAA,EAAiB,4BAC5C;IAGF,IAAI,QAAQ,IAAI,aAAa,WAAc;QACzC,IAAI,CAAC,iBAAiB,OAAA,EAAS;YAC7B,QAAQ,KAAA,CACN,CAAA,CAAA,EAAI,iBAAiB,SAAS,CAAA,kPAAA,CAAA;QAElC;IACF;IAGA,iBAAiB,kBAAA,GAAqB,cAClC,gBACA;IAEJ,IAAA,mMAAA,EAAqB,gBAAgB;IACrC,IAAA,wNAAA,EAAgC,kBAAkB,kBAAkB;IAEpE,IAAA,mNAAA,EAA2B,kBAAkB;IAG7C,MAAM,kBAAkB,CAAC,OACtB,aAAA,CAAc,EACd,GAAA,CAAI,iBAAiB,SAAS;IAEjC,MAAM,CAAC,QAAQ,CAAA,GAAU,iNAAA,CACvB,IACE,IAAI,SACF,QACA;IAKN,MAAM,SAAS,SAAS,mBAAA,CAAoB,gBAAgB;IAE5D,MAAM,kBAAkB,CAAC,eAAe,QAAQ,UAAA,KAAe;IACzD,6NAAA,CACE,oNAAA,CACJ,CAAC,kBAAkB;QACjB,MAAM,cAAc,kBAChB,SAAS,SAAA,CAAU,gMAAA,CAAc,UAAA,CAAW,aAAa,CAAC,IAC1D,+KAAA;QAIJ,SAAS,YAAA,CAAa;QAEtB,OAAO;IACT,GACA;QAAC;QAAU,eAAe;KAAA,GAE5B,IAAM,SAAS,gBAAA,CAAiB,GAChC,IAAM,SAAS,gBAAA,CAAiB;IAG5B,kNAAA,CAAU,MAAM;QACpB,SAAS,UAAA,CAAW,gBAAgB;IACtC,GAAG;QAAC;QAAkB,QAAQ;KAAC;IAG/B,QAAI,4LAAA,EAAc,kBAAkB,MAAM,GAAG;QAC3C,UAAM,8LAAA,EAAgB,kBAAkB,UAAU,kBAAkB;IACtE;IAGA,QACE,oMAAA,EAAY;QACV;QACA;QACA,cAAc,iBAAiB,YAAA;QAC/B,OAAO,OACJ,aAAA,CAAc,EACd,GAAA,CAKC,iBAAiB,SAAS;QAC9B,UAAU,iBAAiB,QAAA;IAC7B,CAAC,GACD;QACA,MAAM,OAAO,KAAA;IACf;;IAEE,OAAO,iBAAA,CAAkB,EAAE,OAAA,EAAiB,2BAC5C,kBACA;IAGF,IACE,iBAAiB,6BAAA,IACjB,CAAC,mLAAA,QACD,wLAAA,EAAU,QAAQ,WAAW,GAC7B;QACA,MAAM,UAAU,kBAAA,2GAAA;YAEZ,8LAAA,EAAgB,kBAAkB,UAAU,kBAAkB,IAAA,kGAAA;QAE9D,OAAO,aAAA,CAAc,EAAE,GAAA,CAAI,iBAAiB,SAAS,GAAG;QAE5D,SAAS,MAAM,+KAAI,EAAE,QAAQ,MAAM;YAEjC,SAAS,YAAA,CAAa;QACxB,CAAC;IACH;IAGA,OAAO,CAAC,iBAAiB,mBAAA,GACrB,SAAS,WAAA,CAAY,MAAM,IAC3B;AACN","debugId":null}},
    {"offset": {"line": 10709, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/react-query/src/useInfiniteQuery.ts"],"sourcesContent":["'use client'\nimport { InfiniteQueryObserver } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type {\n  DefaultError,\n  InfiniteData,\n  QueryClient,\n  QueryKey,\n  QueryObserver,\n} from '@tanstack/query-core'\nimport type {\n  DefinedUseInfiniteQueryResult,\n  UseInfiniteQueryOptions,\n  UseInfiniteQueryResult,\n} from './types'\nimport type {\n  DefinedInitialDataInfiniteOptions,\n  UndefinedInitialDataInfiniteOptions,\n} from './infiniteQueryOptions'\n\nexport function useInfiniteQuery<\n  TQueryFnData,\n  TError = DefaultError,\n  TData = InfiniteData<TQueryFnData>,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n>(\n  options: DefinedInitialDataInfiniteOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryKey,\n    TPageParam\n  >,\n  queryClient?: QueryClient,\n): DefinedUseInfiniteQueryResult<TData, TError>\n\nexport function useInfiniteQuery<\n  TQueryFnData,\n  TError = DefaultError,\n  TData = InfiniteData<TQueryFnData>,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n>(\n  options: UndefinedInitialDataInfiniteOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryKey,\n    TPageParam\n  >,\n  queryClient?: QueryClient,\n): UseInfiniteQueryResult<TData, TError>\n\nexport function useInfiniteQuery<\n  TQueryFnData,\n  TError = DefaultError,\n  TData = InfiniteData<TQueryFnData>,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n>(\n  options: UseInfiniteQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryKey,\n    TPageParam\n  >,\n  queryClient?: QueryClient,\n): UseInfiniteQueryResult<TData, TError>\n\nexport function useInfiniteQuery(\n  options: UseInfiniteQueryOptions,\n  queryClient?: QueryClient,\n) {\n  return useBaseQuery(\n    options,\n    InfiniteQueryObserver as typeof QueryObserver,\n    queryClient,\n  )\n}\n"],"names":[],"mappings":";;;;;AACA,SAAS,6BAA6B;AACtC,SAAS,oBAAoB;;;;AAqEtB,SAAS,iBACd,OAAA,EACA,WAAA,EACA;IACA,WAAO,+LAAA,EACL,SACA,gNAAA,EACA;AAEJ","debugId":null}},
    {"offset": {"line": 10728, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/query-core/src/mutationObserver.ts"],"sourcesContent":["import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { hashKey, shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  DefaultError,\n  MutateOptions,\n  MutationFunctionContext,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TOnMutateResult> = (\n  result: MutationObserverResult<TData, TError, TVariables, TOnMutateResult>,\n) => void\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TOnMutateResult = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TOnMutateResult>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TOnMutateResult>\n\n  #client: QueryClient\n  #currentResult: MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TOnMutateResult\n  > = undefined!\n  #currentMutation?: Mutation<TData, TError, TVariables, TOnMutateResult>\n  #mutateOptions?: MutateOptions<TData, TError, TVariables, TOnMutateResult>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<\n      TData,\n      TError,\n      TVariables,\n      TOnMutateResult\n    >,\n  ) {\n    super()\n\n    this.#client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.#updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options: MutationObserverOptions<\n      TData,\n      TError,\n      TVariables,\n      TOnMutateResult\n    >,\n  ) {\n    const prevOptions = this.options as\n      | MutationObserverOptions<TData, TError, TVariables, TOnMutateResult>\n      | undefined\n    this.options = this.#client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.#currentMutation,\n        observer: this,\n      })\n    }\n\n    if (\n      prevOptions?.mutationKey &&\n      this.options.mutationKey &&\n      hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)\n    ) {\n      this.reset()\n    } else if (this.#currentMutation?.state.status === 'pending') {\n      this.#currentMutation.setOptions(this.options)\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(\n    action: Action<TData, TError, TVariables, TOnMutateResult>,\n  ): void {\n    this.#updateResult()\n\n    this.#notify(action)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TOnMutateResult\n  > {\n    return this.#currentResult\n  }\n\n  reset(): void {\n    // reset needs to remove the observer from the mutation because there is no way to \"get it back\"\n    // another mutate call will yield a new mutation!\n    this.#currentMutation?.removeObserver(this)\n    this.#currentMutation = undefined\n    this.#updateResult()\n    this.#notify()\n  }\n\n  mutate(\n    variables: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TOnMutateResult>,\n  ): Promise<TData> {\n    this.#mutateOptions = options\n\n    this.#currentMutation?.removeObserver(this)\n\n    this.#currentMutation = this.#client\n      .getMutationCache()\n      .build(this.#client, this.options)\n\n    this.#currentMutation.addObserver(this)\n\n    return this.#currentMutation.execute(variables)\n  }\n\n  #updateResult(): void {\n    const state =\n      this.#currentMutation?.state ??\n      getDefaultState<TData, TError, TVariables, TOnMutateResult>()\n\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === 'pending',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    } as MutationObserverResult<TData, TError, TVariables, TOnMutateResult>\n  }\n\n  #notify(action?: Action<TData, TError, TVariables, TOnMutateResult>): void {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables!\n        const onMutateResult = this.#currentResult.context\n\n        const context = {\n          client: this.#client,\n          meta: this.options.meta,\n          mutationKey: this.options.mutationKey,\n        } satisfies MutationFunctionContext\n\n        if (action?.type === 'success') {\n          this.#mutateOptions.onSuccess?.(\n            action.data,\n            variables,\n            onMutateResult,\n            context,\n          )\n          this.#mutateOptions.onSettled?.(\n            action.data,\n            null,\n            variables,\n            onMutateResult,\n            context,\n          )\n        } else if (action?.type === 'error') {\n          this.#mutateOptions.onError?.(\n            action.error,\n            variables,\n            onMutateResult,\n            context,\n          )\n          this.#mutateOptions.onSettled?.(\n            undefined,\n            action.error,\n            variables,\n            onMutateResult,\n            context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult)\n      })\n    })\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 10840, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/react-query/src/useMutation.ts"],"sourcesContent":["'use client'\nimport * as React from 'react'\nimport {\n  MutationObserver,\n  noop,\n  notifyManager,\n  shouldThrowError,\n} from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport type { DefaultError, QueryClient } from '@tanstack/query-core'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TOnMutateResult = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TOnMutateResult>,\n  queryClient?: QueryClient,\n): UseMutationResult<TData, TError, TVariables, TOnMutateResult> {\n  const client = useQueryClient(queryClient)\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TOnMutateResult>(\n        client,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TOnMutateResult>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.throwOnError, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n"],"names":[],"mappings":";;;;;AACA,YAAY,WAAW;;;AACvB;AAMA,SAAS,sBAAsB;;;;;AAUxB,SAAS,YAMd,OAAA,EACA,WAAA,EAC+D;IAC/D,MAAM,aAAS,wMAAA,EAAe,WAAW;IAEzC,MAAM,CAAC,QAAQ,CAAA,GAAU,iNAAA,CACvB,IACE,IAAI,sMAAA,CACF,QACA;IAIA,kNAAA,CAAU,MAAM;QACpB,SAAS,UAAA,CAAW,OAAO;IAC7B,GAAG;QAAC;QAAU,OAAO;KAAC;IAEtB,MAAM,SAAe,6NAAA,CACb,oNAAA,CACJ,CAAC,gBACC,SAAS,SAAA,CAAU,gMAAA,CAAc,UAAA,CAAW,aAAa,CAAC,GAC5D;QAAC,QAAQ;KAAA,GAEX,IAAM,SAAS,gBAAA,CAAiB,GAChC,IAAM,SAAS,gBAAA,CAAiB;IAGlC,MAAM,SAAe,oNAAA,CAGnB,CAAC,WAAW,kBAAkB;QAC5B,SAAS,MAAA,CAAO,WAAW,aAAa,EAAE,KAAA,CAAM,+KAAI;IACtD,GACA;QAAC,QAAQ;KAAA;IAGX,IACE,OAAO,KAAA,QACP,2LAAA,EAAiB,SAAS,OAAA,CAAQ,YAAA,EAAc;QAAC,OAAO,KAAK;KAAC,GAC9D;QACA,MAAM,OAAO,KAAA;IACf;IAEA,OAAO;QAAE,GAAG,MAAA;QAAQ;QAAQ,aAAa,OAAO,MAAA;IAAO;AACzD","debugId":null}},
    {"offset": {"line": 10888, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/react-query/src/usePrefetchInfiniteQuery.tsx"],"sourcesContent":["import { useQueryClient } from './QueryClientProvider'\nimport type {\n  DefaultError,\n  FetchInfiniteQueryOptions,\n  QueryClient,\n  QueryKey,\n} from '@tanstack/query-core'\n\nexport function usePrefetchInfiniteQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n>(\n  options: FetchInfiniteQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryKey,\n    TPageParam\n  >,\n  queryClient?: QueryClient,\n) {\n  const client = useQueryClient(queryClient)\n\n  if (!client.getQueryState(options.queryKey)) {\n    client.prefetchInfiniteQuery(options)\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA,SAAS,sBAAsB;;AAQxB,SAAS,yBAOd,OAAA,EAOA,WAAA,EACA;IACA,MAAM,aAAS,wMAAA,EAAe,WAAW;IAEzC,IAAI,CAAC,OAAO,aAAA,CAAc,QAAQ,QAAQ,GAAG;QAC3C,OAAO,qBAAA,CAAsB,OAAO;IACtC;AACF","debugId":null}},
    {"offset": {"line": 10907, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/react-query/src/usePrefetchQuery.tsx"],"sourcesContent":["import { useQueryClient } from './QueryClientProvider'\nimport type { DefaultError, QueryClient, QueryKey } from '@tanstack/query-core'\nimport type { UsePrefetchQueryOptions } from './types'\n\nexport function usePrefetchQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UsePrefetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n) {\n  const client = useQueryClient(queryClient)\n\n  if (!client.getQueryState(options.queryKey)) {\n    client.prefetchQuery(options)\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA,SAAS,sBAAsB;;AAIxB,SAAS,iBAMd,OAAA,EACA,WAAA,EACA;IACA,MAAM,aAAS,wMAAA,EAAe,WAAW;IAEzC,IAAI,CAAC,OAAO,aAAA,CAAc,QAAQ,QAAQ,GAAG;QAC3C,OAAO,aAAA,CAAc,OAAO;IAC9B;AACF","debugId":null}},
    {"offset": {"line": 10926, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/query-core/src/queriesObserver.ts"],"sourcesContent":["import { notifyManager } from './notifyManager'\nimport { QueryObserver } from './queryObserver'\nimport { Subscribable } from './subscribable'\nimport { replaceEqualDeep, shallowEqualObjects } from './utils'\nimport type {\n  DefaultedQueryObserverOptions,\n  QueryObserverOptions,\n  QueryObserverResult,\n} from './types'\nimport type { QueryClient } from './queryClient'\n\nfunction difference<T>(array1: Array<T>, array2: Array<T>): Array<T> {\n  const excludeSet = new Set(array2)\n  return array1.filter((x) => !excludeSet.has(x))\n}\n\nfunction replaceAt<T>(array: Array<T>, index: number, value: T): Array<T> {\n  const copy = array.slice(0)\n  copy[index] = value\n  return copy\n}\n\ntype QueriesObserverListener = (result: Array<QueryObserverResult>) => void\n\ntype CombineFn<TCombinedResult> = (\n  result: Array<QueryObserverResult>,\n) => TCombinedResult\n\nexport interface QueriesObserverOptions<\n  TCombinedResult = Array<QueryObserverResult>,\n> {\n  combine?: CombineFn<TCombinedResult>\n}\n\nexport class QueriesObserver<\n  TCombinedResult = Array<QueryObserverResult>,\n> extends Subscribable<QueriesObserverListener> {\n  #client: QueryClient\n  #result!: Array<QueryObserverResult>\n  #queries: Array<QueryObserverOptions>\n  #options?: QueriesObserverOptions<TCombinedResult>\n  #observers: Array<QueryObserver>\n  #combinedResult?: TCombinedResult\n  #lastCombine?: CombineFn<TCombinedResult>\n  #lastResult?: Array<QueryObserverResult>\n  #observerMatches: Array<QueryObserverMatch> = []\n\n  constructor(\n    client: QueryClient,\n    queries: Array<QueryObserverOptions<any, any, any, any, any>>,\n    options?: QueriesObserverOptions<TCombinedResult>,\n  ) {\n    super()\n\n    this.#client = client\n    this.#options = options\n    this.#queries = []\n    this.#observers = []\n    this.#result = []\n\n    this.setQueries(queries)\n  }\n\n  protected onSubscribe(): void {\n    if (this.listeners.size === 1) {\n      this.#observers.forEach((observer) => {\n        observer.subscribe((result) => {\n          this.#onUpdate(observer, result)\n        })\n      })\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.listeners.size) {\n      this.destroy()\n    }\n  }\n\n  destroy(): void {\n    this.listeners = new Set()\n    this.#observers.forEach((observer) => {\n      observer.destroy()\n    })\n  }\n\n  setQueries(\n    queries: Array<QueryObserverOptions>,\n    options?: QueriesObserverOptions<TCombinedResult>,\n  ): void {\n    this.#queries = queries\n    this.#options = options\n\n    if (process.env.NODE_ENV !== 'production') {\n      const queryHashes = queries.map(\n        (query) => this.#client.defaultQueryOptions(query).queryHash,\n      )\n      if (new Set(queryHashes).size !== queryHashes.length) {\n        console.warn(\n          '[QueriesObserver]: Duplicate Queries found. This might result in unexpected behavior.',\n        )\n      }\n    }\n\n    notifyManager.batch(() => {\n      const prevObservers = this.#observers\n\n      const newObserverMatches = this.#findMatchingObservers(this.#queries)\n      this.#observerMatches = newObserverMatches\n\n      // set options for the new observers to notify of changes\n      newObserverMatches.forEach((match) =>\n        match.observer.setOptions(match.defaultedQueryOptions),\n      )\n\n      const newObservers = newObserverMatches.map((match) => match.observer)\n      const newResult = newObservers.map((observer) =>\n        observer.getCurrentResult(),\n      )\n\n      const hasLengthChange = prevObservers.length !== newObservers.length\n      const hasIndexChange = newObservers.some(\n        (observer, index) => observer !== prevObservers[index],\n      )\n      const hasStructuralChange = hasLengthChange || hasIndexChange\n\n      const hasResultChange = hasStructuralChange\n        ? true\n        : newResult.some((result, index) => {\n            const prev = this.#result[index]\n            return !prev || !shallowEqualObjects(result, prev)\n          })\n\n      if (!hasStructuralChange && !hasResultChange) return\n\n      if (hasStructuralChange) {\n        this.#observers = newObservers\n      }\n\n      this.#result = newResult\n\n      if (!this.hasListeners()) return\n\n      if (hasStructuralChange) {\n        difference(prevObservers, newObservers).forEach((observer) => {\n          observer.destroy()\n        })\n        difference(newObservers, prevObservers).forEach((observer) => {\n          observer.subscribe((result) => {\n            this.#onUpdate(observer, result)\n          })\n        })\n      }\n\n      this.#notify()\n    })\n  }\n\n  getCurrentResult(): Array<QueryObserverResult> {\n    return this.#result\n  }\n\n  getQueries() {\n    return this.#observers.map((observer) => observer.getCurrentQuery())\n  }\n\n  getObservers() {\n    return this.#observers\n  }\n\n  getOptimisticResult(\n    queries: Array<QueryObserverOptions>,\n    combine: CombineFn<TCombinedResult> | undefined,\n  ): [\n    rawResult: Array<QueryObserverResult>,\n    combineResult: (r?: Array<QueryObserverResult>) => TCombinedResult,\n    trackResult: () => Array<QueryObserverResult>,\n  ] {\n    const matches = this.#findMatchingObservers(queries)\n    const result = matches.map((match) =>\n      match.observer.getOptimisticResult(match.defaultedQueryOptions),\n    )\n\n    return [\n      result,\n      (r?: Array<QueryObserverResult>) => {\n        return this.#combineResult(r ?? result, combine)\n      },\n      () => {\n        return this.#trackResult(result, matches)\n      },\n    ]\n  }\n\n  #trackResult(\n    result: Array<QueryObserverResult>,\n    matches: Array<QueryObserverMatch>,\n  ) {\n    return matches.map((match, index) => {\n      const observerResult = result[index]!\n      return !match.defaultedQueryOptions.notifyOnChangeProps\n        ? match.observer.trackResult(observerResult, (accessedProp) => {\n            // track property on all observers to ensure proper (synchronized) tracking (#7000)\n            matches.forEach((m) => {\n              m.observer.trackProp(accessedProp)\n            })\n          })\n        : observerResult\n    })\n  }\n\n  #combineResult(\n    input: Array<QueryObserverResult>,\n    combine: CombineFn<TCombinedResult> | undefined,\n  ): TCombinedResult {\n    if (combine) {\n      if (\n        !this.#combinedResult ||\n        this.#result !== this.#lastResult ||\n        combine !== this.#lastCombine\n      ) {\n        this.#lastCombine = combine\n        this.#lastResult = this.#result\n        this.#combinedResult = replaceEqualDeep(\n          this.#combinedResult,\n          combine(input),\n        )\n      }\n\n      return this.#combinedResult\n    }\n    return input as any\n  }\n\n  #findMatchingObservers(\n    queries: Array<QueryObserverOptions>,\n  ): Array<QueryObserverMatch> {\n    const prevObserversMap = new Map(\n      this.#observers.map((observer) => [observer.options.queryHash, observer]),\n    )\n\n    const observers: Array<QueryObserverMatch> = []\n\n    queries.forEach((options) => {\n      const defaultedOptions = this.#client.defaultQueryOptions(options)\n      const match = prevObserversMap.get(defaultedOptions.queryHash)\n      if (match) {\n        observers.push({\n          defaultedQueryOptions: defaultedOptions,\n          observer: match,\n        })\n      } else {\n        observers.push({\n          defaultedQueryOptions: defaultedOptions,\n          observer: new QueryObserver(this.#client, defaultedOptions),\n        })\n      }\n    })\n\n    return observers\n  }\n\n  #onUpdate(observer: QueryObserver, result: QueryObserverResult): void {\n    const index = this.#observers.indexOf(observer)\n    if (index !== -1) {\n      this.#result = replaceAt(this.#result, index, result)\n      this.#notify()\n    }\n  }\n\n  #notify(): void {\n    if (this.hasListeners()) {\n      const previousResult = this.#combinedResult\n      const newTracked = this.#trackResult(this.#result, this.#observerMatches)\n      const newResult = this.#combineResult(newTracked, this.#options?.combine)\n\n      if (previousResult !== newResult) {\n        notifyManager.batch(() => {\n          this.listeners.forEach((listener) => {\n            listener(this.#result)\n          })\n        })\n      }\n    }\n  }\n}\n\ntype QueryObserverMatch = {\n  defaultedQueryOptions: DefaultedQueryObserverOptions\n  observer: QueryObserver\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 11123, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/react-query/src/useQueries.ts"],"sourcesContent":["'use client'\nimport * as React from 'react'\n\nimport {\n  QueriesObserver,\n  QueryObserver,\n  noop,\n  notifyManager,\n} from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { useIsRestoring } from './IsRestoringProvider'\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary'\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary,\n} from './errorBoundaryUtils'\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch,\n} from './suspense'\nimport type {\n  DefinedUseQueryResult,\n  UseQueryOptions,\n  UseQueryResult,\n} from './types'\nimport type {\n  DefaultError,\n  OmitKeyof,\n  QueriesObserverOptions,\n  QueriesPlaceholderDataFunction,\n  QueryClient,\n  QueryFunction,\n  QueryKey,\n  QueryObserverOptions,\n  ThrowOnError,\n} from '@tanstack/query-core'\n\n// This defines the `UseQueryOptions` that are accepted in `QueriesOptions` & `GetOptions`.\n// `placeholderData` function always gets undefined passed\ntype UseQueryOptionsForUseQueries<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> = OmitKeyof<\n  UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  'placeholderData' | 'subscribed'\n> & {\n  placeholderData?: TQueryFnData | QueriesPlaceholderDataFunction<TQueryFnData>\n}\n\n// Avoid TS depth-limit error in case of large array literal\ntype MAXIMUM_DEPTH = 20\n\n// Widen the type of the symbol to enable type inference even if skipToken is not immutable.\ntype SkipTokenForUseQueries = symbol\n\ntype GetUseQueryOptionsForUseQueries<T> =\n  // Part 1: responsible for applying explicit type parameter to function arguments, if object { queryFnData: TQueryFnData, error: TError, data: TData }\n  T extends {\n    queryFnData: infer TQueryFnData\n    error?: infer TError\n    data: infer TData\n  }\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError, TData>\n    : T extends { queryFnData: infer TQueryFnData; error?: infer TError }\n      ? UseQueryOptionsForUseQueries<TQueryFnData, TError>\n      : T extends { data: infer TData; error?: infer TError }\n        ? UseQueryOptionsForUseQueries<unknown, TError, TData>\n        : // Part 2: responsible for applying explicit type parameter to function arguments, if tuple [TQueryFnData, TError, TData]\n          T extends [infer TQueryFnData, infer TError, infer TData]\n          ? UseQueryOptionsForUseQueries<TQueryFnData, TError, TData>\n          : T extends [infer TQueryFnData, infer TError]\n            ? UseQueryOptionsForUseQueries<TQueryFnData, TError>\n            : T extends [infer TQueryFnData]\n              ? UseQueryOptionsForUseQueries<TQueryFnData>\n              : // Part 3: responsible for inferring and enforcing type if no explicit parameter was provided\n                T extends {\n                    queryFn?:\n                      | QueryFunction<infer TQueryFnData, infer TQueryKey>\n                      | SkipTokenForUseQueries\n                    select?: (data: any) => infer TData\n                    throwOnError?: ThrowOnError<any, infer TError, any, any>\n                  }\n                ? UseQueryOptionsForUseQueries<\n                    TQueryFnData,\n                    unknown extends TError ? DefaultError : TError,\n                    unknown extends TData ? TQueryFnData : TData,\n                    TQueryKey\n                  >\n                : // Fallback\n                  UseQueryOptionsForUseQueries\n\n// A defined initialData setting should return a DefinedUseQueryResult rather than UseQueryResult\ntype GetDefinedOrUndefinedQueryResult<T, TData, TError = unknown> = T extends {\n  initialData?: infer TInitialData\n}\n  ? unknown extends TInitialData\n    ? UseQueryResult<TData, TError>\n    : TInitialData extends TData\n      ? DefinedUseQueryResult<TData, TError>\n      : TInitialData extends () => infer TInitialDataResult\n        ? unknown extends TInitialDataResult\n          ? UseQueryResult<TData, TError>\n          : TInitialDataResult extends TData\n            ? DefinedUseQueryResult<TData, TError>\n            : UseQueryResult<TData, TError>\n        : UseQueryResult<TData, TError>\n  : UseQueryResult<TData, TError>\n\ntype GetUseQueryResult<T> =\n  // Part 1: responsible for mapping explicit type parameter to function result, if object\n  T extends { queryFnData: any; error?: infer TError; data: infer TData }\n    ? GetDefinedOrUndefinedQueryResult<T, TData, TError>\n    : T extends { queryFnData: infer TQueryFnData; error?: infer TError }\n      ? GetDefinedOrUndefinedQueryResult<T, TQueryFnData, TError>\n      : T extends { data: infer TData; error?: infer TError }\n        ? GetDefinedOrUndefinedQueryResult<T, TData, TError>\n        : // Part 2: responsible for mapping explicit type parameter to function result, if tuple\n          T extends [any, infer TError, infer TData]\n          ? GetDefinedOrUndefinedQueryResult<T, TData, TError>\n          : T extends [infer TQueryFnData, infer TError]\n            ? GetDefinedOrUndefinedQueryResult<T, TQueryFnData, TError>\n            : T extends [infer TQueryFnData]\n              ? GetDefinedOrUndefinedQueryResult<T, TQueryFnData>\n              : // Part 3: responsible for mapping inferred type to results, if no explicit parameter was provided\n                T extends {\n                    queryFn?:\n                      | QueryFunction<infer TQueryFnData, any>\n                      | SkipTokenForUseQueries\n                    select?: (data: any) => infer TData\n                    throwOnError?: ThrowOnError<any, infer TError, any, any>\n                  }\n                ? GetDefinedOrUndefinedQueryResult<\n                    T,\n                    unknown extends TData ? TQueryFnData : TData,\n                    unknown extends TError ? DefaultError : TError\n                  >\n                : // Fallback\n                  UseQueryResult\n\n/**\n * QueriesOptions reducer recursively unwraps function arguments to infer/enforce type param\n */\nexport type QueriesOptions<\n  T extends Array<any>,\n  TResults extends Array<any> = [],\n  TDepth extends ReadonlyArray<number> = [],\n> = TDepth['length'] extends MAXIMUM_DEPTH\n  ? Array<UseQueryOptionsForUseQueries>\n  : T extends []\n    ? []\n    : T extends [infer Head]\n      ? [...TResults, GetUseQueryOptionsForUseQueries<Head>]\n      : T extends [infer Head, ...infer Tails]\n        ? QueriesOptions<\n            [...Tails],\n            [...TResults, GetUseQueryOptionsForUseQueries<Head>],\n            [...TDepth, 1]\n          >\n        : ReadonlyArray<unknown> extends T\n          ? T\n          : // If T is *some* array but we couldn't assign unknown[] to it, then it must hold some known/homogenous type!\n            // use this to infer the param types in the case of Array.map() argument\n            T extends Array<\n                UseQueryOptionsForUseQueries<\n                  infer TQueryFnData,\n                  infer TError,\n                  infer TData,\n                  infer TQueryKey\n                >\n              >\n            ? Array<\n                UseQueryOptionsForUseQueries<\n                  TQueryFnData,\n                  TError,\n                  TData,\n                  TQueryKey\n                >\n              >\n            : // Fallback\n              Array<UseQueryOptionsForUseQueries>\n\n/**\n * QueriesResults reducer recursively maps type param to results\n */\nexport type QueriesResults<\n  T extends Array<any>,\n  TResults extends Array<any> = [],\n  TDepth extends ReadonlyArray<number> = [],\n> = TDepth['length'] extends MAXIMUM_DEPTH\n  ? Array<UseQueryResult>\n  : T extends []\n    ? []\n    : T extends [infer Head]\n      ? [...TResults, GetUseQueryResult<Head>]\n      : T extends [infer Head, ...infer Tails]\n        ? QueriesResults<\n            [...Tails],\n            [...TResults, GetUseQueryResult<Head>],\n            [...TDepth, 1]\n          >\n        : { [K in keyof T]: GetUseQueryResult<T[K]> }\n\nexport function useQueries<\n  T extends Array<any>,\n  TCombinedResult = QueriesResults<T>,\n>(\n  {\n    queries,\n    ...options\n  }: {\n    queries:\n      | readonly [...QueriesOptions<T>]\n      | readonly [...{ [K in keyof T]: GetUseQueryOptionsForUseQueries<T[K]> }]\n    combine?: (result: QueriesResults<T>) => TCombinedResult\n    subscribed?: boolean\n  },\n  queryClient?: QueryClient,\n): TCombinedResult {\n  const client = useQueryClient(queryClient)\n  const isRestoring = useIsRestoring()\n  const errorResetBoundary = useQueryErrorResetBoundary()\n\n  const defaultedQueries = React.useMemo(\n    () =>\n      queries.map((opts) => {\n        const defaultedOptions = client.defaultQueryOptions(\n          opts as QueryObserverOptions,\n        )\n\n        // Make sure the results are already in fetching state before subscribing or updating options\n        defaultedOptions._optimisticResults = isRestoring\n          ? 'isRestoring'\n          : 'optimistic'\n\n        return defaultedOptions\n      }),\n    [queries, client, isRestoring],\n  )\n\n  defaultedQueries.forEach((query) => {\n    ensureSuspenseTimers(query)\n    ensurePreventErrorBoundaryRetry(query, errorResetBoundary)\n  })\n\n  useClearResetErrorBoundary(errorResetBoundary)\n\n  const [observer] = React.useState(\n    () =>\n      new QueriesObserver<TCombinedResult>(\n        client,\n        defaultedQueries,\n        options as QueriesObserverOptions<TCombinedResult>,\n      ),\n  )\n\n  // note: this must be called before useSyncExternalStore\n  const [optimisticResult, getCombinedResult, trackResult] =\n    observer.getOptimisticResult(\n      defaultedQueries,\n      (options as QueriesObserverOptions<TCombinedResult>).combine,\n    )\n\n  const shouldSubscribe = !isRestoring && options.subscribed !== false\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        shouldSubscribe\n          ? observer.subscribe(notifyManager.batchCalls(onStoreChange))\n          : noop,\n      [observer, shouldSubscribe],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  React.useEffect(() => {\n    observer.setQueries(\n      defaultedQueries,\n      options as QueriesObserverOptions<TCombinedResult>,\n    )\n  }, [defaultedQueries, options, observer])\n\n  const shouldAtLeastOneSuspend = optimisticResult.some((result, index) =>\n    shouldSuspend(defaultedQueries[index], result),\n  )\n\n  const suspensePromises = shouldAtLeastOneSuspend\n    ? optimisticResult.flatMap((result, index) => {\n        const opts = defaultedQueries[index]\n\n        if (opts) {\n          const queryObserver = new QueryObserver(client, opts)\n          if (shouldSuspend(opts, result)) {\n            return fetchOptimistic(opts, queryObserver, errorResetBoundary)\n          } else if (willFetch(result, isRestoring)) {\n            void fetchOptimistic(opts, queryObserver, errorResetBoundary)\n          }\n        }\n        return []\n      })\n    : []\n\n  if (suspensePromises.length > 0) {\n    throw Promise.all(suspensePromises)\n  }\n  const firstSingleResultWhichShouldThrow = optimisticResult.find(\n    (result, index) => {\n      const query = defaultedQueries[index]\n      return (\n        query &&\n        getHasError({\n          result,\n          errorResetBoundary,\n          throwOnError: query.throwOnError,\n          query: client.getQueryCache().get(query.queryHash),\n          suspense: query.suspense,\n        })\n      )\n    },\n  )\n\n  if (firstSingleResultWhichShouldThrow?.error) {\n    throw firstSingleResultWhichShouldThrow.error\n  }\n\n  return getCombinedResult(trackResult())\n}\n"],"names":[],"mappings":";;;;;AACA,YAAY,WAAW;AAEvB;;;;AAMA,SAAS,sBAAsB;AAC/B,SAAS,sBAAsB;AAC/B,SAAS,kCAAkC;AAC3C;AAKA;;;;;;;;;AA8LO,SAAS,WAId,EACE,OAAA,EACA,GAAG,SACL,EAOA,WAAA,EACiB;IACjB,MAAM,aAAS,wMAAA,EAAe,WAAW;IACzC,MAAM,kBAAc,wMAAA,CAAe;IACnC,MAAM,yBAAqB,wNAAA,CAA2B;IAEtD,MAAM,mBAAyB,gNAAA,CAC7B,IACE,QAAQ,GAAA,CAAI,CAAC,SAAS;YACpB,MAAM,mBAAmB,OAAO,mBAAA,CAC9B;YAIF,iBAAiB,kBAAA,GAAqB,cAClC,gBACA;YAEJ,OAAO;QACT,CAAC,GACH;QAAC;QAAS;QAAQ,WAAW;KAAA;IAG/B,iBAAiB,OAAA,CAAQ,CAAC,UAAU;QAClC,IAAA,mMAAA,EAAqB,KAAK;QAC1B,IAAA,wNAAA,EAAgC,OAAO,kBAAkB;IAC3D,CAAC;IAED,IAAA,mNAAA,EAA2B,kBAAkB;IAE7C,MAAM,CAAC,QAAQ,CAAA,GAAU,iNAAA,CACvB,IACE,IAAI,oMAAA,CACF,QACA,kBACA;IAKN,MAAM,CAAC,kBAAkB,mBAAmB,WAAW,CAAA,GACrD,SAAS,mBAAA,CACP,kBACC,QAAoD,OAAA;IAGzD,MAAM,kBAAkB,CAAC,eAAe,QAAQ,UAAA,KAAe;IACzD,6NAAA,CACE,oNAAA,CACJ,CAAC,gBACC,kBACI,SAAS,SAAA,CAAU,gMAAA,CAAc,UAAA,CAAW,aAAa,CAAC,IAC1D,+KAAA,EACN;QAAC;QAAU,eAAe;KAAA,GAE5B,IAAM,SAAS,gBAAA,CAAiB,GAChC,IAAM,SAAS,gBAAA,CAAiB;IAG5B,kNAAA,CAAU,MAAM;QACpB,SAAS,UAAA,CACP,kBACA;IAEJ,GAAG;QAAC;QAAkB;QAAS,QAAQ;KAAC;IAExC,MAAM,0BAA0B,iBAAiB,IAAA,CAAK,CAAC,QAAQ,YAC7D,4LAAA,EAAc,gBAAA,CAAiB,KAAK,CAAA,EAAG,MAAM;IAG/C,MAAM,mBAAmB,0BACrB,iBAAiB,OAAA,CAAQ,CAAC,QAAQ,UAAU;QAC1C,MAAM,OAAO,gBAAA,CAAiB,KAAK,CAAA;QAEnC,IAAI,MAAM;YACR,MAAM,gBAAgB,IAAI,gMAAA,CAAc,QAAQ,IAAI;YACpD,QAAI,4LAAA,EAAc,MAAM,MAAM,GAAG;gBAC/B,WAAO,8LAAA,EAAgB,MAAM,eAAe,kBAAkB;YAChE,OAAA,QAAW,wLAAA,EAAU,QAAQ,WAAW,GAAG;gBACzC,KAAK,kMAAA,EAAgB,MAAM,eAAe,kBAAkB;YAC9D;QACF;QACA,OAAO,CAAC,CAAA;IACV,CAAC,IACD,CAAC,CAAA;IAEL,IAAI,iBAAiB,MAAA,GAAS,GAAG;QAC/B,MAAM,QAAQ,GAAA,CAAI,gBAAgB;IACpC;IACA,MAAM,oCAAoC,iBAAiB,IAAA,CACzD,CAAC,QAAQ,UAAU;QACjB,MAAM,QAAQ,gBAAA,CAAiB,KAAK,CAAA;QACpC,OACE,aACA,oMAAA,EAAY;YACV;YACA;YACA,cAAc,MAAM,YAAA;YACpB,OAAO,OAAO,aAAA,CAAc,EAAE,GAAA,CAAI,MAAM,SAAS;YACjD,UAAU,MAAM,QAAA;QAClB,CAAC;IAEL;IAGF,IAAI,mCAAmC,OAAO;QAC5C,MAAM,kCAAkC,KAAA;IAC1C;IAEA,OAAO,kBAAkB,YAAY,CAAC;AACxC","debugId":null}},
    {"offset": {"line": 11215, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/react-query/src/useQuery.ts"],"sourcesContent":["'use client'\nimport { QueryObserver } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type {\n  DefaultError,\n  NoInfer,\n  QueryClient,\n  QueryKey,\n} from '@tanstack/query-core'\nimport type {\n  DefinedUseQueryResult,\n  UseQueryOptions,\n  UseQueryResult,\n} from './types'\nimport type {\n  DefinedInitialDataOptions,\n  UndefinedInitialDataOptions,\n} from './queryOptions'\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: DefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n): DefinedUseQueryResult<NoInfer<TData>, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UndefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n): UseQueryResult<NoInfer<TData>, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n): UseQueryResult<NoInfer<TData>, TError>\n\nexport function useQuery(options: UseQueryOptions, queryClient?: QueryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient)\n}\n"],"names":[],"mappings":";;;;;AACA,SAAS,qBAAqB;AAC9B,SAAS,oBAAoB;;;;AA+CtB,SAAS,SAAS,OAAA,EAA0B,WAAA,EAA2B;IAC5E,WAAO,+LAAA,EAAa,SAAS,gMAAA,EAAe,WAAW;AACzD","debugId":null}},
    {"offset": {"line": 11234, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/react-query/src/useSuspenseInfiniteQuery.ts"],"sourcesContent":["'use client'\nimport { InfiniteQueryObserver, skipToken } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport { defaultThrowOnError } from './suspense'\nimport type {\n  DefaultError,\n  InfiniteData,\n  InfiniteQueryObserverSuccessResult,\n  QueryClient,\n  QueryKey,\n  QueryObserver,\n} from '@tanstack/query-core'\nimport type {\n  UseSuspenseInfiniteQueryOptions,\n  UseSuspenseInfiniteQueryResult,\n} from './types'\n\nexport function useSuspenseInfiniteQuery<\n  TQueryFnData,\n  TError = DefaultError,\n  TData = InfiniteData<TQueryFnData>,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n>(\n  options: UseSuspenseInfiniteQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryKey,\n    TPageParam\n  >,\n  queryClient?: QueryClient,\n): UseSuspenseInfiniteQueryResult<TData, TError> {\n  if (process.env.NODE_ENV !== 'production') {\n    if ((options.queryFn as any) === skipToken) {\n      console.error('skipToken is not allowed for useSuspenseInfiniteQuery')\n    }\n  }\n\n  return useBaseQuery(\n    {\n      ...options,\n      enabled: true,\n      suspense: true,\n      throwOnError: defaultThrowOnError,\n    },\n    InfiniteQueryObserver as typeof QueryObserver,\n    queryClient,\n  ) as InfiniteQueryObserverSuccessResult<TData, TError>\n}\n"],"names":[],"mappings":";;;;;;AACA,SAAS,uBAAuB,iBAAiB;AACjD,SAAS,oBAAoB;AAC7B,SAAS,2BAA2B;;;;;AAc7B,SAAS,yBAOd,OAAA,EAOA,WAAA,EAC+C;IAC/C,IAAI,QAAQ,IAAI,aAAa,WAAc;QACzC,IAAK,QAAQ,OAAA,KAAoB,oLAAA,EAAW;YAC1C,QAAQ,KAAA,CAAM,uDAAuD;QACvE;IACF;IAEA,WAAO,+LAAA,EACL;QACE,GAAG,OAAA;QACH,SAAS;QACT,UAAU;QACV,cAAc,kMAAA;IAChB,GACA,gNAAA,EACA;AAEJ","debugId":null}},
    {"offset": {"line": 11266, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/react-query/src/useSuspenseQueries.ts"],"sourcesContent":["'use client'\nimport { skipToken } from '@tanstack/query-core'\nimport { useQueries } from './useQueries'\nimport { defaultThrowOnError } from './suspense'\nimport type { UseSuspenseQueryOptions, UseSuspenseQueryResult } from './types'\nimport type {\n  DefaultError,\n  QueryClient,\n  QueryFunction,\n  ThrowOnError,\n} from '@tanstack/query-core'\n\n// Avoid TS depth-limit error in case of large array literal\ntype MAXIMUM_DEPTH = 20\n\n// Widen the type of the symbol to enable type inference even if skipToken is not immutable.\ntype SkipTokenForUseQueries = symbol\n\ntype GetUseSuspenseQueryOptions<T> =\n  // Part 1: responsible for applying explicit type parameter to function arguments, if object { queryFnData: TQueryFnData, error: TError, data: TData }\n  T extends {\n    queryFnData: infer TQueryFnData\n    error?: infer TError\n    data: infer TData\n  }\n    ? UseSuspenseQueryOptions<TQueryFnData, TError, TData>\n    : T extends { queryFnData: infer TQueryFnData; error?: infer TError }\n      ? UseSuspenseQueryOptions<TQueryFnData, TError>\n      : T extends { data: infer TData; error?: infer TError }\n        ? UseSuspenseQueryOptions<unknown, TError, TData>\n        : // Part 2: responsible for applying explicit type parameter to function arguments, if tuple [TQueryFnData, TError, TData]\n          T extends [infer TQueryFnData, infer TError, infer TData]\n          ? UseSuspenseQueryOptions<TQueryFnData, TError, TData>\n          : T extends [infer TQueryFnData, infer TError]\n            ? UseSuspenseQueryOptions<TQueryFnData, TError>\n            : T extends [infer TQueryFnData]\n              ? UseSuspenseQueryOptions<TQueryFnData>\n              : // Part 3: responsible for inferring and enforcing type if no explicit parameter was provided\n                T extends {\n                    queryFn?:\n                      | QueryFunction<infer TQueryFnData, infer TQueryKey>\n                      | SkipTokenForUseQueries\n                    select?: (data: any) => infer TData\n                    throwOnError?: ThrowOnError<any, infer TError, any, any>\n                  }\n                ? UseSuspenseQueryOptions<\n                    TQueryFnData,\n                    TError,\n                    TData,\n                    TQueryKey\n                  >\n                : T extends {\n                      queryFn?:\n                        | QueryFunction<infer TQueryFnData, infer TQueryKey>\n                        | SkipTokenForUseQueries\n                      throwOnError?: ThrowOnError<any, infer TError, any, any>\n                    }\n                  ? UseSuspenseQueryOptions<\n                      TQueryFnData,\n                      TError,\n                      TQueryFnData,\n                      TQueryKey\n                    >\n                  : // Fallback\n                    UseSuspenseQueryOptions\n\ntype GetUseSuspenseQueryResult<T> =\n  // Part 1: responsible for mapping explicit type parameter to function result, if object\n  T extends { queryFnData: any; error?: infer TError; data: infer TData }\n    ? UseSuspenseQueryResult<TData, TError>\n    : T extends { queryFnData: infer TQueryFnData; error?: infer TError }\n      ? UseSuspenseQueryResult<TQueryFnData, TError>\n      : T extends { data: infer TData; error?: infer TError }\n        ? UseSuspenseQueryResult<TData, TError>\n        : // Part 2: responsible for mapping explicit type parameter to function result, if tuple\n          T extends [any, infer TError, infer TData]\n          ? UseSuspenseQueryResult<TData, TError>\n          : T extends [infer TQueryFnData, infer TError]\n            ? UseSuspenseQueryResult<TQueryFnData, TError>\n            : T extends [infer TQueryFnData]\n              ? UseSuspenseQueryResult<TQueryFnData>\n              : // Part 3: responsible for mapping inferred type to results, if no explicit parameter was provided\n                T extends {\n                    queryFn?:\n                      | QueryFunction<infer TQueryFnData, any>\n                      | SkipTokenForUseQueries\n                    select?: (data: any) => infer TData\n                    throwOnError?: ThrowOnError<any, infer TError, any, any>\n                  }\n                ? UseSuspenseQueryResult<\n                    unknown extends TData ? TQueryFnData : TData,\n                    unknown extends TError ? DefaultError : TError\n                  >\n                : T extends {\n                      queryFn?:\n                        | QueryFunction<infer TQueryFnData, any>\n                        | SkipTokenForUseQueries\n                      throwOnError?: ThrowOnError<any, infer TError, any, any>\n                    }\n                  ? UseSuspenseQueryResult<\n                      TQueryFnData,\n                      unknown extends TError ? DefaultError : TError\n                    >\n                  : // Fallback\n                    UseSuspenseQueryResult\n\n/**\n * SuspenseQueriesOptions reducer recursively unwraps function arguments to infer/enforce type param\n */\nexport type SuspenseQueriesOptions<\n  T extends Array<any>,\n  TResults extends Array<any> = [],\n  TDepth extends ReadonlyArray<number> = [],\n> = TDepth['length'] extends MAXIMUM_DEPTH\n  ? Array<UseSuspenseQueryOptions>\n  : T extends []\n    ? []\n    : T extends [infer Head]\n      ? [...TResults, GetUseSuspenseQueryOptions<Head>]\n      : T extends [infer Head, ...infer Tails]\n        ? SuspenseQueriesOptions<\n            [...Tails],\n            [...TResults, GetUseSuspenseQueryOptions<Head>],\n            [...TDepth, 1]\n          >\n        : Array<unknown> extends T\n          ? T\n          : // If T is *some* array but we couldn't assign unknown[] to it, then it must hold some known/homogenous type!\n            // use this to infer the param types in the case of Array.map() argument\n            T extends Array<\n                UseSuspenseQueryOptions<\n                  infer TQueryFnData,\n                  infer TError,\n                  infer TData,\n                  infer TQueryKey\n                >\n              >\n            ? Array<\n                UseSuspenseQueryOptions<TQueryFnData, TError, TData, TQueryKey>\n              >\n            : // Fallback\n              Array<UseSuspenseQueryOptions>\n\n/**\n * SuspenseQueriesResults reducer recursively maps type param to results\n */\nexport type SuspenseQueriesResults<\n  T extends Array<any>,\n  TResults extends Array<any> = [],\n  TDepth extends ReadonlyArray<number> = [],\n> = TDepth['length'] extends MAXIMUM_DEPTH\n  ? Array<UseSuspenseQueryResult>\n  : T extends []\n    ? []\n    : T extends [infer Head]\n      ? [...TResults, GetUseSuspenseQueryResult<Head>]\n      : T extends [infer Head, ...infer Tails]\n        ? SuspenseQueriesResults<\n            [...Tails],\n            [...TResults, GetUseSuspenseQueryResult<Head>],\n            [...TDepth, 1]\n          >\n        : { [K in keyof T]: GetUseSuspenseQueryResult<T[K]> }\n\nexport function useSuspenseQueries<\n  T extends Array<any>,\n  TCombinedResult = SuspenseQueriesResults<T>,\n>(\n  options: {\n    queries:\n      | readonly [...SuspenseQueriesOptions<T>]\n      | readonly [...{ [K in keyof T]: GetUseSuspenseQueryOptions<T[K]> }]\n    combine?: (result: SuspenseQueriesResults<T>) => TCombinedResult\n  },\n  queryClient?: QueryClient,\n): TCombinedResult\n\nexport function useSuspenseQueries<\n  T extends Array<any>,\n  TCombinedResult = SuspenseQueriesResults<T>,\n>(\n  options: {\n    queries: readonly [...SuspenseQueriesOptions<T>]\n    combine?: (result: SuspenseQueriesResults<T>) => TCombinedResult\n  },\n  queryClient?: QueryClient,\n): TCombinedResult\n\nexport function useSuspenseQueries(options: any, queryClient?: QueryClient) {\n  return useQueries(\n    {\n      ...options,\n      queries: options.queries.map((query: any) => {\n        if (process.env.NODE_ENV !== 'production') {\n          if (query.queryFn === skipToken) {\n            console.error('skipToken is not allowed for useSuspenseQueries')\n          }\n        }\n\n        return {\n          ...query,\n          suspense: true,\n          throwOnError: defaultThrowOnError,\n          enabled: true,\n          placeholderData: undefined,\n        }\n      }),\n    },\n    queryClient,\n  )\n}\n"],"names":[],"mappings":";;;;;AACA,SAAS,iBAAiB;AAC1B,SAAS,kBAAkB;AAC3B,SAAS,2BAA2B;;;;;AAyL7B,SAAS,mBAAmB,OAAA,EAAc,WAAA,EAA2B;IAC1E,WAAO,2LAAA,EACL;QACE,GAAG,OAAA;QACH,SAAS,QAAQ,OAAA,CAAQ,GAAA,CAAI,CAAC,UAAe;YAC3C,IAAI,QAAQ,IAAI,aAAa,WAAc;gBACzC,IAAI,MAAM,OAAA,KAAY,oLAAA,EAAW;oBAC/B,QAAQ,KAAA,CAAM,iDAAiD;gBACjE;YACF;YAEA,OAAO;gBACL,GAAG,KAAA;gBACH,UAAU;gBACV,cAAc,kMAAA;gBACd,SAAS;gBACT,iBAAiB,KAAA;YACnB;QACF,CAAC;IACH,GACA;AAEJ","debugId":null}},
    {"offset": {"line": 11303, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40tanstack/react-query/src/useSuspenseQuery.ts"],"sourcesContent":["'use client'\nimport { QueryObserver, skipToken } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport { defaultThrowOnError } from './suspense'\nimport type { UseSuspenseQueryOptions, UseSuspenseQueryResult } from './types'\nimport type { DefaultError, QueryClient, QueryKey } from '@tanstack/query-core'\n\nexport function useSuspenseQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseSuspenseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n): UseSuspenseQueryResult<TData, TError> {\n  if (process.env.NODE_ENV !== 'production') {\n    if ((options.queryFn as any) === skipToken) {\n      console.error('skipToken is not allowed for useSuspenseQuery')\n    }\n  }\n\n  return useBaseQuery(\n    {\n      ...options,\n      enabled: true,\n      suspense: true,\n      throwOnError: defaultThrowOnError,\n      placeholderData: undefined,\n    },\n    QueryObserver,\n    queryClient,\n  ) as UseSuspenseQueryResult<TData, TError>\n}\n"],"names":[],"mappings":";;;;;;AACA,SAAS,eAAe,iBAAiB;AACzC,SAAS,oBAAoB;AAC7B,SAAS,2BAA2B;;;;;AAI7B,SAAS,iBAMd,OAAA,EACA,WAAA,EACuC;IACvC,IAAI,QAAQ,IAAI,aAAa,WAAc;QACzC,IAAK,QAAQ,OAAA,KAAoB,oLAAA,EAAW;YAC1C,QAAQ,KAAA,CAAM,+CAA+C;QAC/D;IACF;IAEA,WAAO,+LAAA,EACL;QACE,GAAG,OAAA;QACH,SAAS;QACT,UAAU;QACV,cAAc,kMAAA;QACd,iBAAiB,KAAA;IACnB,GACA,gMAAA,EACA;AAEJ","debugId":null}},
    {"offset": {"line": 11336, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@trpc/react-query/dist/shared-JtnEvJvB.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40trpc/react-query/src/shared/proxy/decorationProxy.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/react-query/src/internals/context.tsx","file:///D:/github2/interview-prep-app/node_modules/%40trpc/react-query/src/shared/proxy/utilsProxy.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/react-query/src/shared/proxy/useQueriesProxy.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/react-query/src/internals/getClientArgs.ts","file:///D:/github2/interview-prep-app/node_modules/node_modules/.pnpm/%40oxc-project%2Bruntime%400.72.2/node_modules/%40oxc-project/runtime/src/helpers/asyncIterator.js","file:///D:/github2/interview-prep-app/node_modules/%40trpc/react-query/src/internals/trpcResult.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/react-query/src/utils/createUtilityFunctions.ts","file:///D:/github2/interview-prep-app/node_modules/%40trpc/react-query/src/shared/hooks/createHooksInternal.tsx","file:///D:/github2/interview-prep-app/node_modules/%40trpc/react-query/src/shared/queryClient.ts"],"sourcesContent":["import type { AnyRouter } from '@trpc/server/unstable-core-do-not-import';\nimport { createRecursiveProxy } from '@trpc/server/unstable-core-do-not-import';\nimport type { CreateReactQueryHooks } from '../hooks/createHooksInternal';\n\n/**\n * Create proxy for decorating procedures\n * @internal\n */\nexport function createReactDecoration<\n  TRouter extends AnyRouter,\n  TSSRContext = unknown,\n>(hooks: CreateReactQueryHooks<TRouter, TSSRContext>) {\n  return createRecursiveProxy(({ path, args }) => {\n    const pathCopy = [...path];\n\n    // The last arg is for instance `.useMutation` or `.useQuery()`\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const lastArg = pathCopy.pop()!;\n\n    if (lastArg === 'useMutation') {\n      return (hooks as any)[lastArg](pathCopy, ...args);\n    }\n\n    if (lastArg === '_def') {\n      return {\n        path: pathCopy,\n      };\n    }\n\n    const [input, ...rest] = args;\n    const opts = rest[0] ?? {};\n\n    return (hooks as any)[lastArg](pathCopy, input, opts);\n  });\n}\n","import type {\n  CancelOptions,\n  FetchInfiniteQueryOptions,\n  FetchQueryOptions,\n  InfiniteData,\n  InvalidateOptions,\n  InvalidateQueryFilters,\n  MutationOptions,\n  QueryClient,\n  QueryFilters,\n  QueryKey,\n  RefetchOptions,\n  RefetchQueryFilters,\n  ResetOptions,\n  SetDataOptions,\n  Updater,\n} from '@tanstack/react-query';\nimport type {\n  TRPCClient,\n  TRPCClientError,\n  TRPCRequestOptions,\n  TRPCUntypedClient,\n} from '@trpc/client';\nimport type {\n  AnyClientTypes,\n  AnyRouter,\n  DistributiveOmit,\n} from '@trpc/server/unstable-core-do-not-import';\nimport * as React from 'react';\nimport type {\n  DefinedTRPCInfiniteQueryOptionsIn,\n  DefinedTRPCInfiniteQueryOptionsOut,\n  DefinedTRPCQueryOptionsIn,\n  DefinedTRPCQueryOptionsOut,\n  ExtractCursorType,\n  UndefinedTRPCInfiniteQueryOptionsIn,\n  UndefinedTRPCInfiniteQueryOptionsOut,\n  UndefinedTRPCQueryOptionsIn,\n  UndefinedTRPCQueryOptionsOut,\n} from '../shared';\nimport type { TRPCMutationKey, TRPCQueryKey } from './getQueryKey';\n\ninterface TRPCUseUtilsOptions {\n  /**\n   * tRPC-related options\n   */\n  trpc?: TRPCRequestOptions;\n}\nexport interface TRPCFetchQueryOptions<TOutput, TError>\n  extends DistributiveOmit<FetchQueryOptions<TOutput, TError>, 'queryKey'>,\n    TRPCUseUtilsOptions {\n  //\n}\n\nexport type TRPCFetchInfiniteQueryOptions<TInput, TOutput, TError> =\n  DistributiveOmit<\n    FetchInfiniteQueryOptions<\n      TOutput,\n      TError,\n      TOutput,\n      TRPCQueryKey,\n      ExtractCursorType<TInput>\n    >,\n    'queryKey' | 'initialPageParam'\n  > &\n    TRPCUseUtilsOptions & {\n      initialCursor?: ExtractCursorType<TInput>;\n    };\n\n/** @internal */\nexport type SSRState = 'mounted' | 'mounting' | 'prepass' | false;\n\nexport interface TRPCContextPropsBase<TRouter extends AnyRouter, TSSRContext> {\n  /**\n   * The `TRPCClient`\n   */\n  client: TRPCUntypedClient<TRouter>;\n  /**\n   * The SSR context when server-side rendering\n   * @default null\n   */\n  ssrContext?: TSSRContext | null;\n  /**\n   * State of SSR hydration.\n   * - `false` if not using SSR.\n   * - `prepass` when doing a prepass to fetch queries' data\n   * - `mounting` before TRPCProvider has been rendered on the client\n   * - `mounted` when the TRPCProvider has been rendered on the client\n   * @default false\n   */\n  ssrState?: SSRState;\n  /**\n   * @deprecated pass abortOnUnmount to `createTRPCReact` instead\n   * Abort loading query calls when unmounting a component - usually when navigating to a new page\n   * @default false\n   */\n  abortOnUnmount?: boolean;\n}\n\n/**\n * @internal\n */\nexport type DecoratedTRPCContextProps<\n  TRouter extends AnyRouter,\n  TSSRContext,\n> = TRPCContextPropsBase<TRouter, TSSRContext> & {\n  client: TRPCClient<TRouter>;\n};\n\nexport interface TRPCContextProps<TRouter extends AnyRouter, TSSRContext>\n  extends TRPCContextPropsBase<TRouter, TSSRContext> {\n  /**\n   * The react-query `QueryClient`\n   */\n  queryClient: QueryClient;\n}\n\nexport const contextProps: (keyof TRPCContextPropsBase<any, any>)[] = [\n  'client',\n  'ssrContext',\n  'ssrState',\n  'abortOnUnmount',\n];\n\n/**\n * @internal\n */\nexport interface TRPCContextState<\n  TRouter extends AnyRouter,\n  TSSRContext = undefined,\n> extends Required<TRPCContextProps<TRouter, TSSRContext>>,\n    TRPCQueryUtils<TRouter> {}\n\n/**\n * @internal\n */\nexport interface TRPCQueryUtils<TRouter extends AnyRouter> {\n  /**\n   * @see https://tanstack.com/query/latest/docs/framework/react/reference/queryOptions#queryoptions\n   */\n  queryOptions(\n    path: readonly string[], // <-- look into if needed\n    queryKey: TRPCQueryKey,\n    opts?: UndefinedTRPCQueryOptionsIn<\n      unknown,\n      unknown,\n      TRPCClientError<AnyClientTypes>\n    >,\n  ): UndefinedTRPCQueryOptionsOut<\n    unknown,\n    unknown,\n    TRPCClientError<AnyClientTypes>\n  >;\n  queryOptions(\n    path: readonly string[], // <-- look into if needed\n    queryKey: TRPCQueryKey,\n    opts: DefinedTRPCQueryOptionsIn<\n      unknown,\n      unknown,\n      TRPCClientError<AnyClientTypes>\n    >,\n  ): DefinedTRPCQueryOptionsOut<\n    unknown,\n    unknown,\n    TRPCClientError<AnyClientTypes>\n  >;\n\n  /**\n   * @see https://tanstack.com/query/latest/docs/framework/react/reference/infiniteQueryOptions#infinitequeryoptions\n   */\n  infiniteQueryOptions(\n    path: readonly string[], // <-- look into if needed\n    queryKey: TRPCQueryKey,\n    opts: UndefinedTRPCInfiniteQueryOptionsIn<\n      unknown,\n      unknown,\n      unknown,\n      TRPCClientError<AnyClientTypes>\n    >,\n  ): UndefinedTRPCInfiniteQueryOptionsOut<\n    unknown,\n    unknown,\n    unknown,\n    TRPCClientError<AnyClientTypes>\n  >;\n  infiniteQueryOptions(\n    path: readonly string[], // <-- look into if needed\n    queryKey: TRPCQueryKey,\n    opts: DefinedTRPCInfiniteQueryOptionsIn<\n      unknown,\n      unknown,\n      unknown,\n      TRPCClientError<AnyClientTypes>\n    >,\n  ): DefinedTRPCInfiniteQueryOptionsOut<\n    unknown,\n    unknown,\n    unknown,\n    TRPCClientError<AnyClientTypes>\n  >;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientfetchquery\n   */\n  fetchQuery: (\n    queryKey: TRPCQueryKey,\n    opts?: TRPCFetchQueryOptions<unknown, TRPCClientError<TRouter>>,\n  ) => Promise<unknown>;\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientfetchinfinitequery\n   */\n  fetchInfiniteQuery: (\n    queryKey: TRPCQueryKey,\n    opts?: TRPCFetchInfiniteQueryOptions<\n      unknown,\n      unknown,\n      TRPCClientError<TRouter>\n    >,\n  ) => Promise<InfiniteData<unknown, unknown>>;\n  /**\n   * @see https://tanstack.com/query/v5/docs/framework/react/guides/prefetching\n   */\n  prefetchQuery: (\n    queryKey: TRPCQueryKey,\n    opts?: TRPCFetchQueryOptions<unknown, TRPCClientError<TRouter>>,\n  ) => Promise<void>;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientprefetchinfinitequery\n   */\n  prefetchInfiniteQuery: (\n    queryKey: TRPCQueryKey,\n    opts?: TRPCFetchInfiniteQueryOptions<\n      unknown,\n      unknown,\n      TRPCClientError<TRouter>\n    >,\n  ) => Promise<void>;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientensurequerydata\n   */\n  ensureQueryData: (\n    queryKey: TRPCQueryKey,\n    opts?: TRPCFetchQueryOptions<unknown, TRPCClientError<TRouter>>,\n  ) => Promise<unknown>;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/framework/react/guides/query-invalidation\n   */\n  invalidateQueries: (\n    queryKey: TRPCQueryKey,\n    filters?: InvalidateQueryFilters<TRPCQueryKey>,\n    options?: InvalidateOptions,\n  ) => Promise<void>;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientresetqueries\n   */\n  resetQueries: (\n    queryKey: TRPCQueryKey,\n    filters?: QueryFilters<TRPCQueryKey>,\n    options?: ResetOptions,\n  ) => Promise<void>;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientrefetchqueries\n   */\n  refetchQueries: (\n    queryKey: TRPCQueryKey,\n    filters?: RefetchQueryFilters<TRPCQueryKey>,\n    options?: RefetchOptions,\n  ) => Promise<void>;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/framework/react/guides/query-cancellation\n   */\n  cancelQuery: (\n    queryKey: TRPCQueryKey,\n    options?: CancelOptions,\n  ) => Promise<void>;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientsetquerydata\n   */\n  setQueryData: (\n    queryKey: TRPCQueryKey,\n    updater: Updater<unknown, unknown>,\n    options?: SetDataOptions,\n  ) => void;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientsetqueriesdata\n   */\n  setQueriesData: (\n    queryKey: TRPCQueryKey,\n    filters: QueryFilters,\n    updater: Updater<unknown, unknown>,\n    options?: SetDataOptions,\n  ) => [QueryKey, unknown][];\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientgetquerydata\n   */\n  getQueryData: (queryKey: TRPCQueryKey) => unknown;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientsetquerydata\n   */\n  setInfiniteQueryData: (\n    queryKey: TRPCQueryKey,\n    updater: Updater<\n      InfiniteData<unknown> | undefined,\n      InfiniteData<unknown> | undefined\n    >,\n    options?: SetDataOptions,\n  ) => void;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientgetquerydata\n   */\n  getInfiniteQueryData: (\n    queryKey: TRPCQueryKey,\n  ) => InfiniteData<unknown> | undefined;\n\n  /**\n   * @see https://tanstack.com/query/latest/docs/reference/QueryClient/#queryclientsetmutationdefaults\n   */\n  setMutationDefaults: (\n    mutationKey: TRPCMutationKey,\n    options:\n      | MutationOptions\n      | ((args: {\n          canonicalMutationFn: (input: unknown) => Promise<unknown>;\n        }) => MutationOptions),\n  ) => void;\n\n  /**\n   * @see https://tanstack.com/query/latest/docs/reference/QueryClient#queryclientgetmutationdefaults\n   */\n  getMutationDefaults: (\n    mutationKey: TRPCMutationKey,\n  ) => MutationOptions | undefined;\n\n  /**\n   * @see https://tanstack.com/query/latest/docs/reference/QueryClient#queryclientismutating\n   */\n  isMutating: (filters: { mutationKey: TRPCMutationKey }) => number;\n}\nexport const TRPCContext = React.createContext?.(null as any);\n","import type {\n  CancelOptions,\n  InfiniteData,\n  InvalidateOptions,\n  InvalidateQueryFilters,\n  Query,\n  QueryFilters,\n  QueryKey,\n  RefetchOptions,\n  RefetchQueryFilters,\n  ResetOptions,\n  SetDataOptions,\n  SkipToken,\n  Updater,\n} from '@tanstack/react-query';\nimport type { TRPCClientError } from '@trpc/client';\nimport { createTRPCClientProxy } from '@trpc/client';\nimport type {\n  AnyMutationProcedure,\n  AnyQueryProcedure,\n  AnyRootTypes,\n  AnyRouter,\n  DeepPartial,\n  inferProcedureInput,\n  inferProcedureOutput,\n  inferTransformedProcedureOutput,\n  ProtectedIntersection,\n  RouterRecord,\n} from '@trpc/server/unstable-core-do-not-import';\nimport {\n  createFlatProxy,\n  createRecursiveProxy,\n} from '@trpc/server/unstable-core-do-not-import';\nimport type {\n  DecoratedTRPCContextProps,\n  TRPCContextState,\n  TRPCFetchInfiniteQueryOptions,\n  TRPCFetchQueryOptions,\n  TRPCQueryUtils,\n} from '../../internals/context';\nimport { contextProps } from '../../internals/context';\nimport type { QueryKeyKnown, QueryType } from '../../internals/getQueryKey';\nimport {\n  getMutationKeyInternal,\n  getQueryKeyInternal,\n} from '../../internals/getQueryKey';\nimport type { InferMutationOptions } from '../../utils/inferReactQueryProcedure';\nimport type { ExtractCursorType } from '../hooks/types';\nimport type {\n  DefinedTRPCInfiniteQueryOptionsIn,\n  DefinedTRPCInfiniteQueryOptionsOut,\n  DefinedTRPCQueryOptionsIn,\n  DefinedTRPCQueryOptionsOut,\n  UndefinedTRPCInfiniteQueryOptionsIn,\n  UndefinedTRPCInfiniteQueryOptionsOut,\n  UndefinedTRPCQueryOptionsIn,\n  UndefinedTRPCQueryOptionsOut,\n  UnusedSkipTokenTRPCInfiniteQueryOptionsIn,\n  UnusedSkipTokenTRPCInfiniteQueryOptionsOut,\n  UnusedSkipTokenTRPCQueryOptionsIn,\n  UnusedSkipTokenTRPCQueryOptionsOut,\n} from '../types';\n\nexport type DecorateQueryProcedure<\n  TRoot extends AnyRootTypes,\n  TProcedure extends AnyQueryProcedure,\n> = {\n  /**\n   * @see https://tanstack.com/query/latest/docs/framework/react/reference/queryOptions#queryoptions\n   */\n  queryOptions<\n    TQueryFnData extends inferTransformedProcedureOutput<TRoot, TProcedure>,\n    TData = TQueryFnData,\n  >(\n    input: inferProcedureInput<TProcedure> | SkipToken,\n    opts: DefinedTRPCQueryOptionsIn<\n      TQueryFnData,\n      TData,\n      TRPCClientError<TRoot>\n    >,\n  ): DefinedTRPCQueryOptionsOut<TQueryFnData, TData, TRPCClientError<TRoot>>;\n  /**\n   * @see https://tanstack.com/query/latest/docs/framework/react/reference/queryOptions#queryoptions\n   */\n  queryOptions<\n    TQueryFnData extends inferTransformedProcedureOutput<TRoot, TProcedure>,\n    TData = TQueryFnData,\n  >(\n    input: inferProcedureInput<TProcedure> | SkipToken,\n    opts?: UnusedSkipTokenTRPCQueryOptionsIn<\n      TQueryFnData,\n      TData,\n      TRPCClientError<TRoot>\n    >,\n  ): UnusedSkipTokenTRPCQueryOptionsOut<\n    TQueryFnData,\n    TData,\n    TRPCClientError<TRoot>\n  >;\n  /**\n   * @see https://tanstack.com/query/latest/docs/framework/react/reference/queryOptions#queryoptions\n   */\n  queryOptions<\n    TQueryFnData extends inferTransformedProcedureOutput<TRoot, TProcedure>,\n    TData = TQueryFnData,\n  >(\n    input: inferProcedureInput<TProcedure> | SkipToken,\n    opts?: UndefinedTRPCQueryOptionsIn<\n      TQueryFnData,\n      TData,\n      TRPCClientError<TRoot>\n    >,\n  ): UndefinedTRPCQueryOptionsOut<TQueryFnData, TData, TRPCClientError<TRoot>>;\n\n  /**\n   * @see https://tanstack.com/query/latest/docs/framework/react/reference/infiniteQueryOptions#infinitequeryoptions\n   */\n  infiniteQueryOptions<\n    TQueryFnData extends inferTransformedProcedureOutput<TRoot, TProcedure>,\n    TData = TQueryFnData,\n  >(\n    input: inferProcedureInput<TProcedure> | SkipToken,\n    opts: DefinedTRPCInfiniteQueryOptionsIn<\n      inferProcedureInput<TProcedure>,\n      TQueryFnData,\n      TData,\n      TRPCClientError<TRoot>\n    >,\n  ): DefinedTRPCInfiniteQueryOptionsOut<\n    inferProcedureInput<TProcedure>,\n    TQueryFnData,\n    TData,\n    TRPCClientError<TRoot>\n  >;\n  /**\n   * @see https://tanstack.com/query/latest/docs/framework/react/reference/infiniteQueryOptions#infinitequeryoptions\n   */\n  infiniteQueryOptions<\n    TQueryFnData extends inferTransformedProcedureOutput<TRoot, TProcedure>,\n    TData = TQueryFnData,\n  >(\n    input: inferProcedureInput<TProcedure>,\n    opts: UnusedSkipTokenTRPCInfiniteQueryOptionsIn<\n      inferProcedureInput<TProcedure>,\n      TQueryFnData,\n      TData,\n      TRPCClientError<TRoot>\n    >,\n  ): UnusedSkipTokenTRPCInfiniteQueryOptionsOut<\n    inferProcedureInput<TProcedure>,\n    TQueryFnData,\n    TData,\n    TRPCClientError<TRoot>\n  >;\n  /**\n   * @see https://tanstack.com/query/latest/docs/framework/react/reference/infiniteQueryOptions#infinitequeryoptions\n   */\n  infiniteQueryOptions<\n    TQueryFnData extends inferTransformedProcedureOutput<TRoot, TProcedure>,\n    TData = TQueryFnData,\n  >(\n    input: inferProcedureInput<TProcedure> | SkipToken,\n    opts?: UndefinedTRPCInfiniteQueryOptionsIn<\n      inferProcedureInput<TProcedure>,\n      TQueryFnData,\n      TData,\n      TRPCClientError<TRoot>\n    >,\n  ): UndefinedTRPCInfiniteQueryOptionsOut<\n    inferProcedureInput<TProcedure>,\n    TQueryFnData,\n    TData,\n    TRPCClientError<TRoot>\n  >;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientfetchquery\n   */\n  fetch(\n    input: inferProcedureInput<TProcedure>,\n    opts?: TRPCFetchQueryOptions<\n      inferTransformedProcedureOutput<TRoot, TProcedure>,\n      TRPCClientError<TRoot>\n    >,\n  ): Promise<inferTransformedProcedureOutput<TRoot, TProcedure>>;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientfetchinfinitequery\n   */\n  fetchInfinite(\n    input: inferProcedureInput<TProcedure>,\n    opts?: TRPCFetchInfiniteQueryOptions<\n      inferProcedureInput<TProcedure>,\n      inferTransformedProcedureOutput<TRoot, TProcedure>,\n      TRPCClientError<TRoot>\n    >,\n  ): Promise<\n    InfiniteData<\n      inferTransformedProcedureOutput<TRoot, TProcedure>,\n      NonNullable<ExtractCursorType<inferProcedureInput<TProcedure>>> | null\n    >\n  >;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientprefetchquery\n   */\n  prefetch(\n    input: inferProcedureInput<TProcedure>,\n    opts?: TRPCFetchQueryOptions<\n      inferTransformedProcedureOutput<TRoot, TProcedure>,\n      TRPCClientError<TRoot>\n    >,\n  ): Promise<void>;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientprefetchinfinitequery\n   */\n  prefetchInfinite(\n    input: inferProcedureInput<TProcedure>,\n    opts?: TRPCFetchInfiniteQueryOptions<\n      inferProcedureInput<TProcedure>,\n      inferTransformedProcedureOutput<TRoot, TProcedure>,\n      TRPCClientError<TRoot>\n    >,\n  ): Promise<void>;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientensurequerydata\n   */\n  ensureData(\n    input: inferProcedureInput<TProcedure>,\n    opts?: TRPCFetchQueryOptions<\n      inferTransformedProcedureOutput<TRoot, TProcedure>,\n      TRPCClientError<TRoot>\n    >,\n  ): Promise<inferTransformedProcedureOutput<TRoot, TProcedure>>;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientinvalidatequeries\n   */\n  invalidate(\n    input?: DeepPartial<inferProcedureInput<TProcedure>>,\n    filters?: Omit<InvalidateQueryFilters, 'predicate'> & {\n      predicate?: (\n        query: Query<\n          inferProcedureOutput<TProcedure>,\n          TRPCClientError<TRoot>,\n          inferTransformedProcedureOutput<TRoot, TProcedure>,\n          QueryKeyKnown<\n            inferProcedureInput<TProcedure>,\n            inferProcedureInput<TProcedure> extends { cursor?: any } | void\n              ? 'infinite'\n              : 'query'\n          >\n        >,\n      ) => boolean;\n    },\n    options?: InvalidateOptions,\n  ): Promise<void>;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientrefetchqueries\n   */\n  refetch(\n    input?: inferProcedureInput<TProcedure>,\n    filters?: RefetchQueryFilters,\n    options?: RefetchOptions,\n  ): Promise<void>;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientcancelqueries\n   */\n  cancel(\n    input?: inferProcedureInput<TProcedure>,\n    options?: CancelOptions,\n  ): Promise<void>;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientresetqueries\n   */\n  reset(\n    input?: inferProcedureInput<TProcedure>,\n    options?: ResetOptions,\n  ): Promise<void>;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientsetquerydata\n   */\n  setData(\n    /**\n     * The input of the procedure\n     */\n    input: inferProcedureInput<TProcedure>,\n    updater: Updater<\n      inferTransformedProcedureOutput<TRoot, TProcedure> | undefined,\n      inferTransformedProcedureOutput<TRoot, TProcedure> | undefined\n    >,\n    options?: SetDataOptions,\n  ): void;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientsetquerydata\n   */\n  setQueriesData(\n    /**\n     * The input of the procedure\n     */\n    input: inferProcedureInput<TProcedure>,\n    filters: QueryFilters,\n    updater: Updater<\n      inferTransformedProcedureOutput<TRoot, TProcedure> | undefined,\n      inferTransformedProcedureOutput<TRoot, TProcedure> | undefined\n    >,\n    options?: SetDataOptions,\n  ): [QueryKey, inferTransformedProcedureOutput<TRoot, TProcedure>];\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientsetquerydata\n   */\n  setInfiniteData(\n    input: inferProcedureInput<TProcedure>,\n    updater: Updater<\n      | InfiniteData<\n          inferTransformedProcedureOutput<TRoot, TProcedure>,\n          NonNullable<ExtractCursorType<inferProcedureInput<TProcedure>>> | null\n        >\n      | undefined,\n      | InfiniteData<\n          inferTransformedProcedureOutput<TRoot, TProcedure>,\n          NonNullable<ExtractCursorType<inferProcedureInput<TProcedure>>> | null\n        >\n      | undefined\n    >,\n    options?: SetDataOptions,\n  ): void;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientgetquerydata\n   */\n  getData(\n    input?: inferProcedureInput<TProcedure>,\n  ): inferTransformedProcedureOutput<TRoot, TProcedure> | undefined;\n\n  /**\n   * @see https://tanstack.com/query/v5/docs/reference/QueryClient#queryclientgetquerydata\n   */\n  getInfiniteData(\n    input?: inferProcedureInput<TProcedure>,\n  ):\n    | InfiniteData<\n        inferTransformedProcedureOutput<TRoot, TProcedure>,\n        NonNullable<ExtractCursorType<inferProcedureInput<TProcedure>>> | null\n      >\n    | undefined;\n};\n\ntype DecorateMutationProcedure<\n  TRoot extends AnyRootTypes,\n  TProcedure extends AnyMutationProcedure,\n> = {\n  setMutationDefaults<TMeta = unknown>(\n    options:\n      | InferMutationOptions<TRoot, TProcedure, TMeta>\n      | ((args: {\n          canonicalMutationFn: NonNullable<\n            InferMutationOptions<TRoot, TProcedure>['mutationFn']\n          >;\n        }) => InferMutationOptions<TRoot, TProcedure, TMeta>),\n  ): void;\n\n  getMutationDefaults(): InferMutationOptions<TRoot, TProcedure> | undefined;\n\n  isMutating(): number;\n};\n\n/**\n * this is the type that is used to add in procedures that can be used on\n * an entire router\n */\ntype DecorateRouter = {\n  /**\n   * Invalidate the full router\n   * @see https://trpc.io/docs/v10/useContext#query-invalidation\n   * @see https://tanstack.com/query/v5/docs/framework/react/guides/query-invalidation\n   */\n  invalidate(\n    input?: undefined,\n    filters?: InvalidateQueryFilters,\n    options?: InvalidateOptions,\n  ): Promise<void>;\n};\n\n/**\n * @internal\n */\nexport type DecoratedProcedureUtilsRecord<\n  TRoot extends AnyRootTypes,\n  TRecord extends RouterRecord,\n> = DecorateRouter & {\n  [TKey in keyof TRecord]: TRecord[TKey] extends infer $Value\n    ? $Value extends AnyQueryProcedure\n      ? DecorateQueryProcedure<TRoot, $Value>\n      : $Value extends AnyMutationProcedure\n        ? DecorateMutationProcedure<TRoot, $Value>\n        : $Value extends RouterRecord\n          ? DecoratedProcedureUtilsRecord<TRoot, $Value> & DecorateRouter\n          : never\n    : never;\n}; // Add functions that should be available at utils root\n\ntype AnyDecoratedProcedure = DecorateQueryProcedure<any, any> &\n  DecorateMutationProcedure<any, any>;\n\nexport type CreateReactUtils<\n  TRouter extends AnyRouter,\n  TSSRContext,\n> = ProtectedIntersection<\n  DecoratedTRPCContextProps<TRouter, TSSRContext>,\n  DecoratedProcedureUtilsRecord<\n    TRouter['_def']['_config']['$types'],\n    TRouter['_def']['record']\n  >\n>;\n\nexport type CreateQueryUtils<TRouter extends AnyRouter> =\n  DecoratedProcedureUtilsRecord<\n    TRouter['_def']['_config']['$types'],\n    TRouter['_def']['record']\n  >;\n\nexport const getQueryType = (\n  utilName: keyof AnyDecoratedProcedure,\n): QueryType => {\n  switch (utilName) {\n    case 'queryOptions':\n    case 'fetch':\n    case 'ensureData':\n    case 'prefetch':\n    case 'getData':\n    case 'setData':\n    case 'setQueriesData':\n      return 'query';\n\n    case 'infiniteQueryOptions':\n    case 'fetchInfinite':\n    case 'prefetchInfinite':\n    case 'getInfiniteData':\n    case 'setInfiniteData':\n      return 'infinite';\n\n    case 'setMutationDefaults':\n    case 'getMutationDefaults':\n    case 'isMutating':\n    case 'cancel':\n    case 'invalidate':\n    case 'refetch':\n    case 'reset':\n      return 'any';\n  }\n};\n\n/**\n * @internal\n */\nfunction createRecursiveUtilsProxy<TRouter extends AnyRouter>(\n  context: TRPCQueryUtils<TRouter>,\n) {\n  return createRecursiveProxy<CreateQueryUtils<TRouter>>((opts) => {\n    const path = [...opts.path];\n    const utilName = path.pop() as keyof AnyDecoratedProcedure;\n    const args = [...opts.args] as Parameters<\n      AnyDecoratedProcedure[typeof utilName]\n    >;\n    const input = args.shift(); // args can now be spread when input removed\n    const queryType = getQueryType(utilName);\n    const queryKey = getQueryKeyInternal(path, input, queryType);\n\n    const contextMap: Record<keyof AnyDecoratedProcedure, () => unknown> = {\n      infiniteQueryOptions: () =>\n        context.infiniteQueryOptions(path, queryKey, args[0]),\n      queryOptions: () => context.queryOptions(path, queryKey, ...args),\n      /**\n       * DecorateQueryProcedure\n       */\n      fetch: () => context.fetchQuery(queryKey, ...args),\n      fetchInfinite: () => context.fetchInfiniteQuery(queryKey, args[0]),\n      prefetch: () => context.prefetchQuery(queryKey, ...args),\n      prefetchInfinite: () => context.prefetchInfiniteQuery(queryKey, args[0]),\n      ensureData: () => context.ensureQueryData(queryKey, ...args),\n      invalidate: () => context.invalidateQueries(queryKey, ...args),\n      reset: () => context.resetQueries(queryKey, ...args),\n      refetch: () => context.refetchQueries(queryKey, ...args),\n      cancel: () => context.cancelQuery(queryKey, ...args),\n      setData: () => {\n        context.setQueryData(queryKey, args[0], args[1]);\n      },\n      setQueriesData: () =>\n        context.setQueriesData(queryKey, args[0], args[1], args[2]),\n      setInfiniteData: () => {\n        context.setInfiniteQueryData(queryKey, args[0], args[1]);\n      },\n      getData: () => context.getQueryData(queryKey),\n      getInfiniteData: () => context.getInfiniteQueryData(queryKey),\n      /**\n       * DecorateMutationProcedure\n       */\n      setMutationDefaults: () =>\n        context.setMutationDefaults(getMutationKeyInternal(path), input),\n      getMutationDefaults: () =>\n        context.getMutationDefaults(getMutationKeyInternal(path)),\n      isMutating: () =>\n        context.isMutating({ mutationKey: getMutationKeyInternal(path) }),\n    };\n\n    return contextMap[utilName]();\n  });\n}\n\n/**\n * @internal\n */\nexport function createReactQueryUtils<TRouter extends AnyRouter, TSSRContext>(\n  context: TRPCContextState<AnyRouter, TSSRContext>,\n) {\n  type CreateReactUtilsReturnType = CreateReactUtils<TRouter, TSSRContext>;\n\n  const clientProxy = createTRPCClientProxy(context.client);\n\n  const proxy = createRecursiveUtilsProxy(\n    context,\n  ) as CreateReactUtilsReturnType;\n\n  return createFlatProxy<CreateReactUtilsReturnType>((key) => {\n    const contextName = key as (typeof contextProps)[number];\n    if (contextName === 'client') {\n      return clientProxy;\n    }\n    if (contextProps.includes(contextName)) {\n      return context[contextName];\n    }\n\n    return proxy[key];\n  });\n}\n\n/**\n * @internal\n */\nexport function createQueryUtilsProxy<TRouter extends AnyRouter>(\n  context: TRPCQueryUtils<TRouter>,\n): CreateQueryUtils<TRouter> {\n  return createRecursiveUtilsProxy(context);\n}\n","import type { QueryOptions } from '@tanstack/react-query';\nimport type { TRPCClient } from '@trpc/client';\nimport {\n  getUntypedClient,\n  TRPCUntypedClient,\n  type TRPCClientError,\n} from '@trpc/client';\nimport type {\n  AnyProcedure,\n  AnyQueryProcedure,\n  AnyRootTypes,\n  AnyRouter,\n  inferProcedureInput,\n  inferTransformedProcedureOutput,\n  RouterRecord,\n} from '@trpc/server/unstable-core-do-not-import';\nimport { createRecursiveProxy } from '@trpc/server/unstable-core-do-not-import';\nimport { getQueryKeyInternal } from '../../internals/getQueryKey';\nimport type {\n  TrpcQueryOptionsForUseQueries,\n  TrpcQueryOptionsForUseSuspenseQueries,\n} from '../../internals/useQueries';\nimport type { TRPCUseQueryBaseOptions } from '../hooks/types';\n\ntype GetQueryOptions<\n  TRoot extends AnyRootTypes,\n  TProcedure extends AnyProcedure,\n> = <TData = inferTransformedProcedureOutput<TRoot, TProcedure>>(\n  input: inferProcedureInput<TProcedure>,\n  opts?: TrpcQueryOptionsForUseQueries<\n    inferTransformedProcedureOutput<TRoot, TProcedure>,\n    TData,\n    TRPCClientError<TRoot>\n  >,\n) => TrpcQueryOptionsForUseQueries<\n  inferTransformedProcedureOutput<TRoot, TProcedure>,\n  TData,\n  TRPCClientError<TRoot>\n>;\n\n/**\n * @internal\n */\nexport type UseQueriesProcedureRecord<\n  TRoot extends AnyRootTypes,\n  TRecord extends RouterRecord,\n> = {\n  [TKey in keyof TRecord]: TRecord[TKey] extends infer $Value\n    ? $Value extends AnyQueryProcedure\n      ? GetQueryOptions<TRoot, $Value>\n      : $Value extends RouterRecord\n        ? UseQueriesProcedureRecord<TRoot, $Value>\n        : never\n    : never;\n};\n\ntype GetSuspenseQueryOptions<\n  TRoot extends AnyRootTypes,\n  TProcedure extends AnyQueryProcedure,\n> = <TData = inferTransformedProcedureOutput<TRoot, TProcedure>>(\n  input: inferProcedureInput<TProcedure>,\n  opts?: TrpcQueryOptionsForUseSuspenseQueries<\n    inferTransformedProcedureOutput<TRoot, TProcedure>,\n    TData,\n    TRPCClientError<TRoot>\n  >,\n) => TrpcQueryOptionsForUseSuspenseQueries<\n  inferTransformedProcedureOutput<TRoot, TProcedure>,\n  TData,\n  TRPCClientError<TRoot>\n>;\n\n/**\n * @internal\n */\nexport type UseSuspenseQueriesProcedureRecord<\n  TRoot extends AnyRootTypes,\n  TRecord extends RouterRecord,\n> = {\n  [TKey in keyof TRecord]: TRecord[TKey] extends infer $Value\n    ? $Value extends AnyQueryProcedure\n      ? GetSuspenseQueryOptions<TRoot, $Value>\n      : $Value extends RouterRecord\n        ? UseSuspenseQueriesProcedureRecord<TRoot, $Value>\n        : never\n    : never;\n};\n\n/**\n * Create proxy for `useQueries` options\n * @internal\n */\nexport function createUseQueries<TRouter extends AnyRouter>(\n  client: TRPCUntypedClient<TRouter> | TRPCClient<TRouter>,\n) {\n  const untypedClient: TRPCUntypedClient<TRouter> =\n    client instanceof TRPCUntypedClient ? client : getUntypedClient(client);\n\n  return createRecursiveProxy<\n    UseQueriesProcedureRecord<\n      TRouter['_def']['_config']['$types'],\n      TRouter['_def']['record']\n    >\n  >((opts) => {\n    const arrayPath = opts.path;\n    const dotPath = arrayPath.join('.');\n    const [input, _opts] = opts.args as [\n      unknown,\n      Partial<QueryOptions> & TRPCUseQueryBaseOptions,\n    ];\n\n    const options: QueryOptions = {\n      queryKey: getQueryKeyInternal(arrayPath, input, 'query'),\n      queryFn: () => {\n        return untypedClient.query(dotPath, input, _opts?.trpc);\n      },\n      ..._opts,\n    };\n\n    return options;\n  });\n}\n","import type { TRPCQueryKey } from './getQueryKey';\n\n/**\n * @internal\n */\nexport function getClientArgs<TOptions>(\n  queryKey: TRPCQueryKey,\n  opts: TOptions,\n  infiniteParams?: {\n    pageParam: any;\n    direction: 'forward' | 'backward';\n  },\n) {\n  const path = queryKey[0];\n  let input = queryKey[1]?.input;\n  if (infiniteParams) {\n    input = {\n      ...(input ?? {}),\n      ...(infiniteParams.pageParam ? { cursor: infiniteParams.pageParam } : {}),\n      direction: infiniteParams.direction,\n    };\n  }\n  return [path.join('.'), input, (opts as any)?.trpc] as const;\n}\n","function _asyncIterator(r) {\n  var n,\n    t,\n    o,\n    e = 2;\n  for (\"undefined\" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) {\n    if (t && null != (n = r[t])) return n.call(r);\n    if (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r));\n    t = \"@@asyncIterator\", o = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(r) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var n = r.done;\n    return Promise.resolve(r.value).then(function (r) {\n      return {\n        value: r,\n        done: n\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(r) {\n    this.s = r, this.n = r.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(r) {\n      var n = this.s[\"return\"];\n      return void 0 === n ? Promise.resolve({\n        value: r,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(r) {\n      var n = this.s[\"return\"];\n      return void 0 === n ? Promise.reject(r) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(r);\n}\nmodule.exports = _asyncIterator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import type { QueryClient } from '@tanstack/react-query';\nimport * as React from 'react';\nimport type { TRPCQueryOptionsResult } from '../shared';\nimport type { TRPCHookResult } from '../shared/hooks/types';\nimport type { TRPCQueryKey } from './getQueryKey';\n\nexport function createTRPCOptionsResult(value: {\n  path: readonly string[];\n}): TRPCQueryOptionsResult['trpc'] {\n  const path = value.path.join('.');\n\n  return {\n    path,\n  };\n}\n\n/**\n * Makes a stable reference of the `trpc` prop\n */\nexport function useHookResult(value: {\n  path: readonly string[];\n}): TRPCHookResult['trpc'] {\n  const result = createTRPCOptionsResult(value);\n  return React.useMemo(() => result, [result]);\n}\n\n/**\n * @internal\n */\nexport async function buildQueryFromAsyncIterable(\n  asyncIterable: AsyncIterable<unknown>,\n  queryClient: QueryClient,\n  queryKey: TRPCQueryKey,\n) {\n  const queryCache = queryClient.getQueryCache();\n\n  const query = queryCache.build(queryClient, {\n    queryKey,\n  });\n\n  query.setState({\n    data: [],\n    status: 'success',\n  });\n\n  const aggregate: unknown[] = [];\n  for await (const value of asyncIterable) {\n    aggregate.push(value);\n\n    query.setState({\n      data: [...aggregate],\n    });\n  }\n  return aggregate;\n}\n","import type { QueryFunctionContext } from '@tanstack/react-query';\nimport {\n  infiniteQueryOptions,\n  queryOptions,\n  skipToken,\n  type QueryClient,\n} from '@tanstack/react-query';\nimport type { TRPCClient, TRPCClientError } from '@trpc/client';\nimport { getUntypedClient, TRPCUntypedClient } from '@trpc/client';\nimport type { AnyRouter } from '@trpc/server/unstable-core-do-not-import';\nimport { isAsyncIterable } from '@trpc/server/unstable-core-do-not-import';\nimport type { AnyClientTypes } from '@trpc/server/unstable-core-do-not-import/clientish/inferrable';\nimport { getClientArgs } from '../internals/getClientArgs';\nimport type { TRPCQueryKey } from '../internals/getQueryKey';\nimport {\n  buildQueryFromAsyncIterable,\n  createTRPCOptionsResult,\n} from '../internals/trpcResult';\nimport type { DefinedTRPCQueryOptionsOut } from '../shared';\nimport { type TRPCQueryUtils } from '../shared';\n\nexport interface CreateQueryUtilsOptions<TRouter extends AnyRouter> {\n  /**\n   * The `TRPCClient`\n   */\n  client: TRPCClient<TRouter> | TRPCUntypedClient<TRouter>;\n  /**\n   * The `QueryClient` from `react-query`\n   */\n  queryClient: QueryClient;\n}\n\n/**\n * Creates a set of utility functions that can be used to interact with `react-query`\n * @param opts the `TRPCClient` and `QueryClient` to use\n * @returns a set of utility functions that can be used to interact with `react-query`\n * @internal\n */\nexport function createUtilityFunctions<TRouter extends AnyRouter>(\n  opts: CreateQueryUtilsOptions<TRouter>,\n): TRPCQueryUtils<TRouter> {\n  const { client, queryClient } = opts;\n  const untypedClient =\n    client instanceof TRPCUntypedClient ? client : getUntypedClient(client);\n\n  return {\n    infiniteQueryOptions: (path, queryKey, opts) => {\n      const inputIsSkipToken = queryKey[1]?.input === skipToken;\n\n      const queryFn = async (\n        queryFnContext: QueryFunctionContext<TRPCQueryKey, unknown>,\n      ): Promise<unknown> => {\n        const actualOpts = {\n          ...opts,\n          trpc: {\n            ...opts?.trpc,\n            ...(opts?.trpc?.abortOnUnmount\n              ? { signal: queryFnContext.signal }\n              : { signal: null }),\n          },\n        };\n\n        const result = await untypedClient.query(\n          ...getClientArgs(queryKey, actualOpts, {\n            direction: queryFnContext.direction,\n            pageParam: queryFnContext.pageParam,\n          }),\n        );\n\n        return result;\n      };\n\n      return Object.assign(\n        infiniteQueryOptions({\n          ...opts,\n          initialData: opts?.initialData as any,\n          queryKey,\n          queryFn: inputIsSkipToken ? skipToken : queryFn,\n          initialPageParam: (opts?.initialCursor as any) ?? null,\n        }),\n        { trpc: createTRPCOptionsResult({ path }) },\n      );\n    },\n\n    queryOptions: (path, queryKey, opts) => {\n      const inputIsSkipToken = queryKey[1]?.input === skipToken;\n\n      const queryFn = async (\n        queryFnContext: QueryFunctionContext<TRPCQueryKey>,\n      ): Promise<unknown> => {\n        const actualOpts = {\n          ...opts,\n          trpc: {\n            ...opts?.trpc,\n            ...(opts?.trpc?.abortOnUnmount\n              ? { signal: queryFnContext.signal }\n              : { signal: null }),\n          },\n        };\n\n        const result = await untypedClient.query(\n          ...getClientArgs(queryKey, actualOpts),\n        );\n\n        if (isAsyncIterable(result)) {\n          return buildQueryFromAsyncIterable(result, queryClient, queryKey);\n        }\n\n        return result;\n      };\n\n      return Object.assign(\n        queryOptions({\n          ...opts,\n          initialData: opts?.initialData,\n          queryKey,\n          queryFn: inputIsSkipToken ? skipToken : queryFn,\n        }),\n        { trpc: createTRPCOptionsResult({ path }) },\n      ) as DefinedTRPCQueryOptionsOut<\n        unknown,\n        unknown,\n        TRPCClientError<AnyClientTypes>\n      >;\n    },\n\n    fetchQuery: (queryKey, opts) => {\n      return queryClient.fetchQuery({\n        ...opts,\n        queryKey,\n        queryFn: () => untypedClient.query(...getClientArgs(queryKey, opts)),\n      });\n    },\n\n    fetchInfiniteQuery: (queryKey, opts) => {\n      return queryClient.fetchInfiniteQuery({\n        ...opts,\n        queryKey,\n        queryFn: ({ pageParam, direction }) => {\n          return untypedClient.query(\n            ...getClientArgs(queryKey, opts, { pageParam, direction }),\n          );\n        },\n        initialPageParam: opts?.initialCursor ?? null,\n      });\n    },\n\n    prefetchQuery: (queryKey, opts) => {\n      return queryClient.prefetchQuery({\n        ...opts,\n        queryKey,\n        queryFn: () => untypedClient.query(...getClientArgs(queryKey, opts)),\n      });\n    },\n\n    prefetchInfiniteQuery: (queryKey, opts) => {\n      return queryClient.prefetchInfiniteQuery({\n        ...opts,\n        queryKey,\n        queryFn: ({ pageParam, direction }) => {\n          return untypedClient.query(\n            ...getClientArgs(queryKey, opts, { pageParam, direction }),\n          );\n        },\n        initialPageParam: opts?.initialCursor ?? null,\n      });\n    },\n\n    ensureQueryData: (queryKey, opts) => {\n      return queryClient.ensureQueryData({\n        ...opts,\n        queryKey,\n        queryFn: () => untypedClient.query(...getClientArgs(queryKey, opts)),\n      });\n    },\n\n    invalidateQueries: (queryKey, filters, options) => {\n      return queryClient.invalidateQueries(\n        {\n          ...filters,\n          queryKey,\n        },\n        options,\n      );\n    },\n    resetQueries: (queryKey, filters, options) => {\n      return queryClient.resetQueries(\n        {\n          ...filters,\n          queryKey,\n        },\n        options,\n      );\n    },\n\n    refetchQueries: (queryKey, filters, options) => {\n      return queryClient.refetchQueries(\n        {\n          ...filters,\n          queryKey,\n        },\n        options,\n      );\n    },\n\n    cancelQuery: (queryKey, options) => {\n      return queryClient.cancelQueries(\n        {\n          queryKey,\n        },\n        options,\n      );\n    },\n\n    setQueryData: (queryKey, updater, options) => {\n      return queryClient.setQueryData(queryKey, updater as any, options);\n    },\n\n    // eslint-disable-next-line max-params\n    setQueriesData: (queryKey, filters, updater, options) => {\n      return queryClient.setQueriesData(\n        {\n          ...filters,\n          queryKey,\n        },\n        updater,\n        options,\n      );\n    },\n\n    getQueryData: (queryKey) => {\n      return queryClient.getQueryData(queryKey);\n    },\n\n    setInfiniteQueryData: (queryKey, updater, options) => {\n      return queryClient.setQueryData(queryKey, updater as any, options);\n    },\n\n    getInfiniteQueryData: (queryKey) => {\n      return queryClient.getQueryData(queryKey);\n    },\n\n    setMutationDefaults: (mutationKey, options) => {\n      const path = mutationKey[0];\n      const canonicalMutationFn = (input: unknown) => {\n        return untypedClient.mutation(\n          ...getClientArgs([path, { input }], opts),\n        );\n      };\n      return queryClient.setMutationDefaults(\n        mutationKey,\n        typeof options === 'function'\n          ? options({ canonicalMutationFn })\n          : options,\n      );\n    },\n\n    getMutationDefaults: (mutationKey) => {\n      return queryClient.getMutationDefaults(mutationKey);\n    },\n\n    isMutating: (filters) => {\n      return queryClient.isMutating({\n        ...filters,\n        exact: true,\n      });\n    },\n  };\n}\n","// TODO: Look into fixing react-compiler support\n/* eslint-disable react-hooks/react-compiler */\nimport {\n  useInfiniteQuery as __useInfiniteQuery,\n  useMutation as __useMutation,\n  usePrefetchInfiniteQuery as __usePrefetchInfiniteQuery,\n  useQueries as __useQueries,\n  useQuery as __useQuery,\n  useSuspenseInfiniteQuery as __useSuspenseInfiniteQuery,\n  useSuspenseQueries as __useSuspenseQueries,\n  useSuspenseQuery as __useSuspenseQuery,\n  usePrefetchQuery as _usePrefetchQuery,\n  hashKey,\n  skipToken,\n} from '@tanstack/react-query';\nimport type { TRPCClientErrorLike } from '@trpc/client';\nimport {\n  createTRPCClient,\n  getUntypedClient,\n  TRPCUntypedClient,\n} from '@trpc/client';\nimport type { Unsubscribable } from '@trpc/server/observable';\nimport type { AnyRouter } from '@trpc/server/unstable-core-do-not-import';\nimport { isAsyncIterable } from '@trpc/server/unstable-core-do-not-import';\nimport * as React from 'react';\nimport type { SSRState, TRPCContextState } from '../../internals/context';\nimport { TRPCContext } from '../../internals/context';\nimport { getClientArgs } from '../../internals/getClientArgs';\nimport type { TRPCQueryKey } from '../../internals/getQueryKey';\nimport {\n  getMutationKeyInternal,\n  getQueryKeyInternal,\n} from '../../internals/getQueryKey';\nimport {\n  buildQueryFromAsyncIterable,\n  useHookResult,\n} from '../../internals/trpcResult';\nimport type {\n  TRPCUseQueries,\n  TRPCUseSuspenseQueries,\n} from '../../internals/useQueries';\nimport { createUtilityFunctions } from '../../utils/createUtilityFunctions';\nimport { createUseQueries } from '../proxy/useQueriesProxy';\nimport type { CreateTRPCReactOptions, UseMutationOverride } from '../types';\nimport type {\n  TRPCProvider,\n  TRPCQueryOptions,\n  TRPCSubscriptionConnectingResult,\n  TRPCSubscriptionIdleResult,\n  TRPCSubscriptionResult,\n  UseTRPCInfiniteQueryOptions,\n  UseTRPCInfiniteQueryResult,\n  UseTRPCMutationOptions,\n  UseTRPCMutationResult,\n  UseTRPCPrefetchInfiniteQueryOptions,\n  UseTRPCPrefetchQueryOptions,\n  UseTRPCQueryOptions,\n  UseTRPCQueryResult,\n  UseTRPCSubscriptionOptions,\n  UseTRPCSuspenseInfiniteQueryOptions,\n  UseTRPCSuspenseInfiniteQueryResult,\n  UseTRPCSuspenseQueryOptions,\n  UseTRPCSuspenseQueryResult,\n} from './types';\n\nconst trackResult = <T extends object>(\n  result: T,\n  onTrackResult: (key: keyof T) => void,\n): T => {\n  const trackedResult = new Proxy(result, {\n    get(target, prop) {\n      onTrackResult(prop as keyof T);\n      return target[prop as keyof T];\n    },\n  });\n\n  return trackedResult;\n};\n\n/**\n * @internal\n */\nexport function createRootHooks<\n  TRouter extends AnyRouter,\n  TSSRContext = unknown,\n>(config?: CreateTRPCReactOptions<TRouter>) {\n  const mutationSuccessOverride: UseMutationOverride['onSuccess'] =\n    config?.overrides?.useMutation?.onSuccess ??\n    ((options) => options.originalFn());\n\n  type TError = TRPCClientErrorLike<TRouter>;\n\n  type ProviderContext = TRPCContextState<TRouter, TSSRContext>;\n\n  const Context = (config?.context ??\n    TRPCContext) as React.Context<ProviderContext>;\n\n  const createClient = createTRPCClient<TRouter>;\n\n  const TRPCProvider: TRPCProvider<TRouter, TSSRContext> = (props) => {\n    const { abortOnUnmount = false, queryClient, ssrContext } = props;\n    const [ssrState, setSSRState] = React.useState<SSRState>(\n      props.ssrState ?? false,\n    );\n\n    const client: TRPCUntypedClient<TRouter> =\n      props.client instanceof TRPCUntypedClient\n        ? props.client\n        : getUntypedClient(props.client);\n\n    const fns = React.useMemo(\n      () =>\n        createUtilityFunctions({\n          client,\n          queryClient,\n        }),\n      [client, queryClient],\n    );\n\n    const contextValue = React.useMemo<ProviderContext>(\n      () => ({\n        abortOnUnmount,\n        queryClient,\n        client,\n        ssrContext: ssrContext ?? null,\n        ssrState,\n        ...fns,\n      }),\n      [abortOnUnmount, client, fns, queryClient, ssrContext, ssrState],\n    );\n\n    React.useEffect(() => {\n      // Only updating state to `mounted` if we are using SSR.\n      // This makes it so we don't have an unnecessary re-render when opting out of SSR.\n      setSSRState((state) => (state ? 'mounted' : false));\n    }, []);\n    return (\n      <Context.Provider value={contextValue}>{props.children}</Context.Provider>\n    );\n  };\n\n  function useContext() {\n    const context = React.useContext(Context);\n\n    if (!context) {\n      throw new Error(\n        'Unable to find tRPC Context. Did you forget to wrap your App inside `withTRPC` HoC?',\n      );\n    }\n    return context;\n  }\n\n  /**\n   * Hack to make sure errors return `status`='error` when doing SSR\n   * @see https://github.com/trpc/trpc/pull/1645\n   */\n  function useSSRQueryOptionsIfNeeded<\n    TOptions extends { retryOnMount?: boolean } | undefined,\n  >(queryKey: TRPCQueryKey, opts: TOptions): TOptions {\n    const { queryClient, ssrState } = useContext();\n    return ssrState &&\n      ssrState !== 'mounted' &&\n      queryClient.getQueryCache().find({ queryKey })?.state.status === 'error'\n      ? {\n          retryOnMount: false,\n          ...opts,\n        }\n      : opts;\n  }\n\n  function useQuery(\n    path: readonly string[],\n    input: unknown,\n    opts?: UseTRPCQueryOptions<unknown, unknown, TError>,\n  ): UseTRPCQueryResult<unknown, TError> {\n    const context = useContext();\n    const { abortOnUnmount, client, ssrState, queryClient, prefetchQuery } =\n      context;\n    const queryKey = getQueryKeyInternal(path, input, 'query');\n\n    const defaultOpts = queryClient.getQueryDefaults(queryKey);\n\n    const isInputSkipToken = input === skipToken;\n\n    if (\n      typeof window === 'undefined' &&\n      ssrState === 'prepass' &&\n      opts?.trpc?.ssr !== false &&\n      (opts?.enabled ?? defaultOpts?.enabled) !== false &&\n      !isInputSkipToken &&\n      !queryClient.getQueryCache().find({ queryKey })\n    ) {\n      void prefetchQuery(queryKey, opts as any);\n    }\n    const ssrOpts = useSSRQueryOptionsIfNeeded(queryKey, {\n      ...defaultOpts,\n      ...opts,\n    });\n\n    const shouldAbortOnUnmount =\n      opts?.trpc?.abortOnUnmount ?? config?.abortOnUnmount ?? abortOnUnmount;\n\n    const hook = __useQuery(\n      {\n        ...ssrOpts,\n        queryKey: queryKey as any,\n        queryFn: isInputSkipToken\n          ? input\n          : async (queryFunctionContext) => {\n              const actualOpts = {\n                ...ssrOpts,\n                trpc: {\n                  ...ssrOpts?.trpc,\n                  ...(shouldAbortOnUnmount\n                    ? { signal: queryFunctionContext.signal }\n                    : { signal: null }),\n                },\n              };\n\n              const result = await client.query(\n                ...getClientArgs(queryKey, actualOpts),\n              );\n\n              if (isAsyncIterable(result)) {\n                return buildQueryFromAsyncIterable(\n                  result,\n                  queryClient,\n                  queryKey,\n                );\n              }\n              return result;\n            },\n      },\n      queryClient,\n    ) as UseTRPCQueryResult<unknown, TError>;\n\n    hook.trpc = useHookResult({\n      path,\n    });\n\n    return hook;\n  }\n\n  function usePrefetchQuery(\n    path: string[],\n    input: unknown,\n    opts?: UseTRPCPrefetchQueryOptions<unknown, unknown, TError>,\n  ): void {\n    const context = useContext();\n    const queryKey = getQueryKeyInternal(path, input, 'query');\n\n    const isInputSkipToken = input === skipToken;\n\n    const shouldAbortOnUnmount =\n      opts?.trpc?.abortOnUnmount ??\n      config?.abortOnUnmount ??\n      context.abortOnUnmount;\n\n    _usePrefetchQuery({\n      ...opts,\n      queryKey: queryKey as any,\n      queryFn: isInputSkipToken\n        ? input\n        : (queryFunctionContext) => {\n            const actualOpts = {\n              trpc: {\n                ...opts?.trpc,\n                ...(shouldAbortOnUnmount\n                  ? { signal: queryFunctionContext.signal }\n                  : {}),\n              },\n            };\n\n            return context.client.query(...getClientArgs(queryKey, actualOpts));\n          },\n    });\n  }\n\n  function useSuspenseQuery(\n    path: readonly string[],\n    input: unknown,\n    opts?: UseTRPCSuspenseQueryOptions<unknown, unknown, TError>,\n  ): UseTRPCSuspenseQueryResult<unknown, TError> {\n    const context = useContext();\n    const queryKey = getQueryKeyInternal(path, input, 'query');\n\n    const shouldAbortOnUnmount =\n      opts?.trpc?.abortOnUnmount ??\n      config?.abortOnUnmount ??\n      context.abortOnUnmount;\n\n    const hook = __useSuspenseQuery(\n      {\n        ...opts,\n        queryKey: queryKey as any,\n        queryFn: (queryFunctionContext) => {\n          const actualOpts = {\n            ...opts,\n            trpc: {\n              ...opts?.trpc,\n              ...(shouldAbortOnUnmount\n                ? { signal: queryFunctionContext.signal }\n                : { signal: null }),\n            },\n          };\n\n          return context.client.query(...getClientArgs(queryKey, actualOpts));\n        },\n      },\n      context.queryClient,\n    ) as UseTRPCQueryResult<unknown, TError>;\n\n    hook.trpc = useHookResult({\n      path,\n    });\n\n    return [hook.data, hook as any];\n  }\n\n  function useMutation(\n    path: readonly string[],\n    opts?: UseTRPCMutationOptions<unknown, TError, unknown, unknown>,\n  ): UseTRPCMutationResult<unknown, TError, unknown, unknown> {\n    const { client, queryClient } = useContext();\n\n    const mutationKey = getMutationKeyInternal(path);\n\n    const defaultOpts = queryClient.defaultMutationOptions(\n      queryClient.getMutationDefaults(mutationKey),\n    );\n\n    const hook = __useMutation(\n      {\n        ...opts,\n        mutationKey: mutationKey,\n        mutationFn: (input) => {\n          return client.mutation(...getClientArgs([path, { input }], opts));\n        },\n        onSuccess(...args) {\n          const originalFn = () =>\n            opts?.onSuccess?.(...args) ?? defaultOpts?.onSuccess?.(...args);\n\n          return mutationSuccessOverride({\n            originalFn,\n            queryClient,\n            meta: opts?.meta ?? defaultOpts?.meta ?? {},\n          });\n        },\n      },\n      queryClient,\n    ) as UseTRPCMutationResult<unknown, TError, unknown, unknown>;\n\n    hook.trpc = useHookResult({\n      path,\n    });\n\n    return hook;\n  }\n  const initialStateIdle: Omit<TRPCSubscriptionIdleResult<unknown>, 'reset'> = {\n    data: undefined,\n    error: null,\n    status: 'idle',\n  };\n\n  const initialStateConnecting: Omit<\n    TRPCSubscriptionConnectingResult<unknown, TError>,\n    'reset'\n  > = {\n    data: undefined,\n    error: null,\n    status: 'connecting',\n  };\n\n  /* istanbul ignore next -- @preserve */\n  function useSubscription(\n    path: readonly string[],\n    input: unknown,\n    opts: UseTRPCSubscriptionOptions<unknown, TError>,\n  ) {\n    const enabled = opts?.enabled ?? input !== skipToken;\n    const queryKey = hashKey(getQueryKeyInternal(path, input, 'any'));\n    const { client } = useContext();\n\n    const optsRef = React.useRef<typeof opts>(opts);\n    React.useEffect(() => {\n      optsRef.current = opts;\n    });\n\n    type $Result = TRPCSubscriptionResult<unknown, TError>;\n\n    const [trackedProps] = React.useState(new Set<keyof $Result>([]));\n\n    const addTrackedProp = React.useCallback(\n      (key: keyof $Result) => {\n        trackedProps.add(key);\n      },\n      [trackedProps],\n    );\n\n    const currentSubscriptionRef = React.useRef<Unsubscribable>(null);\n\n    const updateState = React.useCallback(\n      (callback: (prevState: $Result) => $Result) => {\n        const prev = resultRef.current;\n        const next = (resultRef.current = callback(prev));\n\n        let shouldUpdate = false;\n        for (const key of trackedProps) {\n          if (prev[key] !== next[key]) {\n            shouldUpdate = true;\n            break;\n          }\n        }\n        if (shouldUpdate) {\n          setState(trackResult(next, addTrackedProp));\n        }\n      },\n      [addTrackedProp, trackedProps],\n    );\n\n    const reset = React.useCallback((): void => {\n      // unsubscribe from the previous subscription\n      currentSubscriptionRef.current?.unsubscribe();\n\n      if (!enabled) {\n        updateState(() => ({ ...initialStateIdle, reset }));\n        return;\n      }\n      updateState(() => ({ ...initialStateConnecting, reset }));\n      const subscription = client.subscription(\n        path.join('.'),\n        input ?? undefined,\n        {\n          onStarted: () => {\n            optsRef.current.onStarted?.();\n            updateState((prev) => ({\n              ...prev,\n              status: 'pending',\n              error: null,\n            }));\n          },\n          onData: (data) => {\n            optsRef.current.onData?.(data);\n            updateState((prev) => ({\n              ...prev,\n              status: 'pending',\n              data,\n              error: null,\n            }));\n          },\n          onError: (error) => {\n            optsRef.current.onError?.(error);\n            updateState((prev) => ({\n              ...prev,\n              status: 'error',\n              error,\n            }));\n          },\n          onConnectionStateChange: (result) => {\n            updateState((prev) => {\n              switch (result.state) {\n                case 'idle':\n                  return {\n                    ...prev,\n                    status: result.state,\n                    error: null,\n                    data: undefined,\n                  };\n                case 'connecting':\n                  return {\n                    ...prev,\n                    error: result.error,\n                    status: result.state,\n                  };\n\n                case 'pending':\n                  // handled when data is / onStarted\n                  return prev;\n              }\n            });\n          },\n          onComplete: () => {\n            optsRef.current.onComplete?.();\n\n            // In the case of WebSockets, the connection might not be idle so `onConnectionStateChange` will not be called until the connection is closed.\n            // In this case, we need to set the state to idle manually.\n            updateState((prev) => ({\n              ...prev,\n              status: 'idle',\n              error: null,\n              data: undefined,\n            }));\n\n            // (We might want to add a `connectionState` to the state to track the connection state separately)\n          },\n        },\n      );\n\n      currentSubscriptionRef.current = subscription;\n\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [client, queryKey, enabled, updateState]);\n    React.useEffect(() => {\n      reset();\n\n      return () => {\n        currentSubscriptionRef.current?.unsubscribe();\n      };\n    }, [reset]);\n\n    const resultRef = React.useRef<$Result>(\n      enabled\n        ? { ...initialStateConnecting, reset }\n        : { ...initialStateIdle, reset },\n    );\n\n    const [state, setState] = React.useState<$Result>(\n      trackResult(resultRef.current, addTrackedProp),\n    );\n\n    return state;\n  }\n\n  function useInfiniteQuery(\n    path: readonly string[],\n    input: unknown,\n    opts: UseTRPCInfiniteQueryOptions<unknown, unknown, TError>,\n  ): UseTRPCInfiniteQueryResult<unknown, TError, unknown> {\n    const {\n      client,\n      ssrState,\n      prefetchInfiniteQuery,\n      queryClient,\n      abortOnUnmount,\n    } = useContext();\n    const queryKey = getQueryKeyInternal(path, input, 'infinite');\n\n    const defaultOpts = queryClient.getQueryDefaults(queryKey);\n\n    const isInputSkipToken = input === skipToken;\n\n    if (\n      typeof window === 'undefined' &&\n      ssrState === 'prepass' &&\n      opts?.trpc?.ssr !== false &&\n      (opts?.enabled ?? defaultOpts?.enabled) !== false &&\n      !isInputSkipToken &&\n      !queryClient.getQueryCache().find({ queryKey })\n    ) {\n      void prefetchInfiniteQuery(queryKey, { ...defaultOpts, ...opts } as any);\n    }\n\n    const ssrOpts = useSSRQueryOptionsIfNeeded(queryKey, {\n      ...defaultOpts,\n      ...opts,\n    });\n\n    // request option should take priority over global\n    const shouldAbortOnUnmount = opts?.trpc?.abortOnUnmount ?? abortOnUnmount;\n\n    const hook = __useInfiniteQuery(\n      {\n        ...ssrOpts,\n        initialPageParam: opts.initialCursor ?? null,\n        persister: opts.persister,\n        queryKey: queryKey as any,\n        queryFn: isInputSkipToken\n          ? input\n          : (queryFunctionContext) => {\n              const actualOpts = {\n                ...ssrOpts,\n                trpc: {\n                  ...ssrOpts?.trpc,\n                  ...(shouldAbortOnUnmount\n                    ? { signal: queryFunctionContext.signal }\n                    : { signal: null }),\n                },\n              };\n\n              return client.query(\n                ...getClientArgs(queryKey, actualOpts, {\n                  pageParam:\n                    queryFunctionContext.pageParam ?? opts.initialCursor,\n                  direction: queryFunctionContext.direction,\n                }),\n              );\n            },\n      },\n      queryClient,\n    ) as UseTRPCInfiniteQueryResult<unknown, TError, unknown>;\n\n    hook.trpc = useHookResult({\n      path,\n    });\n    return hook;\n  }\n\n  function usePrefetchInfiniteQuery(\n    path: string[],\n    input: unknown,\n    opts: UseTRPCPrefetchInfiniteQueryOptions<unknown, unknown, TError>,\n  ): void {\n    const context = useContext();\n    const queryKey = getQueryKeyInternal(path, input, 'infinite');\n\n    const defaultOpts = context.queryClient.getQueryDefaults(queryKey);\n\n    const isInputSkipToken = input === skipToken;\n\n    const ssrOpts = useSSRQueryOptionsIfNeeded(queryKey, {\n      ...defaultOpts,\n      ...opts,\n    });\n\n    // request option should take priority over global\n    const shouldAbortOnUnmount =\n      opts?.trpc?.abortOnUnmount ?? context.abortOnUnmount;\n\n    __usePrefetchInfiniteQuery({\n      ...opts,\n      initialPageParam: opts.initialCursor ?? null,\n      queryKey,\n      queryFn: isInputSkipToken\n        ? input\n        : (queryFunctionContext) => {\n            const actualOpts = {\n              ...ssrOpts,\n              trpc: {\n                ...ssrOpts?.trpc,\n                ...(shouldAbortOnUnmount\n                  ? { signal: queryFunctionContext.signal }\n                  : {}),\n              },\n            };\n\n            return context.client.query(\n              ...getClientArgs(queryKey, actualOpts, {\n                pageParam: queryFunctionContext.pageParam ?? opts.initialCursor,\n                direction: queryFunctionContext.direction,\n              }),\n            );\n          },\n    });\n  }\n\n  function useSuspenseInfiniteQuery(\n    path: readonly string[],\n    input: unknown,\n    opts: UseTRPCSuspenseInfiniteQueryOptions<unknown, unknown, TError>,\n  ): UseTRPCSuspenseInfiniteQueryResult<unknown, TError, unknown> {\n    const context = useContext();\n    const queryKey = getQueryKeyInternal(path, input, 'infinite');\n\n    const defaultOpts = context.queryClient.getQueryDefaults(queryKey);\n\n    const ssrOpts = useSSRQueryOptionsIfNeeded(queryKey, {\n      ...defaultOpts,\n      ...opts,\n    });\n\n    // request option should take priority over global\n    const shouldAbortOnUnmount =\n      opts?.trpc?.abortOnUnmount ?? context.abortOnUnmount;\n\n    const hook = __useSuspenseInfiniteQuery(\n      {\n        ...opts,\n        initialPageParam: opts.initialCursor ?? null,\n        queryKey,\n        queryFn: (queryFunctionContext) => {\n          const actualOpts = {\n            ...ssrOpts,\n            trpc: {\n              ...ssrOpts?.trpc,\n              ...(shouldAbortOnUnmount\n                ? { signal: queryFunctionContext.signal }\n                : {}),\n            },\n          };\n\n          return context.client.query(\n            ...getClientArgs(queryKey, actualOpts, {\n              pageParam: queryFunctionContext.pageParam ?? opts.initialCursor,\n              direction: queryFunctionContext.direction,\n            }),\n          );\n        },\n      },\n      context.queryClient,\n    ) as UseTRPCInfiniteQueryResult<unknown, TError, unknown>;\n\n    hook.trpc = useHookResult({\n      path,\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return [hook.data!, hook as any];\n  }\n\n  const useQueries: TRPCUseQueries<TRouter> = (queriesCallback, options) => {\n    const { ssrState, queryClient, prefetchQuery, client } = useContext();\n\n    const proxy = createUseQueries(client);\n\n    const queries = queriesCallback(proxy);\n\n    if (typeof window === 'undefined' && ssrState === 'prepass') {\n      for (const query of queries) {\n        const queryOption = query as TRPCQueryOptions<any, any>;\n        if (\n          queryOption.trpc?.ssr !== false &&\n          !queryClient.getQueryCache().find({ queryKey: queryOption.queryKey })\n        ) {\n          void prefetchQuery(queryOption.queryKey, queryOption as any);\n        }\n      }\n    }\n\n    return __useQueries(\n      {\n        queries: queries.map((query) => ({\n          ...query,\n          queryKey: (query as TRPCQueryOptions<any, any>).queryKey,\n        })),\n        combine: options?.combine as any,\n      },\n      queryClient,\n    );\n  };\n\n  const useSuspenseQueries: TRPCUseSuspenseQueries<TRouter> = (\n    queriesCallback,\n  ) => {\n    const { queryClient, client } = useContext();\n\n    const proxy = createUseQueries(client);\n\n    const queries = queriesCallback(proxy);\n\n    const hook = __useSuspenseQueries(\n      {\n        queries: queries.map((query) => ({\n          ...query,\n          queryFn: query.queryFn,\n          queryKey: (query as TRPCQueryOptions<any, any>).queryKey,\n        })),\n      },\n      queryClient,\n    );\n\n    return [hook.map((h) => h.data), hook] as any;\n  };\n\n  return {\n    Provider: TRPCProvider,\n    createClient,\n    useContext,\n    useUtils: useContext,\n    useQuery,\n    usePrefetchQuery,\n    useSuspenseQuery,\n    useQueries,\n    useSuspenseQueries,\n    useMutation,\n    useSubscription,\n    useInfiniteQuery,\n    usePrefetchInfiniteQuery,\n    useSuspenseInfiniteQuery,\n  };\n}\n\n/**\n * Infer the type of a `createReactQueryHooks` function\n * @internal\n */\nexport type CreateReactQueryHooks<\n  TRouter extends AnyRouter,\n  TSSRContext = unknown,\n> = ReturnType<typeof createRootHooks<TRouter, TSSRContext>>;\n","import type { QueryClientConfig } from '@tanstack/react-query';\nimport { QueryClient } from '@tanstack/react-query';\n\n/**\n * @internal\n */\nexport type CreateTRPCReactQueryClientConfig =\n  | {\n      queryClient?: QueryClient;\n      queryClientConfig?: never;\n    }\n  | {\n      queryClientConfig?: QueryClientConfig;\n      queryClient?: never;\n    };\n\n/**\n * @internal\n */\nexport const getQueryClient = (config: CreateTRPCReactQueryClientConfig) =>\n  config.queryClient ?? new QueryClient(config.queryClientConfig);\n"],"names":["hooks: CreateReactQueryHooks<TRouter, TSSRContext>","contextProps: (keyof TRPCContextPropsBase<any, any>)[]","React","utilName: keyof AnyDecoratedProcedure","context: TRPCQueryUtils<TRouter>","contextMap: Record<keyof AnyDecoratedProcedure, () => unknown>","context: TRPCContextState<AnyRouter, TSSRContext>","client: TRPCUntypedClient<TRouter> | TRPCClient<TRouter>","untypedClient: TRPCUntypedClient<TRouter>","options: QueryOptions","queryKey: TRPCQueryKey","opts: TOptions","infiniteParams?: {\n    pageParam: any;\n    direction: 'forward' | 'backward';\n  }","_asyncIterator","r","AsyncFromSyncIterator","value: {\n  path: readonly string[];\n}","asyncIterable: AsyncIterable<unknown>","queryClient: QueryClient","queryKey: TRPCQueryKey","aggregate: unknown[]","opts: CreateQueryUtilsOptions<TRouter>","opts","queryFnContext: QueryFunctionContext<TRPCQueryKey, unknown>","queryFnContext: QueryFunctionContext<TRPCQueryKey>","input: unknown","result: T","onTrackResult: (key: keyof T) => void","config?: CreateTRPCReactOptions<TRouter>","mutationSuccessOverride: UseMutationOverride['onSuccess']","TRPCProvider: TRPCProvider<TRouter, TSSRContext>","client: TRPCUntypedClient<TRouter>","queryKey: TRPCQueryKey","opts: TOptions","useQuery","path: readonly string[]","input: unknown","opts?: UseTRPCQueryOptions<unknown, unknown, TError>","usePrefetchQuery","path: string[]","opts?: UseTRPCPrefetchQueryOptions<unknown, unknown, TError>","useSuspenseQuery","opts?: UseTRPCSuspenseQueryOptions<unknown, unknown, TError>","useMutation","opts?: UseTRPCMutationOptions<unknown, TError, unknown, unknown>","initialStateIdle: Omit<TRPCSubscriptionIdleResult<unknown>, 'reset'>","initialStateConnecting: Omit<\n    TRPCSubscriptionConnectingResult<unknown, TError>,\n    'reset'\n  >","opts: UseTRPCSubscriptionOptions<unknown, TError>","key: keyof $Result","callback: (prevState: $Result) => $Result","useInfiniteQuery","opts: UseTRPCInfiniteQueryOptions<unknown, unknown, TError>","usePrefetchInfiniteQuery","opts: UseTRPCPrefetchInfiniteQueryOptions<unknown, unknown, TError>","useSuspenseInfiniteQuery","opts: UseTRPCSuspenseInfiniteQueryOptions<unknown, unknown, TError>","useQueries: TRPCUseQueries<TRouter>","useSuspenseQueries: TRPCUseSuspenseQueries<TRouter>","config: CreateTRPCReactQueryClientConfig"],"mappings":"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","debugId":null}},
    {"offset": {"line": 12289, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@trpc/react-query/dist/index.mjs","sources":["file:///D:/github2/interview-prep-app/node_modules/%40trpc/react-query/src/createTRPCReact.tsx","file:///D:/github2/interview-prep-app/node_modules/%40trpc/react-query/src/createTRPCQueryUtils.tsx"],"sourcesContent":["import type {\n  DefinedInitialDataInfiniteOptions,\n  DefinedUseInfiniteQueryResult,\n  InfiniteData,\n  SkipToken,\n  UndefinedInitialDataInfiniteOptions,\n  UseInfiniteQueryOptions,\n  UseInfiniteQueryResult,\n  UseSuspenseInfiniteQueryOptions,\n  UseSuspenseInfiniteQueryResult,\n  UseSuspenseQueryResult,\n} from '@tanstack/react-query';\nimport type { createTRPCClient, TRPCClientErrorLike } from '@trpc/client';\nimport type {\n  AnyProcedure,\n  AnyRootTypes,\n  AnyRouter,\n  inferAsyncIterableYield,\n  inferProcedureInput,\n  inferTransformedProcedureOutput,\n  ProcedureType,\n  ProtectedIntersection,\n  RouterRecord,\n  Simplify,\n} from '@trpc/server/unstable-core-do-not-import';\nimport { createFlatProxy } from '@trpc/server/unstable-core-do-not-import';\nimport * as React from 'react';\nimport type {\n  TRPCUseQueries,\n  TRPCUseSuspenseQueries,\n} from './internals/useQueries';\nimport type {\n  CreateReactUtils,\n  TRPCFetchInfiniteQueryOptions,\n  TRPCFetchQueryOptions,\n} from './shared';\nimport { createReactDecoration, createReactQueryUtils } from './shared';\nimport type { CreateReactQueryHooks } from './shared/hooks/createHooksInternal';\nimport { createRootHooks } from './shared/hooks/createHooksInternal';\nimport type {\n  DefinedUseTRPCQueryOptions,\n  DefinedUseTRPCQueryResult,\n  TRPCHookResult,\n  TRPCProvider,\n  TRPCSubscriptionResult,\n  TRPCUseQueryBaseOptions,\n  UseTRPCMutationOptions,\n  UseTRPCMutationResult,\n  UseTRPCQueryOptions,\n  UseTRPCQueryResult,\n  UseTRPCSubscriptionOptions,\n  UseTRPCSuspenseQueryOptions,\n} from './shared/hooks/types';\nimport type { CreateTRPCReactOptions } from './shared/types';\n\ntype ResolverDef = {\n  input: any;\n  output: any;\n  transformer: boolean;\n  errorShape: any;\n};\n/**\n * @internal\n */\nexport interface ProcedureUseQuery<TDef extends ResolverDef> {\n  <TQueryFnData extends TDef['output'] = TDef['output'], TData = TQueryFnData>(\n    input: TDef['input'] | SkipToken,\n    opts: DefinedUseTRPCQueryOptions<\n      TQueryFnData,\n      TData,\n      TRPCClientErrorLike<{\n        errorShape: TDef['errorShape'];\n        transformer: TDef['transformer'];\n      }>,\n      TDef['output']\n    >,\n  ): DefinedUseTRPCQueryResult<\n    TData,\n    TRPCClientErrorLike<{\n      errorShape: TDef['errorShape'];\n      transformer: TDef['transformer'];\n    }>\n  >;\n\n  <TQueryFnData extends TDef['output'] = TDef['output'], TData = TQueryFnData>(\n    input: TDef['input'] | SkipToken,\n    opts?: UseTRPCQueryOptions<\n      TQueryFnData,\n      TData,\n      TRPCClientErrorLike<TDef>,\n      TDef['output']\n    >,\n  ): UseTRPCQueryResult<TData, TRPCClientErrorLike<TDef>>;\n}\n\n/**\n * @internal\n */\nexport type ProcedureUsePrefetchQuery<TDef extends ResolverDef> = (\n  input: TDef['input'] | SkipToken,\n  opts?: TRPCFetchQueryOptions<TDef['output'], TRPCClientErrorLike<TDef>>,\n) => void;\n\n/**\n * @remark `void` is here due to https://github.com/trpc/trpc/pull/4374\n */\ntype CursorInput = {\n  cursor?: any;\n} | void;\n\ntype ReservedInfiniteQueryKeys = 'cursor' | 'direction';\ntype InfiniteInput<TInput> =\n  | Omit<TInput, ReservedInfiniteQueryKeys>\n  | SkipToken;\n\ntype inferCursorType<TInput> = TInput extends { cursor?: any }\n  ? TInput['cursor']\n  : unknown;\n\ntype makeInfiniteQueryOptions<TCursor, TOptions> = Omit<\n  TOptions,\n  'queryKey' | 'initialPageParam' | 'queryFn' | 'queryHash' | 'queryHashFn'\n> &\n  TRPCUseQueryBaseOptions & {\n    initialCursor?: TCursor;\n  };\n\ntype trpcInfiniteData<TDef extends ResolverDef> = Simplify<\n  InfiniteData<TDef['output'], inferCursorType<TDef['input']>>\n>;\n// references from react-query\n// 1st\n// declare function useInfiniteQuery<\n//   TQueryFnData,\n//   TError = DefaultError,\n//   TData = InfiniteData<TQueryFnData>,\n//   TQueryKey extends QueryKey = QueryKey,\n//   TPageParam = unknown,\n// >(\n//   options: DefinedInitialDataInfiniteOptions<\n//     TQueryFnData,\n//     TError,\n//     TData,\n//     TQueryKey,\n//     TPageParam\n//   >,\n//   queryClient?: QueryClient,\n// ): DefinedUseInfiniteQueryResult<TData, TError>;\n// 2nd\n// declare function useInfiniteQuery<\n//   TQueryFnData,\n//   TError = DefaultError,\n//   TData = InfiniteData<TQueryFnData>,\n//   TQueryKey extends QueryKey = QueryKey,\n//   TPageParam = unknown,\n// >(\n//   options: UndefinedInitialDataInfiniteOptions<\n//     TQueryFnData,\n//     TError,\n//     TData,\n//     TQueryKey,\n//     TPageParam\n//   >,\n//   queryClient?: QueryClient,\n// ): UseInfiniteQueryResult<TData, TError>;\n// 3rd\n// declare function useInfiniteQuery<\n//   TQueryFnData,\n//   TError = DefaultError,\n//   TData = InfiniteData<TQueryFnData>,\n//   TQueryKey extends QueryKey = QueryKey,\n//   TPageParam = unknown,\n// >(\n//   options: UseInfiniteQueryOptions<\n//     TQueryFnData,\n//     TError,\n//     TData,\n//     TQueryFnData,\n//     TQueryKey,\n//     TPageParam\n//   >,\n//   queryClient?: QueryClient,\n// ): UseInfiniteQueryResult<TData, TError>;\n\nexport interface useTRPCInfiniteQuery<TDef extends ResolverDef> {\n  // 1st\n  <TData = trpcInfiniteData<TDef>>(\n    input: InfiniteInput<TDef['input']>,\n    opts: makeInfiniteQueryOptions<\n      inferCursorType<TDef['input']>,\n      DefinedInitialDataInfiniteOptions<\n        //     TQueryFnData,\n        TDef['output'],\n        //     TError,\n        TRPCClientErrorLike<TDef>,\n        //     TData,\n        TData,\n        //     TQueryKey,\n        any,\n        //     TPageParam\n        inferCursorType<TDef['input']>\n      >\n    >,\n  ): TRPCHookResult &\n    DefinedUseInfiniteQueryResult<TData, TRPCClientErrorLike<TDef>>;\n\n  // 2nd\n  <TData = trpcInfiniteData<TDef>>(\n    input: InfiniteInput<TDef['input']>,\n    opts?: makeInfiniteQueryOptions<\n      inferCursorType<TDef['input']>,\n      UndefinedInitialDataInfiniteOptions<\n        //     TQueryFnData,\n        TDef['output'],\n        //     TError,\n        TRPCClientErrorLike<TDef>,\n        //     TData,\n        TData,\n        //     TQueryKey,\n        any,\n        //     TPageParam\n        inferCursorType<TDef['input']>\n      >\n    >,\n  ): TRPCHookResult & UseInfiniteQueryResult<TData, TRPCClientErrorLike<TDef>>;\n\n  // 3rd:\n  <TData = trpcInfiniteData<TDef>>(\n    input: InfiniteInput<TDef['input']>,\n    opts?: makeInfiniteQueryOptions<\n      inferCursorType<TDef['input']>,\n      UseInfiniteQueryOptions<\n        //     TQueryFnData,\n        TDef['output'],\n        //     TError,\n        TRPCClientErrorLike<TDef>,\n        //     TData,\n        TData,\n        //     TQueryKey,\n        any,\n        //     TPageParam\n        inferCursorType<TDef['input']>\n      >\n    >,\n  ): TRPCHookResult & UseInfiniteQueryResult<TData, TRPCClientErrorLike<TDef>>;\n}\n\n// references from react-query\n// declare function useSuspenseInfiniteQuery<\n//   TQueryFnData,\n//   TError = DefaultError,\n//   TData = InfiniteData<TQueryFnData>,\n//   TQueryKey extends QueryKey = QueryKey,\n//   TPageParam = unknown,\n// >(\n//   options: UseSuspenseInfiniteQueryOptions<\n//     TQueryFnData,\n//     TError,\n//     TData,\n//     TQueryFnData,\n//     TQueryKey,\n//     TPageParam\n//   >,\n//   queryClient?: QueryClient,\n// ): UseSuspenseInfiniteQueryResult<TData, TError>;\n\nexport type useTRPCSuspenseInfiniteQuery<TDef extends ResolverDef> = (\n  input: InfiniteInput<TDef['input']>,\n  opts: makeInfiniteQueryOptions<\n    inferCursorType<TDef['input']>,\n    UseSuspenseInfiniteQueryOptions<\n      //     TQueryFnData,\n      TDef['output'],\n      //     TError,\n      TRPCClientErrorLike<TDef>,\n      //     TData,\n      trpcInfiniteData<TDef>,\n      //     TQueryKey,\n      any,\n      //     TPageParam\n      inferCursorType<TDef['input']>\n    >\n  >,\n) => [\n  trpcInfiniteData<TDef>,\n  TRPCHookResult &\n    UseSuspenseInfiniteQueryResult<\n      trpcInfiniteData<TDef>,\n      TRPCClientErrorLike<TDef>\n    >,\n];\n\n/**\n * @internal\n */\nexport type MaybeDecoratedInfiniteQuery<TDef extends ResolverDef> =\n  TDef['input'] extends CursorInput\n    ? {\n        /**\n         * @see https://trpc.io/docs/v11/client/react/useInfiniteQuery\n         */\n        useInfiniteQuery: useTRPCInfiniteQuery<TDef>;\n        /**\n         * @see https://trpc.io/docs/client/react/suspense#usesuspenseinfinitequery\n         */\n        useSuspenseInfiniteQuery: useTRPCSuspenseInfiniteQuery<TDef>;\n\n        usePrefetchInfiniteQuery: (\n          input: Omit<TDef['input'], ReservedInfiniteQueryKeys> | SkipToken,\n          opts: TRPCFetchInfiniteQueryOptions<\n            TDef['input'],\n            TDef['output'],\n            TRPCClientErrorLike<TDef>\n          >,\n        ) => void;\n      }\n    : object;\n\n/**\n * @internal\n */\nexport type DecoratedQueryMethods<TDef extends ResolverDef> = {\n  /**\n   * @see https://trpc.io/docs/v11/client/react/useQuery\n   */\n  useQuery: ProcedureUseQuery<TDef>;\n  usePrefetchQuery: ProcedureUsePrefetchQuery<TDef>;\n  /**\n   * @see https://trpc.io/docs/v11/client/react/suspense#usesuspensequery\n   */\n  useSuspenseQuery: <\n    TQueryFnData extends TDef['output'] = TDef['output'],\n    TData = TQueryFnData,\n  >(\n    input: TDef['input'],\n    opts?: UseTRPCSuspenseQueryOptions<\n      TQueryFnData,\n      TData,\n      TRPCClientErrorLike<TDef>\n    >,\n  ) => [\n    TData,\n    UseSuspenseQueryResult<TData, TRPCClientErrorLike<TDef>> & TRPCHookResult,\n  ];\n};\n\n/**\n * @internal\n */\nexport type DecoratedQuery<TDef extends ResolverDef> =\n  MaybeDecoratedInfiniteQuery<TDef> & DecoratedQueryMethods<TDef>;\n\nexport type DecoratedMutation<TDef extends ResolverDef> = {\n  /**\n   * @see https://trpc.io/docs/v11/client/react/useMutation\n   */\n  useMutation: <TContext = unknown>(\n    opts?: UseTRPCMutationOptions<\n      TDef['input'],\n      TRPCClientErrorLike<TDef>,\n      TDef['output'],\n      TContext\n    >,\n  ) => UseTRPCMutationResult<\n    TDef['output'],\n    TRPCClientErrorLike<TDef>,\n    TDef['input'],\n    TContext\n  >;\n};\n\ninterface ProcedureUseSubscription<TDef extends ResolverDef> {\n  // Without skip token\n  (\n    input: TDef['input'],\n    opts?: UseTRPCSubscriptionOptions<\n      inferAsyncIterableYield<TDef['output']>,\n      TRPCClientErrorLike<TDef>\n    >,\n  ): TRPCSubscriptionResult<\n    inferAsyncIterableYield<TDef['output']>,\n    TRPCClientErrorLike<TDef>\n  >;\n\n  // With skip token\n  (\n    input: TDef['input'] | SkipToken,\n    opts?: Omit<\n      UseTRPCSubscriptionOptions<\n        inferAsyncIterableYield<TDef['output']>,\n        TRPCClientErrorLike<TDef>\n      >,\n      'enabled'\n    >,\n  ): TRPCSubscriptionResult<\n    inferAsyncIterableYield<TDef['output']>,\n    TRPCClientErrorLike<TDef>\n  >;\n}\n/**\n * @internal\n */\nexport type DecorateProcedure<\n  TType extends ProcedureType,\n  TDef extends ResolverDef,\n> = TType extends 'query'\n  ? DecoratedQuery<TDef>\n  : TType extends 'mutation'\n    ? DecoratedMutation<TDef>\n    : TType extends 'subscription'\n      ? {\n          /**\n           * @see https://trpc.io/docs/v11/subscriptions\n           */\n          useSubscription: ProcedureUseSubscription<TDef>;\n        }\n      : never;\n\n/**\n * @internal\n */\nexport type DecorateRouterRecord<\n  TRoot extends AnyRootTypes,\n  TRecord extends RouterRecord,\n> = {\n  [TKey in keyof TRecord]: TRecord[TKey] extends infer $Value\n    ? $Value extends AnyProcedure\n      ? DecorateProcedure<\n          $Value['_def']['type'],\n          {\n            input: inferProcedureInput<$Value>;\n            output: inferTransformedProcedureOutput<TRoot, $Value>;\n            transformer: TRoot['transformer'];\n            errorShape: TRoot['errorShape'];\n          }\n        >\n      : $Value extends RouterRecord\n        ? DecorateRouterRecord<TRoot, $Value>\n        : never\n    : never;\n};\n\n/**\n * @internal\n */\nexport type CreateTRPCReactBase<TRouter extends AnyRouter, TSSRContext> = {\n  /**\n   * @deprecated renamed to `useUtils` and will be removed in a future tRPC version\n   *\n   * @see https://trpc.io/docs/v11/client/react/useUtils\n   */\n  useContext(): CreateReactUtils<TRouter, TSSRContext>;\n  /**\n   * @see https://trpc.io/docs/v11/client/react/useUtils\n   */\n  useUtils(): CreateReactUtils<TRouter, TSSRContext>;\n  Provider: TRPCProvider<TRouter, TSSRContext>;\n  createClient: typeof createTRPCClient<TRouter>;\n  useQueries: TRPCUseQueries<TRouter>;\n  useSuspenseQueries: TRPCUseSuspenseQueries<TRouter>;\n};\n\nexport type CreateTRPCReact<\n  TRouter extends AnyRouter,\n  TSSRContext,\n> = ProtectedIntersection<\n  CreateTRPCReactBase<TRouter, TSSRContext>,\n  DecorateRouterRecord<\n    TRouter['_def']['_config']['$types'],\n    TRouter['_def']['record']\n  >\n>;\n\n/**\n * @internal\n */\nexport function createHooksInternal<\n  TRouter extends AnyRouter,\n  TSSRContext = unknown,\n>(trpc: CreateReactQueryHooks<TRouter, TSSRContext>) {\n  type CreateHooksInternal = CreateTRPCReact<TRouter, TSSRContext>;\n\n  const proxy = createReactDecoration<TRouter, TSSRContext>(\n    trpc,\n  ) as DecorateRouterRecord<\n    TRouter['_def']['_config']['$types'],\n    TRouter['_def']['record']\n  >;\n  return createFlatProxy<CreateHooksInternal>((key) => {\n    if (key === 'useContext' || key === 'useUtils') {\n      return () => {\n        const context = trpc.useUtils();\n        // create a stable reference of the utils context\n        return React.useMemo(() => {\n          return (createReactQueryUtils as any)(context);\n        }, [context]);\n      };\n    }\n\n    if (trpc.hasOwnProperty(key)) {\n      return (trpc as any)[key];\n    }\n\n    return proxy[key];\n  });\n}\n\nexport function createTRPCReact<\n  TRouter extends AnyRouter,\n  TSSRContext = unknown,\n>(\n  opts?: CreateTRPCReactOptions<TRouter>,\n): CreateTRPCReact<TRouter, TSSRContext> {\n  const hooks = createRootHooks<TRouter, TSSRContext>(opts);\n  const proxy = createHooksInternal<TRouter, TSSRContext>(hooks);\n\n  return proxy as any;\n}\n","import type { AnyRouter } from '@trpc/server/unstable-core-do-not-import';\nimport { createQueryUtilsProxy } from './shared';\nimport type { CreateQueryUtilsOptions } from './utils/createUtilityFunctions';\nimport { createUtilityFunctions } from './utils/createUtilityFunctions';\n\nexport function createTRPCQueryUtils<TRouter extends AnyRouter>(\n  opts: CreateQueryUtilsOptions<TRouter>,\n) {\n  const utils = createUtilityFunctions(opts);\n  return createQueryUtilsProxy<TRouter>(utils);\n}\n"],"names":["trpc: CreateReactQueryHooks<TRouter, TSSRContext>","opts?: CreateTRPCReactOptions<TRouter>","opts: CreateQueryUtilsOptions<TRouter>"],"mappings":";;;;;;;;;;;;;;;;;;;GA4dA,SAAgB,oBAGdA,IAAAA,EAAmD;IAGnD,MAAM,YAAQ,gMAAA,EACZ,KACD;IAID,WAAO,yLAAA,EAAqC,CAAC,QAAQ;QACnD,IAAI,QAAQ,gBAAgB,QAAQ,WAClC,CAAA,OAAO,MAAM;YACX,MAAM,UAAU,KAAK,QAAA,EAAU;YAE/B,OAAO,MAAM,0MAAA,CAAQ,MAAM;gBACzB,WAAQ,gMAAA,EAA8B,QAAQ;YAC/C,GAAE;gBAAC,OAAQ;aAAA,CAAC;QACd;QAGH,IAAI,KAAK,cAAA,CAAe,IAAI,CAC1B,CAAA,OAAQ,IAAA,CAAa,IAAA;QAGvB,OAAO,KAAA,CAAM,IAAA;IACd,EAAC;AACH;AAED,SAAgB,gBAIdC,IAAAA,EACuC;IACvC,MAAM,YAAQ,0LAAA,EAAsC,KAAK;IACzD,MAAM,QAAQ,oBAA0C,MAAM;IAE9D,OAAO;AACR;;;AChgBD,SAAgB,qBACdC,IAAAA,EACA;IACA,MAAM,YAAQ,iMAAA,EAAuB,KAAK;IAC1C,WAAO,gMAAA,EAA+B,MAAM;AAC7C","debugId":null}},
    {"offset": {"line": 12340, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40swc/helpers/cjs/_interop_require_default.cjs"],"sourcesContent":["\"use strict\";\n\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nexports._ = _interop_require_default;\n"],"names":[],"mappings":"AAEA,SAAS,yBAAyB,GAAG;IACjC,OAAO,OAAO,IAAI,UAAU,GAAG,MAAM;QAAE,SAAS;IAAI;AACxD;AACA,QAAQ,CAAC,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12350, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/%40swc/helpers/cjs/_interop_require_wildcard.cjs"],"sourcesContent":["\"use strict\";\n\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) return obj;\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") return { default: obj };\n\n    var cache = _getRequireWildcardCache(nodeInterop);\n\n    if (cache && cache.has(obj)) return cache.get(obj);\n\n    var newObj = { __proto__: null };\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);\n            else newObj[key] = obj[key];\n        }\n    }\n\n    newObj.default = obj;\n\n    if (cache) cache.set(obj, newObj);\n\n    return newObj;\n}\nexports._ = _interop_require_wildcard;\n"],"names":[],"mappings":"AAEA,SAAS,yBAAyB,WAAW;IACzC,IAAI,OAAO,YAAY,YAAY,OAAO;IAE1C,IAAI,oBAAoB,IAAI;IAC5B,IAAI,mBAAmB,IAAI;IAE3B,OAAO,CAAC,2BAA2B,SAAS,WAAW;QACnD,OAAO,cAAc,mBAAmB;IAC5C,CAAC,EAAE;AACP;AACA,SAAS,0BAA0B,GAAG,EAAE,WAAW;IAC/C,IAAI,CAAC,eAAe,OAAO,IAAI,UAAU,EAAE,OAAO;IAClD,IAAI,QAAQ,QAAQ,OAAO,QAAQ,YAAY,OAAO,QAAQ,YAAY,OAAO;QAAE,SAAS;IAAI;IAEhG,IAAI,QAAQ,yBAAyB;IAErC,IAAI,SAAS,MAAM,GAAG,CAAC,MAAM,OAAO,MAAM,GAAG,CAAC;IAE9C,IAAI,SAAS;QAAE,WAAW;IAAK;IAC/B,IAAI,wBAAwB,OAAO,cAAc,IAAI,OAAO,wBAAwB;IAEpF,IAAK,IAAI,OAAO,IAAK;QACjB,IAAI,QAAQ,aAAa,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,MAAM;YACrE,IAAI,OAAO,wBAAwB,OAAO,wBAAwB,CAAC,KAAK,OAAO;YAC/E,IAAI,QAAQ,CAAC,KAAK,GAAG,IAAI,KAAK,GAAG,GAAG,OAAO,cAAc,CAAC,QAAQ,KAAK;iBAClE,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI;QAC/B;IACJ;IAEA,OAAO,OAAO,GAAG;IAEjB,IAAI,OAAO,MAAM,GAAG,CAAC,KAAK;IAE1B,OAAO;AACX;AACA,QAAQ,CAAC,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12385, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-dom.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactDOM\n"],"names":["module","exports","require","vendored","ReactDOM"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,QAAQ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12390, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/next/src/server/route-modules/app-page/vendored/contexts/head-manager-context.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].HeadManagerContext\n"],"names":["module","exports","require","vendored","HeadManagerContext"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,WAAW,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12395, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/next/src/client/set-attributes-from-props.ts"],"sourcesContent":["const DOMAttributeNames: Record<string, string> = {\n  acceptCharset: 'accept-charset',\n  className: 'class',\n  htmlFor: 'for',\n  httpEquiv: 'http-equiv',\n  noModule: 'noModule',\n}\n\nconst ignoreProps = [\n  'onLoad',\n  'onReady',\n  'dangerouslySetInnerHTML',\n  'children',\n  'onError',\n  'strategy',\n  'stylesheets',\n]\n\nfunction isBooleanScriptAttribute(\n  attr: string\n): attr is 'async' | 'defer' | 'noModule' {\n  return ['async', 'defer', 'noModule'].includes(attr)\n}\n\nexport function setAttributesFromProps(el: HTMLElement, props: object) {\n  for (const [p, value] of Object.entries(props)) {\n    if (!props.hasOwnProperty(p)) continue\n    if (ignoreProps.includes(p)) continue\n\n    // we don't render undefined props to the DOM\n    if (value === undefined) {\n      continue\n    }\n\n    const attr = DOMAttributeNames[p] || p.toLowerCase()\n\n    if (el.tagName === 'SCRIPT' && isBooleanScriptAttribute(attr)) {\n      // Correctly assign boolean script attributes\n      // https://github.com/vercel/next.js/pull/20748\n      ;(el as HTMLScriptElement)[attr] = !!value\n    } else {\n      el.setAttribute(attr, String(value))\n    }\n\n    // Remove falsy non-zero boolean attributes so they are correctly interpreted\n    // (e.g. if we set them to false, this coerces to the string \"false\", which the browser interprets as true)\n    if (\n      value === false ||\n      (el.tagName === 'SCRIPT' &&\n        isBooleanScriptAttribute(attr) &&\n        (!value || value === 'false'))\n    ) {\n      // Call setAttribute before, as we need to set and unset the attribute to override force async:\n      // https://html.spec.whatwg.org/multipage/scripting.html#script-force-async\n      el.setAttribute(attr, '')\n      el.removeAttribute(attr)\n    }\n  }\n}\n"],"names":["setAttributesFromProps","DOMAttributeNames","acceptCharset","className","htmlFor","httpEquiv","noModule","ignoreProps","isBooleanScriptAttribute","attr","includes","el","props","p","value","Object","entries","hasOwnProperty","undefined","toLowerCase","tagName","setAttribute","String","removeAttribute"],"mappings":";;;+BAwBgBA,0BAAAA;;;eAAAA;;;AAxBhB,MAAMC,oBAA4C;IAChDC,eAAe;IACfC,WAAW;IACXC,SAAS;IACTC,WAAW;IACXC,UAAU;AACZ;AAEA,MAAMC,cAAc;IAClB;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,SAASC,yBACPC,IAAY;IAEZ,OAAO;QAAC;QAAS;QAAS;KAAW,CAACC,QAAQ,CAACD;AACjD;AAEO,SAAST,uBAAuBW,EAAe,EAAEC,KAAa;IACnE,KAAK,MAAM,CAACC,GAAGC,MAAM,IAAIC,OAAOC,OAAO,CAACJ,OAAQ;QAC9C,IAAI,CAACA,MAAMK,cAAc,CAACJ,IAAI;QAC9B,IAAIN,YAAYG,QAAQ,CAACG,IAAI;QAE7B,6CAA6C;QAC7C,IAAIC,UAAUI,WAAW;YACvB;QACF;QAEA,MAAMT,OAAOR,iBAAiB,CAACY,EAAE,IAAIA,EAAEM,WAAW;QAElD,IAAIR,GAAGS,OAAO,KAAK,YAAYZ,yBAAyBC,OAAO;YAC7D,6CAA6C;YAC7C,+CAA+C;;YAC7CE,EAAwB,CAACF,KAAK,GAAG,CAAC,CAACK;QACvC,OAAO;YACLH,GAAGU,YAAY,CAACZ,MAAMa,OAAOR;QAC/B;QAEA,6EAA6E;QAC7E,2GAA2G;QAC3G,IACEA,UAAU,SACTH,GAAGS,OAAO,KAAK,YACdZ,yBAAyBC,SACxB,CAAA,CAACK,SAASA,UAAU,OAAM,GAC7B;YACA,+FAA+F;YAC/F,2EAA2E;YAC3EH,GAAGU,YAAY,CAACZ,MAAM;YACtBE,GAAGY,eAAe,CAACd;QACrB;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12465, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/next/src/client/request-idle-callback.ts"],"sourcesContent":["export const requestIdleCallback =\n  (typeof self !== 'undefined' &&\n    self.requestIdleCallback &&\n    self.requestIdleCallback.bind(window)) ||\n  function (cb: IdleRequestCallback): number {\n    let start = Date.now()\n    return self.setTimeout(function () {\n      cb({\n        didTimeout: false,\n        timeRemaining: function () {\n          return Math.max(0, 50 - (Date.now() - start))\n        },\n      })\n    }, 1)\n  }\n\nexport const cancelIdleCallback =\n  (typeof self !== 'undefined' &&\n    self.cancelIdleCallback &&\n    self.cancelIdleCallback.bind(window)) ||\n  function (id: number) {\n    return clearTimeout(id)\n  }\n"],"names":["cancelIdleCallback","requestIdleCallback","self","bind","window","cb","start","Date","now","setTimeout","didTimeout","timeRemaining","Math","max","id","clearTimeout"],"mappings":";;;;;;;;;;;;;;IAgBaA,kBAAkB,EAAA;eAAlBA;;IAhBAC,mBAAmB,EAAA;eAAnBA;;;AAAN,MAAMA,sBACV,OAAOC,SAAS,eACfA,KAAKD,mBAAmB,IACxBC,KAAKD,mBAAmB,CAACE,IAAI,CAACC,WAChC,SAAUC,EAAuB;IAC/B,IAAIC,QAAQC,KAAKC,GAAG;IACpB,OAAON,KAAKO,UAAU,CAAC;QACrBJ,GAAG;YACDK,YAAY;YACZC,eAAe;gBACb,OAAOC,KAAKC,GAAG,CAAC,GAAG,KAAMN,CAAAA,KAAKC,GAAG,KAAKF,KAAI;YAC5C;QACF;IACF,GAAG;AACL;AAEK,MAAMN,qBACV,OAAOE,SAAS,eACfA,KAAKF,kBAAkB,IACvBE,KAAKF,kBAAkB,CAACG,IAAI,CAACC,WAC/B,SAAUU,EAAU;IAClB,OAAOC,aAAaD;AACtB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12511, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/node_modules/next/src/client/script.tsx"],"sourcesContent":["'use client'\n\nimport ReactDOM from 'react-dom'\nimport React, { useEffect, useContext, useRef, type JSX } from 'react'\nimport type { ScriptHTMLAttributes } from 'react'\nimport { HeadManagerContext } from '../shared/lib/head-manager-context.shared-runtime'\nimport { setAttributesFromProps } from './set-attributes-from-props'\nimport { requestIdleCallback } from './request-idle-callback'\n\nconst ScriptCache = new Map()\nconst LoadCache = new Set()\n\nexport interface ScriptProps extends ScriptHTMLAttributes<HTMLScriptElement> {\n  strategy?: 'afterInteractive' | 'lazyOnload' | 'beforeInteractive' | 'worker'\n  id?: string\n  onLoad?: (e: any) => void\n  onReady?: () => void | null\n  onError?: (e: any) => void\n  children?: React.ReactNode\n  stylesheets?: string[]\n}\n\n/**\n * @deprecated Use `ScriptProps` instead.\n */\nexport type Props = ScriptProps\n\nconst insertStylesheets = (stylesheets: string[]) => {\n  // Case 1: Styles for afterInteractive/lazyOnload with appDir injected via handleClientScriptLoad\n  //\n  // Using ReactDOM.preinit to feature detect appDir and inject styles\n  // Stylesheets might have already been loaded if initialized with Script component\n  // Re-inject styles here to handle scripts loaded via handleClientScriptLoad\n  // ReactDOM.preinit handles dedup and ensures the styles are loaded only once\n  if (ReactDOM.preinit) {\n    stylesheets.forEach((stylesheet: string) => {\n      ReactDOM.preinit(stylesheet, { as: 'style' })\n    })\n\n    return\n  }\n\n  // Case 2: Styles for afterInteractive/lazyOnload with pages injected via handleClientScriptLoad\n  //\n  // We use this function to load styles when appdir is not detected\n  // TODO: Use React float APIs to load styles once available for pages dir\n  if (typeof window !== 'undefined') {\n    let head = document.head\n    stylesheets.forEach((stylesheet: string) => {\n      let link = document.createElement('link')\n\n      link.type = 'text/css'\n      link.rel = 'stylesheet'\n      link.href = stylesheet\n\n      head.appendChild(link)\n    })\n  }\n}\n\nconst loadScript = (props: ScriptProps): void => {\n  const {\n    src,\n    id,\n    onLoad = () => {},\n    onReady = null,\n    dangerouslySetInnerHTML,\n    children = '',\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n  } = props\n\n  const cacheKey = id || src\n\n  // Script has already loaded\n  if (cacheKey && LoadCache.has(cacheKey)) {\n    return\n  }\n\n  // Contents of this script are already loading/loaded\n  if (ScriptCache.has(src)) {\n    LoadCache.add(cacheKey)\n    // It is possible that multiple `next/script` components all have same \"src\", but has different \"onLoad\"\n    // This is to make sure the same remote script will only load once, but \"onLoad\" are executed in order\n    ScriptCache.get(src).then(onLoad, onError)\n    return\n  }\n\n  /** Execute after the script first loaded */\n  const afterLoad = () => {\n    // Run onReady for the first time after load event\n    if (onReady) {\n      onReady()\n    }\n    // add cacheKey to LoadCache when load successfully\n    LoadCache.add(cacheKey)\n  }\n\n  const el = document.createElement('script')\n\n  const loadPromise = new Promise<void>((resolve, reject) => {\n    el.addEventListener('load', function (e) {\n      resolve()\n      if (onLoad) {\n        onLoad.call(this, e)\n      }\n      afterLoad()\n    })\n    el.addEventListener('error', function (e) {\n      reject(e)\n    })\n  }).catch(function (e) {\n    if (onError) {\n      onError(e)\n    }\n  })\n\n  if (dangerouslySetInnerHTML) {\n    // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n    el.innerHTML = (dangerouslySetInnerHTML.__html as string) || ''\n\n    afterLoad()\n  } else if (children) {\n    el.textContent =\n      typeof children === 'string'\n        ? children\n        : Array.isArray(children)\n          ? children.join('')\n          : ''\n\n    afterLoad()\n  } else if (src) {\n    el.src = src\n    // do not add cacheKey into LoadCache for remote script here\n    // cacheKey will be added to LoadCache when it is actually loaded (see loadPromise above)\n\n    ScriptCache.set(src, loadPromise)\n  }\n\n  setAttributesFromProps(el, props)\n\n  if (strategy === 'worker') {\n    el.setAttribute('type', 'text/partytown')\n  }\n\n  el.setAttribute('data-nscript', strategy)\n\n  // Load styles associated with this script\n  if (stylesheets) {\n    insertStylesheets(stylesheets)\n  }\n\n  document.body.appendChild(el)\n}\n\nexport function handleClientScriptLoad(props: ScriptProps) {\n  const { strategy = 'afterInteractive' } = props\n  if (strategy === 'lazyOnload') {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  } else {\n    loadScript(props)\n  }\n}\n\nfunction loadLazyScript(props: ScriptProps) {\n  if (document.readyState === 'complete') {\n    requestIdleCallback(() => loadScript(props))\n  } else {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  }\n}\n\nfunction addBeforeInteractiveToCache() {\n  const scripts = [\n    ...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'),\n    ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]'),\n  ]\n  scripts.forEach((script) => {\n    const cacheKey = script.id || script.getAttribute('src')\n    LoadCache.add(cacheKey)\n  })\n}\n\nexport function initScriptLoader(scriptLoaderItems: ScriptProps[]) {\n  scriptLoaderItems.forEach(handleClientScriptLoad)\n  addBeforeInteractiveToCache()\n}\n\n/**\n * Load a third-party scripts in an optimized way.\n *\n * Read more: [Next.js Docs: `next/script`](https://nextjs.org/docs/app/api-reference/components/script)\n */\nfunction Script(props: ScriptProps): JSX.Element | null {\n  const {\n    id,\n    src = '',\n    onLoad = () => {},\n    onReady = null,\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n    ...restProps\n  } = props\n\n  // Context is available only during SSR\n  let { updateScripts, scripts, getIsSsr, appDir, nonce } =\n    useContext(HeadManagerContext)\n\n  // if a nonce is explicitly passed to the script tag, favor that over the automatic handling\n  nonce = restProps.nonce || nonce\n\n  /**\n   * - First mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script hasn't loaded yet (not in LoadCache)\n   *      onReady is skipped, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. hasLoadScriptEffectCalled.current is false, loadScript executes\n   *      Once the script is loaded, the onLoad and onReady will be called by then\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   *\n   * - Second mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script has already loaded (found in LoadCache)\n   *      onReady is called, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. The script is already loaded, loadScript bails out\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   */\n  const hasOnReadyEffectCalled = useRef(false)\n\n  useEffect(() => {\n    const cacheKey = id || src\n    if (!hasOnReadyEffectCalled.current) {\n      // Run onReady if script has loaded before but component is re-mounted\n      if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n        onReady()\n      }\n\n      hasOnReadyEffectCalled.current = true\n    }\n  }, [onReady, id, src])\n\n  const hasLoadScriptEffectCalled = useRef(false)\n\n  useEffect(() => {\n    if (!hasLoadScriptEffectCalled.current) {\n      if (strategy === 'afterInteractive') {\n        loadScript(props)\n      } else if (strategy === 'lazyOnload') {\n        loadLazyScript(props)\n      }\n\n      hasLoadScriptEffectCalled.current = true\n    }\n  }, [props, strategy])\n\n  if (strategy === 'beforeInteractive' || strategy === 'worker') {\n    if (updateScripts) {\n      scripts[strategy] = (scripts[strategy] || []).concat([\n        {\n          id,\n          src,\n          onLoad,\n          onReady,\n          onError,\n          ...restProps,\n          nonce,\n        },\n      ])\n      updateScripts(scripts)\n    } else if (getIsSsr && getIsSsr()) {\n      // Script has already loaded during SSR\n      LoadCache.add(id || src)\n    } else if (getIsSsr && !getIsSsr()) {\n      loadScript({\n        ...props,\n        nonce,\n      })\n    }\n  }\n\n  // For the app directory, we need React Float to preload these scripts.\n  if (appDir) {\n    // Injecting stylesheets here handles beforeInteractive and worker scripts correctly\n    // For other strategies injecting here ensures correct stylesheet order\n    // ReactDOM.preinit handles loading the styles in the correct order,\n    // also ensures the stylesheet is loaded only once and in a consistent manner\n    //\n    // Case 1: Styles for beforeInteractive/worker with appDir - handled here\n    // Case 2: Styles for beforeInteractive/worker with pages dir - Not handled yet\n    // Case 3: Styles for afterInteractive/lazyOnload with appDir - handled here\n    // Case 4: Styles for afterInteractive/lazyOnload with pages dir - handled in insertStylesheets function\n    if (stylesheets) {\n      stylesheets.forEach((styleSrc) => {\n        ReactDOM.preinit(styleSrc, { as: 'style' })\n      })\n    }\n\n    // Before interactive scripts need to be loaded by Next.js' runtime instead\n    // of native <script> tags, because they no longer have `defer`.\n    if (strategy === 'beforeInteractive') {\n      if (!src) {\n        // For inlined scripts, we put the content in `children`.\n        if (restProps.dangerouslySetInnerHTML) {\n          // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n          restProps.children = restProps.dangerouslySetInnerHTML\n            .__html as string\n          delete restProps.dangerouslySetInnerHTML\n        }\n\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                0,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      } else {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                src,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      }\n    } else if (strategy === 'afterInteractive') {\n      if (src) {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n      }\n    }\n  }\n\n  return null\n}\n\nObject.defineProperty(Script, '__nextScript', { value: true })\n\nexport default Script\n"],"names":["handleClientScriptLoad","initScriptLoader","ScriptCache","Map","LoadCache","Set","insertStylesheets","stylesheets","ReactDOM","preinit","forEach","stylesheet","as","window","head","document","link","createElement","type","rel","href","appendChild","loadScript","props","src","id","onLoad","onReady","dangerouslySetInnerHTML","children","strategy","onError","cacheKey","has","add","get","then","afterLoad","el","loadPromise","Promise","resolve","reject","addEventListener","e","call","catch","innerHTML","__html","textContent","Array","isArray","join","set","setAttributesFromProps","setAttribute","body","requestIdleCallback","loadLazyScript","readyState","addBeforeInteractiveToCache","scripts","querySelectorAll","script","getAttribute","scriptLoaderItems","Script","restProps","updateScripts","getIsSsr","appDir","nonce","useContext","HeadManagerContext","hasOnReadyEffectCalled","useRef","useEffect","current","hasLoadScriptEffectCalled","concat","styleSrc","JSON","stringify","preload","integrity","crossOrigin","Object","defineProperty","value"],"mappings":"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","ignoreList":[0],"debugId":null}}]
}