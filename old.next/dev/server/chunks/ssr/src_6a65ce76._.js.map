{
  "version": 3,
  "sources": [],
  "debugId": "5efe03ec-7a62-1709-8726-c0fe31dd799c",
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  asChild?: boolean;\n  variant?: \"default\" | \"secondary\" | \"ghost\" | \"outline\" | \"destructive\";\n  size?: \"default\" | \"sm\" | \"lg\" | \"icon\";\n}\n\nconst variantClasses: Record<NonNullable<ButtonProps[\"variant\"]>, string> = {\n  default:\n    \"bg-brand-green text-bg-primary hover:bg-brand-green/90 focus-visible:ring-brand-green/40\",\n  secondary:\n    \"bg-brand-blue/15 text-text-primary hover:bg-brand-blue/25 focus-visible:ring-brand-blue/40\",\n  ghost: \"bg-transparent text-text-primary hover:bg-white/5 focus-visible:ring-border-strong/40\",\n  outline:\n    \"border border-border-default bg-transparent text-text-primary hover:bg-white/5 focus-visible:ring-border-strong/40\",\n  destructive:\n    \"bg-brand-orange text-bg-primary hover:bg-brand-orange/90 focus-visible:ring-brand-orange/40\",\n};\n\nconst sizeClasses: Record<NonNullable<ButtonProps[\"size\"]>, string> = {\n  default: \"h-10 px-5 py-2 text-sm\",\n  sm: \"h-9 rounded-lg px-4 text-xs\",\n  lg: \"h-11 rounded-xl px-6 text-sm\",\n  icon: \"h-10 w-10\",\n};\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant = \"default\", size = \"default\", asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(\n          \"inline-flex items-center justify-center gap-2 rounded-xl font-sans font-semibold transition-all duration-200 ease-out focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-60\",\n          variantClasses[variant],\n          sizeClasses[size],\n          className,\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nButton.displayName = \"Button\";\n\nexport { Button };\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;;AAQA,MAAM,iBAAsE;IAC1E,SACE;IACF,WACE;IACF,OAAO;IACP,SACE;IACF,aACE;AACJ;AAEA,MAAM,cAAgE;IACpE,SAAS;IACT,IAAI;IACJ,IAAI;IACJ,MAAM;AACR;AAEA,MAAM,uBAAS,mNAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,OAAO,SAAS,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IAChF,MAAM,OAAO,UAAU,wKAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,sPACA,cAAc,CAAC,QAAQ,EACvB,WAAW,CAAC,KAAK,EACjB;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Card = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative overflow-hidden rounded-3xl border border-border-subtle bg-bg-secondary/95 p-6 shadow-lg backdrop-blur\",\n        className,\n      )}\n      {...props}\n    />\n  ),\n);\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"grid gap-1.5\", className)} {...props} />\n  ),\n);\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(\n  ({ className, ...props }, ref) => (\n    <h2\n      ref={ref}\n      className={cn(\"font-grotesk text-2xl font-semibold leading-snug text-text-primary\", className)}\n      {...props}\n    />\n  ),\n);\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p ref={ref} className={cn(\"text-sm text-text-secondary\", className)} {...props} />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"mt-6 grid gap-4\", className)} {...props} />\n  ),\n);\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"mt-6 flex items-center justify-between\", className)} {...props} />\n  ),\n);\nCardFooter.displayName = \"CardFooter\";\n\nexport { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,mNAAgB,CAC3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,mHACA;QAED,GAAG,KAAK;;;;;;AAIf,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,mNAAgB,CACjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,gBAAgB;QAAa,GAAG,KAAK;;;;;;AAGtE,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,mNAAgB,CAChC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,sEAAsE;QACnF,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,mNAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAE,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,+BAA+B;QAAa,GAAG,KAAK;;;;;;AAEjF,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,mNAAgB,CAClC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAGzE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,mNAAgB,CACjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,0CAA0C;QAAa,GAAG,KAAK;;;;;;AAGhG,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst badgeVariants = {\n  default: \"bg-brand-blue/20 text-brand-blue\",\n  success: \"bg-brand-green/20 text-brand-green\",\n  warning: \"bg-brand-yellow/20 text-brand-yellow\",\n  outline: \"border border-border-default text-text-primary\",\n};\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLSpanElement> {\n  variant?: keyof typeof badgeVariants;\n}\n\nconst Badge = React.forwardRef<HTMLSpanElement, BadgeProps>(\n  ({ className, variant = \"default\", ...props }, ref) => (\n    <span\n      ref={ref}\n      className={cn(\n        \"inline-flex items-center rounded-full px-3 py-1 text-xs font-semibold uppercase tracking-wide\",\n        badgeVariants[variant],\n        className,\n      )}\n      {...props}\n    />\n  ),\n);\nBadge.displayName = \"Badge\";\n\nexport { Badge };\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,gBAAgB;IACpB,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;AACX;AAMA,MAAM,sBAAQ,mNAAgB,CAC5B,CAAC,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7C,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,iGACA,aAAa,CAAC,QAAQ,EACtB;QAED,GAAG,KAAK;;;;;;AAIf,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///D:/github2/interview-prep-app/src/app/not-found.tsx"],"sourcesContent":["import Link from \"next/link\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center gap-8 bg-[radial-gradient(circle_at_top,var(--color-blue)/12,transparent_55%),var(--bg-primary)] px-6 py-16 text-text-primary\">\n      <Card className=\"w-full max-w-xl border-border-subtle/60 bg-bg-secondary/95 p-8 shadow-2xl shadow-black/40 backdrop-blur\">\n        <CardHeader className=\"space-y-4 text-center\">\n          <div className=\"flex justify-center\">\n            <Badge variant=\"outline\" className=\"px-4 py-1 text-sm uppercase tracking-[0.3em] text-brand-blue\">\n              Erro 404\n            </Badge>\n          </div>\n          <CardTitle className=\"text-3xl text-text-primary\">Conteúdo não encontrado</CardTitle>\n          <CardDescription className=\"text-base text-text-secondary\">\n            O recurso que você procurava não está pronto ainda. Volte para o dashboard ou acompanhe o protótipo visual\n            enquanto finalizamos esta rota.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"flex flex-col gap-3\">\n          <Button asChild>\n            <Link href=\"/\">Voltar para o dashboard</Link>\n          </Button>\n          <Button variant=\"ghost\" asChild>\n            <Link href=\"/design-test\">Abrir protótipo de layout</Link>\n          </Button>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,wIAAI;YAAC,WAAU;;8BACd,8OAAC,8IAAU;oBAAC,WAAU;;sCACpB,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,0IAAK;gCAAC,SAAQ;gCAAU,WAAU;0CAA+D;;;;;;;;;;;sCAIpG,8OAAC,6IAAS;4BAAC,WAAU;sCAA6B;;;;;;sCAClD,8OAAC,mJAAe;4BAAC,WAAU;sCAAgC;;;;;;;;;;;;8BAK7D,8OAAC,+IAAW;oBAAC,WAAU;;sCACrB,8OAAC,4IAAM;4BAAC,OAAO;sCACb,cAAA,8OAAC,0LAAI;gCAAC,MAAK;0CAAI;;;;;;;;;;;sCAEjB,8OAAC,4IAAM;4BAAC,SAAQ;4BAAQ,OAAO;sCAC7B,cAAA,8OAAC,0LAAI;gCAAC,MAAK;0CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMtC","debugId":null}}]
}