{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "priority": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [
      {
        "source": "/monitoring(/?)",
        "has": [
          {
            "type": "query",
            "key": "o",
            "value": "(?<orgid>\\d*)"
          },
          {
            "type": "query",
            "key": "p",
            "value": "(?<projectid>\\d*)"
          },
          {
            "type": "query",
            "key": "r",
            "value": "(?<region>[a-z]{2})"
          }
        ],
        "destination": "https://o:orgid.ingest.:region.sentry.io/api/:projectid/envelope/?hsts=0",
        "regex": "^/monitoring(/?)(?:/)?$"
      },
      {
        "source": "/monitoring(/?)",
        "has": [
          {
            "type": "query",
            "key": "o",
            "value": "(?<orgid>\\d*)"
          },
          {
            "type": "query",
            "key": "p",
            "value": "(?<projectid>\\d*)"
          }
        ],
        "destination": "https://o:orgid.ingest.sentry.io/api/:projectid/envelope/?hsts=0",
        "regex": "^/monitoring(/?)(?:/)?$"
      }
    ],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/trpc/[trpc]",
      "regex": "^/api/trpc/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtrpc": "nxtPtrpc"
      },
      "namedRegex": "^/api/trpc/(?<nxtPtrpc>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_global-error",
      "regex": "^/_global\\-error(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_global\\-error(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/api/sentry-example-api",
      "regex": "^/api/sentry\\-example\\-api(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/api/sentry\\-example\\-api(?:/)?$"
    },
    {
      "page": "/design-test",
      "regex": "^/design\\-test(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/design\\-test(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/sentry-example-page",
      "regex": "^/sentry\\-example\\-page(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sentry\\-example\\-page(?:/)?$"
    },
    {
      "page": "/test",
      "regex": "^/test(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments",
    "clientParamParsing": false,
    "dynamicRSCPrerender": false
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}