{
  "version": 3,
  "sources": [],
  "debugId": "7edec900-2172-c47c-203c-55845ae7f179",
  "sections": [
    {"offset": {"line": 1, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/space_grotesk_188ec921.module.css [app-rsc] (css module)","turbopack:///[next]/internal/font/google/dm_sans_9c2cdb89.module.css [app-rsc] (css module)","turbopack:///[next]/internal/font/google/inter_1043632.module.css [app-rsc] (css module)","turbopack:///[next]/internal/font/google/jetbrains_mono_f384371a.module.css [app-rsc] (css module)","turbopack:///[project]/src/lib/trpc/Provider.tsx/__nextjs-internal-proxy.mjs","turbopack:///[project]/node_modules/next/dist/client/script.js/__nextjs-internal-proxy.cjs","turbopack:///[project]/node_modules/next/src/client/script.tsx","turbopack:///[project]/node_modules/next/script.js","turbopack:///[next]/internal/font/google/space_grotesk_188ec921.js","turbopack:///[next]/internal/font/google/dm_sans_9c2cdb89.js","turbopack:///[next]/internal/font/google/inter_1043632.js","turbopack:///[next]/internal/font/google/jetbrains_mono_f384371a.js","turbopack:///[project]/src/app/layout.tsx"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"space_grotesk_188ec921-module__vWqBPa__className\",\n  \"variable\": \"space_grotesk_188ec921-module__vWqBPa__variable\",\n});\n","__turbopack_context__.v({\n  \"className\": \"dm_sans_9c2cdb89-module__YswyhW__className\",\n  \"variable\": \"dm_sans_9c2cdb89-module__YswyhW__variable\",\n});\n","__turbopack_context__.v({\n  \"className\": \"inter_1043632-module__-XRQOW__className\",\n  \"variable\": \"inter_1043632-module__-XRQOW__variable\",\n});\n","__turbopack_context__.v({\n  \"className\": \"jetbrains_mono_f384371a-module__XBgw1G__className\",\n  \"variable\": \"jetbrains_mono_f384371a-module__XBgw1G__variable\",\n});\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const TRPCProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call TRPCProvider() from the server but TRPCProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/lib/trpc/Provider.tsx\",\n    \"TRPCProvider\",\n);\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nconst { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/script.js\"));\n","'use client'\n\nimport ReactDOM from 'react-dom'\nimport React, { useEffect, useContext, useRef, type JSX } from 'react'\nimport type { ScriptHTMLAttributes } from 'react'\nimport { HeadManagerContext } from '../shared/lib/head-manager-context.shared-runtime'\nimport { setAttributesFromProps } from './set-attributes-from-props'\nimport { requestIdleCallback } from './request-idle-callback'\n\nconst ScriptCache = new Map()\nconst LoadCache = new Set()\n\nexport interface ScriptProps extends ScriptHTMLAttributes<HTMLScriptElement> {\n  strategy?: 'afterInteractive' | 'lazyOnload' | 'beforeInteractive' | 'worker'\n  id?: string\n  onLoad?: (e: any) => void\n  onReady?: () => void | null\n  onError?: (e: any) => void\n  children?: React.ReactNode\n  stylesheets?: string[]\n}\n\n/**\n * @deprecated Use `ScriptProps` instead.\n */\nexport type Props = ScriptProps\n\nconst insertStylesheets = (stylesheets: string[]) => {\n  // Case 1: Styles for afterInteractive/lazyOnload with appDir injected via handleClientScriptLoad\n  //\n  // Using ReactDOM.preinit to feature detect appDir and inject styles\n  // Stylesheets might have already been loaded if initialized with Script component\n  // Re-inject styles here to handle scripts loaded via handleClientScriptLoad\n  // ReactDOM.preinit handles dedup and ensures the styles are loaded only once\n  if (ReactDOM.preinit) {\n    stylesheets.forEach((stylesheet: string) => {\n      ReactDOM.preinit(stylesheet, { as: 'style' })\n    })\n\n    return\n  }\n\n  // Case 2: Styles for afterInteractive/lazyOnload with pages injected via handleClientScriptLoad\n  //\n  // We use this function to load styles when appdir is not detected\n  // TODO: Use React float APIs to load styles once available for pages dir\n  if (typeof window !== 'undefined') {\n    let head = document.head\n    stylesheets.forEach((stylesheet: string) => {\n      let link = document.createElement('link')\n\n      link.type = 'text/css'\n      link.rel = 'stylesheet'\n      link.href = stylesheet\n\n      head.appendChild(link)\n    })\n  }\n}\n\nconst loadScript = (props: ScriptProps): void => {\n  const {\n    src,\n    id,\n    onLoad = () => {},\n    onReady = null,\n    dangerouslySetInnerHTML,\n    children = '',\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n  } = props\n\n  const cacheKey = id || src\n\n  // Script has already loaded\n  if (cacheKey && LoadCache.has(cacheKey)) {\n    return\n  }\n\n  // Contents of this script are already loading/loaded\n  if (ScriptCache.has(src)) {\n    LoadCache.add(cacheKey)\n    // It is possible that multiple `next/script` components all have same \"src\", but has different \"onLoad\"\n    // This is to make sure the same remote script will only load once, but \"onLoad\" are executed in order\n    ScriptCache.get(src).then(onLoad, onError)\n    return\n  }\n\n  /** Execute after the script first loaded */\n  const afterLoad = () => {\n    // Run onReady for the first time after load event\n    if (onReady) {\n      onReady()\n    }\n    // add cacheKey to LoadCache when load successfully\n    LoadCache.add(cacheKey)\n  }\n\n  const el = document.createElement('script')\n\n  const loadPromise = new Promise<void>((resolve, reject) => {\n    el.addEventListener('load', function (e) {\n      resolve()\n      if (onLoad) {\n        onLoad.call(this, e)\n      }\n      afterLoad()\n    })\n    el.addEventListener('error', function (e) {\n      reject(e)\n    })\n  }).catch(function (e) {\n    if (onError) {\n      onError(e)\n    }\n  })\n\n  if (dangerouslySetInnerHTML) {\n    // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n    el.innerHTML = (dangerouslySetInnerHTML.__html as string) || ''\n\n    afterLoad()\n  } else if (children) {\n    el.textContent =\n      typeof children === 'string'\n        ? children\n        : Array.isArray(children)\n          ? children.join('')\n          : ''\n\n    afterLoad()\n  } else if (src) {\n    el.src = src\n    // do not add cacheKey into LoadCache for remote script here\n    // cacheKey will be added to LoadCache when it is actually loaded (see loadPromise above)\n\n    ScriptCache.set(src, loadPromise)\n  }\n\n  setAttributesFromProps(el, props)\n\n  if (strategy === 'worker') {\n    el.setAttribute('type', 'text/partytown')\n  }\n\n  el.setAttribute('data-nscript', strategy)\n\n  // Load styles associated with this script\n  if (stylesheets) {\n    insertStylesheets(stylesheets)\n  }\n\n  document.body.appendChild(el)\n}\n\nexport function handleClientScriptLoad(props: ScriptProps) {\n  const { strategy = 'afterInteractive' } = props\n  if (strategy === 'lazyOnload') {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  } else {\n    loadScript(props)\n  }\n}\n\nfunction loadLazyScript(props: ScriptProps) {\n  if (document.readyState === 'complete') {\n    requestIdleCallback(() => loadScript(props))\n  } else {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  }\n}\n\nfunction addBeforeInteractiveToCache() {\n  const scripts = [\n    ...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'),\n    ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]'),\n  ]\n  scripts.forEach((script) => {\n    const cacheKey = script.id || script.getAttribute('src')\n    LoadCache.add(cacheKey)\n  })\n}\n\nexport function initScriptLoader(scriptLoaderItems: ScriptProps[]) {\n  scriptLoaderItems.forEach(handleClientScriptLoad)\n  addBeforeInteractiveToCache()\n}\n\n/**\n * Load a third-party scripts in an optimized way.\n *\n * Read more: [Next.js Docs: `next/script`](https://nextjs.org/docs/app/api-reference/components/script)\n */\nfunction Script(props: ScriptProps): JSX.Element | null {\n  const {\n    id,\n    src = '',\n    onLoad = () => {},\n    onReady = null,\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n    ...restProps\n  } = props\n\n  // Context is available only during SSR\n  let { updateScripts, scripts, getIsSsr, appDir, nonce } =\n    useContext(HeadManagerContext)\n\n  // if a nonce is explicitly passed to the script tag, favor that over the automatic handling\n  nonce = restProps.nonce || nonce\n\n  /**\n   * - First mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script hasn't loaded yet (not in LoadCache)\n   *      onReady is skipped, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. hasLoadScriptEffectCalled.current is false, loadScript executes\n   *      Once the script is loaded, the onLoad and onReady will be called by then\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   *\n   * - Second mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script has already loaded (found in LoadCache)\n   *      onReady is called, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. The script is already loaded, loadScript bails out\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   */\n  const hasOnReadyEffectCalled = useRef(false)\n\n  useEffect(() => {\n    const cacheKey = id || src\n    if (!hasOnReadyEffectCalled.current) {\n      // Run onReady if script has loaded before but component is re-mounted\n      if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n        onReady()\n      }\n\n      hasOnReadyEffectCalled.current = true\n    }\n  }, [onReady, id, src])\n\n  const hasLoadScriptEffectCalled = useRef(false)\n\n  useEffect(() => {\n    if (!hasLoadScriptEffectCalled.current) {\n      if (strategy === 'afterInteractive') {\n        loadScript(props)\n      } else if (strategy === 'lazyOnload') {\n        loadLazyScript(props)\n      }\n\n      hasLoadScriptEffectCalled.current = true\n    }\n  }, [props, strategy])\n\n  if (strategy === 'beforeInteractive' || strategy === 'worker') {\n    if (updateScripts) {\n      scripts[strategy] = (scripts[strategy] || []).concat([\n        {\n          id,\n          src,\n          onLoad,\n          onReady,\n          onError,\n          ...restProps,\n          nonce,\n        },\n      ])\n      updateScripts(scripts)\n    } else if (getIsSsr && getIsSsr()) {\n      // Script has already loaded during SSR\n      LoadCache.add(id || src)\n    } else if (getIsSsr && !getIsSsr()) {\n      loadScript({\n        ...props,\n        nonce,\n      })\n    }\n  }\n\n  // For the app directory, we need React Float to preload these scripts.\n  if (appDir) {\n    // Injecting stylesheets here handles beforeInteractive and worker scripts correctly\n    // For other strategies injecting here ensures correct stylesheet order\n    // ReactDOM.preinit handles loading the styles in the correct order,\n    // also ensures the stylesheet is loaded only once and in a consistent manner\n    //\n    // Case 1: Styles for beforeInteractive/worker with appDir - handled here\n    // Case 2: Styles for beforeInteractive/worker with pages dir - Not handled yet\n    // Case 3: Styles for afterInteractive/lazyOnload with appDir - handled here\n    // Case 4: Styles for afterInteractive/lazyOnload with pages dir - handled in insertStylesheets function\n    if (stylesheets) {\n      stylesheets.forEach((styleSrc) => {\n        ReactDOM.preinit(styleSrc, { as: 'style' })\n      })\n    }\n\n    // Before interactive scripts need to be loaded by Next.js' runtime instead\n    // of native <script> tags, because they no longer have `defer`.\n    if (strategy === 'beforeInteractive') {\n      if (!src) {\n        // For inlined scripts, we put the content in `children`.\n        if (restProps.dangerouslySetInnerHTML) {\n          // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n          restProps.children = restProps.dangerouslySetInnerHTML\n            .__html as string\n          delete restProps.dangerouslySetInnerHTML\n        }\n\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                0,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      } else {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                src,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      }\n    } else if (strategy === 'afterInteractive') {\n      if (src) {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n      }\n    }\n  }\n\n  return null\n}\n\nObject.defineProperty(Script, '__nextScript', { value: true })\n\nexport default Script\n","module.exports = require('./dist/client/script')\n","import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Space_Grotesk%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22variable%22:%22--font-grotesk%22,%22weight%22:[%22300%22,%22400%22,%22500%22,%22600%22,%22700%22],%22display%22:%22swap%22,%22preload%22:true}],%22variableName%22:%22spaceGrotesk%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Space Grotesk', 'Space Grotesk Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n","import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22DM_Sans%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22variable%22:%22--font-sans%22,%22weight%22:[%22300%22,%22400%22,%22500%22,%22600%22,%22700%22],%22display%22:%22swap%22,%22preload%22:true}],%22variableName%22:%22dmSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'DM Sans', 'DM Sans Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n","import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22variable%22:%22--font-body%22,%22weight%22:[%22300%22,%22400%22,%22500%22,%22600%22,%22700%22],%22display%22:%22swap%22,%22preload%22:true}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n","import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22JetBrains_Mono%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22variable%22:%22--font-mono%22,%22weight%22:[%22300%22,%22400%22,%22500%22,%22600%22,%22700%22],%22display%22:%22swap%22,%22preload%22:true}],%22variableName%22:%22jetBrainsMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'JetBrains Mono', 'JetBrains Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n","// src/app/layout.tsx\r\nimport type { Metadata, Viewport } from \"next\";\r\nimport {\r\n  DM_Sans as DMSans,\r\n  Inter,\r\n  JetBrains_Mono as JetBrainsMono,\r\n  Space_Grotesk as SpaceGrotesk,\r\n} from \"next/font/google\";\r\nimport \"./globals.css\";\r\nimport { TRPCProvider } from \"@/lib/trpc/Provider\";\r\nimport Script from \"next/script\";\r\n\r\n// Font configurations otimizadas com variáveis CSS melhoradas\r\nconst spaceGrotesk = SpaceGrotesk({\r\n  subsets: [\"latin\"],\r\n  variable: \"--font-grotesk\",\r\n  weight: [\"300\", \"400\", \"500\", \"600\", \"700\"],\r\n  display: \"swap\",\r\n  preload: true,\r\n});\r\n\r\nconst dmSans = DMSans({\r\n  subsets: [\"latin\"],\r\n  variable: \"--font-sans\",\r\n  weight: [\"300\", \"400\", \"500\", \"600\", \"700\"],\r\n  display: \"swap\",\r\n  preload: true,\r\n});\r\n\r\nconst inter = Inter({\r\n  subsets: [\"latin\"],\r\n  variable: \"--font-body\",\r\n  weight: [\"300\", \"400\", \"500\", \"600\", \"700\"],\r\n  display: \"swap\",\r\n  preload: true,\r\n});\r\n\r\nconst jetBrainsMono = JetBrainsMono({\r\n  subsets: [\"latin\"],\r\n  variable: \"--font-mono\",\r\n  weight: [\"300\", \"400\", \"500\", \"600\", \"700\"],\r\n  display: \"swap\",\r\n  preload: true,\r\n});\r\n\r\nexport const metadata: Metadata = {\r\n  title: {\r\n    default: \"Interview Prep App - Prepare-se para entrevistas com IA\",\r\n    template: \"%s | Interview Prep App\"\r\n  },\r\n  description: \"Plataforma de preparação para entrevistas com IA. Pratique respostas, analise suas competências e melhore seu desempenho em entrevistas técnicas e comportamentais.\",\r\n  keywords: [\r\n    \"entrevista\",\r\n    \"preparação\",\r\n    \"IA\",\r\n    \"entrevista técnica\",\r\n    \"carreira\",\r\n    \"desenvolvimento\",\r\n    \"perguntas entrevista\",\r\n    \"prática entrevista\",\r\n    \"entrevista comportamental\",\r\n    \"entrevista frontend\",\r\n    \"entrevista backend\",\r\n    \"engenharia software\"\r\n  ],\r\n  authors: [{ name: \"Interview Prep Team\", url: \"https://interview-prep.app\" }],\r\n  creator: \"Interview Prep App\",\r\n  publisher: \"Interview Prep App\",\r\n  formatDetection: {\r\n    email: false,\r\n    address: false,\r\n    telephone: false,\r\n  },\r\n  metadataBase: new URL(\"https://interview-prep.app\"),\r\n  alternates: {\r\n    canonical: \"/\",\r\n  },\r\n  openGraph: {\r\n    type: \"website\",\r\n    locale: \"pt_BR\",\r\n    url: \"https://interview-prep.app\",\r\n    title: \"Interview Prep App - Prepare-se para entrevistas com IA\",\r\n    description: \"Plataforma de preparação para entrevistas com IA. Pratique respostas, analise suas competências e melhore seu desempenho.\",\r\n    siteName: \"Interview Prep App\",\r\n    images: [\r\n      {\r\n        url: \"/og-image.png\",\r\n        width: 1200,\r\n        height: 630,\r\n        alt: \"Interview Prep App - Prepare-se para entrevistas com IA\",\r\n      },\r\n      {\r\n        url: \"/og-image-square.png\",\r\n        width: 1200,\r\n        height: 1200,\r\n        alt: \"Interview Prep Logo\",\r\n      },\r\n    ],\r\n  },\r\n  twitter: {\r\n    card: \"summary_large_image\",\r\n    title: \"Interview Prep App - Prepare-se para entrevistas com IA\",\r\n    description: \"Plataforma de preparação para entrevistas com IA. Pratique respostas, analise suas competências e melhore seu desempenho.\",\r\n    images: [\"/og-image.png\"],\r\n    creator: \"@interviewprep\",\r\n    site: \"@interviewprep\",\r\n  },\r\n  robots: {\r\n    index: true,\r\n    follow: true,\r\n    googleBot: {\r\n      index: true,\r\n      follow: true,\r\n      \"max-video-preview\": -1,\r\n      \"max-image-preview\": \"large\",\r\n      \"max-snippet\": -1,\r\n    },\r\n  },\r\n  icons: {\r\n    icon: [\r\n      { url: \"/favicon-16x16.png\", sizes: \"16x16\", type: \"image/png\" },\r\n      { url: \"/favicon-32x32.png\", sizes: \"32x32\", type: \"image/png\" },\r\n      { url: \"/favicon-48x48.png\", sizes: \"48x48\", type: \"image/png\" },\r\n    ],\r\n    shortcut: \"/favicon-16x16.png\",\r\n    apple: [\r\n      { url: \"/apple-touch-icon.png\", sizes: \"180x180\", type: \"image/png\" },\r\n      { url: \"/apple-touch-icon-precomposed.png\", sizes: \"180x180\", type: \"image/png\" },\r\n    ],\r\n    other: [\r\n      {\r\n        rel: \"mask-icon\",\r\n        url: \"/safari-pinned-tab.svg\",\r\n        color: \"#059669\",\r\n      },\r\n    ],\r\n  },\r\n  manifest: \"/site.webmanifest\",\r\n  other: {\r\n    \"msapplication-TileColor\": \"#059669\",\r\n    \"msapplication-config\": \"/browserconfig.xml\",\r\n    \"theme-color\": \"#059669\",\r\n    \"apple-mobile-web-app-capable\": \"yes\",\r\n    \"apple-mobile-web-app-status-bar-style\": \"default\",\r\n    \"apple-mobile-web-app-title\": \"Interview Prep\",\r\n  },\r\n};\r\n\r\nexport const viewport: Viewport = {\r\n  width: \"device-width\",\r\n  initialScale: 1,\r\n  maximumScale: 5,\r\n  userScalable: true,\r\n  themeColor: [\r\n    { media: \"(prefers-color-scheme: light)\", color: \"#ffffff\" },\r\n    { media: \"(prefers-color-scheme: dark)\", color: \"#0f172a\" },\r\n  ],\r\n  colorScheme: \"light dark\",\r\n};\r\n\r\nexport default function RootLayout({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  return (\r\n    <html lang=\"pt-BR\" className=\"scroll-smooth antialiased\">\r\n      <head>\r\n        {/* Performance optimizations */}\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"\" />\r\n        \r\n        {/* DNS prefetching for external resources */}\r\n        <link rel=\"dns-prefetch\" href=\"https://api.interview-prep.app\" />\r\n        <link rel=\"dns-prefetch\" href=\"https://fonts.gstatic.com\" />\r\n        \r\n        {/* Preconnect to critical resources */}\r\n        <link rel=\"preconnect\" href=\"https://images.unsplash.com\" />\r\n        \r\n        {/* Resource hints for better performance */}\r\n        {/* Audio preload removed - file will be lazy loaded when needed */}\r\n        \r\n        {/* Theme detection with enhanced CSS variables */}\r\n        <Script id=\"theme-detector\" strategy=\"beforeInteractive\">\r\n          {`\r\n            try {\r\n              const theme = localStorage.getItem('theme') || \r\n                (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');\r\n              document.documentElement.classList.toggle('dark', theme === 'dark');\r\n            } catch (e) {\r\n              console.warn('Theme initialization failed:', e);\r\n            }\r\n          `}\r\n        </Script>\r\n        \r\n        {/* Enhanced CSS Variables System */}\r\n        <style>\r\n          {`\r\n            :root {\r\n              /* Brand Colors - Enhanced with better contrast ratios and accessibility */\r\n              --color-brand-green: #10b981;\r\n              --color-brand-green-light: #34d399;\r\n              --color-brand-green-dark: #059669;\r\n              --color-brand-green-contrast: #a7f3d0;\r\n              --color-brand-blue: #3b82f6;\r\n              --color-brand-blue-light: #60a5fa;\r\n              --color-brand-blue-dark: #2563eb;\r\n              --color-brand-blue-contrast: #93c5fd;\r\n              --color-brand-lime: #84cc16;\r\n              --color-brand-yellow: #facc15;\r\n              --color-brand-yellow-contrast: #fde047;\r\n              --color-brand-red: #ef4444;\r\n              --color-brand-red-contrast: #fca5a5;\r\n              --color-brand-orange: #fb923c;\r\n              --color-brand-orange-contrast: #fed7aa;\r\n              \r\n              /* Background Colors - Improved depth and glass morphism */\r\n              --color-bg-primary: #ffffff;\r\n              --color-bg-secondary: #f8fafc;\r\n              --color-bg-tertiary: #f1f5f9;\r\n              --color-bg-glass: rgba(255, 255, 255, 0.8);\r\n              --color-bg-glass-dark: rgba(15, 23, 42, 0.8);\r\n              --color-bg-overlay: rgba(0, 0, 0, 0.5);\r\n              \r\n              /* Text Colors - Enhanced readability and WCAG compliance */\r\n              --color-text-primary: #0f172a;\r\n              --color-text-secondary: #475569;\r\n              --color-text-muted: #64748b;\r\n              --color-text-accent: #059669;\r\n              --color-text-inverse: #ffffff;\r\n              \r\n              /* Border Colors - Subtle but visible with better contrast */\r\n              --color-border-subtle: #e2e8f0;\r\n              --color-border-default: #cbd5e1;\r\n              --color-border-strong: #94a3b8;\r\n              --color-border-accent: #10b981;\r\n              \r\n              /* Effect Colors - Enhanced shadows and effects */\r\n              --color-shadow-soft: rgba(0, 0, 0, 0.05);\r\n              --color-shadow-medium: rgba(0, 0, 0, 0.1);\r\n              --color-shadow-strong: rgba(0, 0, 0, 0.15);\r\n              --color-shadow-glow: rgba(16, 185, 129, 0.3);\r\n              \r\n              /* Interactive States - Comprehensive hover and focus states */\r\n              --color-focus-ring: #10b981;\r\n              --color-focus-ring-opacity: 0.4;\r\n              --color-hover-overlay: rgba(16, 185, 129, 0.1);\r\n              --color-active-overlay: rgba(16, 185, 129, 0.2);\r\n              --color-disabled: #94a3b8;\r\n              \r\n              /* Spring Animation Variables */\r\n              --spring-tension: 300;\r\n              --spring-friction: 25;\r\n              --spring-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);\r\n              \r\n              /* Spacing Scale - Consistent rhythm */\r\n              --space-px: 1px;\r\n              --space-0: 0;\r\n              --space-1: 0.25rem;\r\n              --space-2: 0.5rem;\r\n              --space-3: 0.75rem;\r\n              --space-4: 1rem;\r\n              --space-5: 1.25rem;\r\n              --space-6: 1.5rem;\r\n              --space-8: 2rem;\r\n              --space-10: 2.5rem;\r\n              --space-12: 3rem;\r\n              --space-16: 4rem;\r\n              --space-20: 5rem;\r\n              --space-24: 6rem;\r\n              \r\n              /* Typography Scale - Harmonious proportions */\r\n              --text-xs: 0.75rem;\r\n              --text-sm: 0.875rem;\r\n              --text-base: 1rem;\r\n              --text-lg: 1.125rem;\r\n              --text-xl: 1.25rem;\r\n              --text-2xl: 1.5rem;\r\n              --text-3xl: 1.875rem;\r\n              --text-4xl: 2.25rem;\r\n              --text-5xl: 3rem;\r\n              \r\n              /* Font Weights - Complete scale */\r\n              --font-weight-light: 300;\r\n              --font-weight-normal: 400;\r\n              --font-weight-medium: 500;\r\n              --font-weight-semibold: 600;\r\n              --font-weight-bold: 700;\r\n              \r\n              /* Line Heights - Optimal readability */\r\n              --line-height-tight: 1.25;\r\n              --line-height-snug: 1.375;\r\n              --line-height-normal: 1.5;\r\n              --line-height-relaxed: 1.625;\r\n              --line-height-loose: 2;\r\n              \r\n              /* Border Radius - Consistent shapes */\r\n              --radius-none: 0;\r\n              --radius-sm: 0.25rem;\r\n              --radius-md: 0.375rem;\r\n              --radius-lg: 0.5rem;\r\n              --radius-xl: 0.75rem;\r\n              --radius-2xl: 1rem;\r\n              --radius-3xl: 1.5rem;\r\n              --radius-full: 9999px;\r\n              \r\n              /* Transitions - Smooth interactions with spring physics */\r\n              --transition-fast: 150ms ease-out;\r\n              --transition-normal: 250ms ease-out;\r\n              --transition-slow: 350ms ease-out;\r\n              --transition-bounce: 350ms var(--spring-bounce);\r\n              --transition-spring: 500ms var(--spring-bounce);\r\n              \r\n              /* Z-Index Scale - Layered architecture */\r\n              --z-dropdown: 1000;\r\n              --z-sticky: 1020;\r\n              --z-fixed: 1030;\r\n              --z-modal-backdrop: 1040;\r\n              --z-modal: 1050;\r\n              --z-popover: 1060;\r\n              --z-tooltip: 1070;\r\n              --z-toast: 1080;\r\n              \r\n              /* Screen Reader Support */\r\n              --sr-only-size: 1px;\r\n              --sr-only-position: absolute;\r\n              --sr-only-clip: rect(0, 0, 0, 0);\r\n              --sr-only-clip-path: inset(50%);\r\n            }\r\n            \r\n            .dark {\r\n              --color-bg-primary: #0f172a;\r\n              --color-bg-secondary: #1e293b;\r\n              --color-bg-tertiary: #334155;\r\n              --color-bg-glass: rgba(30, 41, 59, 0.8);\r\n              --color-bg-glass-dark: rgba(15, 23, 42, 0.9);\r\n              --color-bg-overlay: rgba(0, 0, 0, 0.7);\r\n              --color-text-primary: #f8fafc;\r\n              --color-text-secondary: #cbd5e1;\r\n              --color-text-muted: #94a3b8;\r\n              --color-border-subtle: #475569;\r\n              --color-border-default: #64748b;\r\n              --color-border-strong: #94a3b8;\r\n              --color-shadow-soft: rgba(0, 0, 0, 0.1);\r\n              --color-shadow-medium: rgba(0, 0, 0, 0.2);\r\n              --color-shadow-strong: rgba(0, 0, 0, 0.3);\r\n              --color-shadow-glow: rgba(16, 185, 129, 0.4);\r\n            }\r\n            \r\n            /* Smooth scrolling with performance optimization */\r\n            html {\r\n              scroll-behavior: smooth;\r\n              scroll-padding-top: var(--space-20);\r\n            }\r\n            \r\n            /* Enhanced focus styles for accessibility with better contrast */\r\n            *:focus-visible {\r\n              outline: 2px solid var(--color-focus-ring);\r\n              outline-offset: 2px;\r\n              border-radius: var(--radius-md);\r\n            }\r\n            \r\n            /* Focus within for complex components */\r\n            *:focus-within {\r\n              outline: 1px solid var(--color-focus-ring);\r\n              outline-offset: 1px;\r\n            }\r\n            \r\n            /* Selection styling with brand colors */\r\n            ::selection {\r\n              background-color: var(--color-brand-green);\r\n              color: var(--color-text-inverse);\r\n            }\r\n            \r\n            ::-moz-selection {\r\n              background-color: var(--color-brand-green);\r\n              color: var(--color-text-inverse);\r\n            }\r\n            \r\n            /* Progressive enhancement for modern browsers */\r\n            @supports (backdrop-filter: blur(10px)) {\r\n              .glass-morphism {\r\n                backdrop-filter: blur(10px) saturate(180%);\r\n                background-color: var(--color-bg-glass);\r\n              }\r\n            }\r\n            \r\n            @supports (backdrop-filter: blur(20px)) {\r\n              .glass-morphism-strong {\r\n                backdrop-filter: blur(20px) saturate(200%);\r\n                background-color: var(--color-bg-glass-dark);\r\n              }\r\n            }\r\n            \r\n            /* Enhanced spring animations */\r\n            @keyframes spring-scale {\r\n              0% { transform: scale(1); }\r\n              50% { transform: scale(1.05); }\r\n              100% { transform: scale(1); }\r\n            }\r\n            \r\n            @keyframes spring-bounce {\r\n              0%, 100% { \r\n                transform: translateY(0);\r\n                animation-timing-function: cubic-bezier(0.8, 0, 1, 1);\r\n              }\r\n              50% { \r\n                transform: translateY(-10px);\r\n                animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\r\n              }\r\n            }\r\n            \r\n            @keyframes spring-glow {\r\n              0%, 100% { \r\n                box-shadow: 0 0 5px var(--color-shadow-glow);\r\n              }\r\n              50% { \r\n                box-shadow: 0 0 20px var(--color-shadow-glow);\r\n              }\r\n            }\r\n            \r\n            /* Reduced motion support with performance optimization */\r\n            @media (prefers-reduced-motion: reduce) {\r\n              *,\r\n              *::before,\r\n              *::after {\r\n                animation-duration: 0.01ms !important;\r\n                animation-iteration-count: 1 !important;\r\n                transition-duration: 0.01ms !important;\r\n                scroll-behavior: auto !important;\r\n              }\r\n            }\r\n            \r\n            /* High contrast mode support */\r\n            @media (prefers-contrast: high) {\r\n              :root {\r\n                --color-border-subtle: #000000;\r\n                --color-border-default: #000000;\r\n                --color-border-strong: #000000;\r\n                --color-text-muted: #000000;\r\n              }\r\n              \r\n              .dark {\r\n                --color-border-subtle: #ffffff;\r\n                --color-border-default: #ffffff;\r\n                --color-border-strong: #ffffff;\r\n                --color-text-muted: #ffffff;\r\n              }\r\n            }\r\n            \r\n            /* Screen reader only utility */\r\n            .sr-only {\r\n              position: var(--sr-only-position);\r\n              width: var(--sr-only-size);\r\n              height: var(--sr-only-size);\r\n              padding: 0;\r\n              margin: -1px;\r\n              overflow: hidden;\r\n              clip: var(--sr-only-clip);\r\n              clip-path: var(--sr-only-clip-path);\r\n              white-space: nowrap;\r\n              border: 0;\r\n            }\r\n            \r\n            .sr-only:focus {\r\n              position: static;\r\n              width: auto;\r\n              height: auto;\r\n              padding: inherit;\r\n              margin: inherit;\r\n              overflow: visible;\r\n              clip: auto;\r\n              clip-path: auto;\r\n              white-space: normal;\r\n            }\r\n            \r\n            /* Skip links for keyboard navigation */\r\n            .skip-link {\r\n              position: absolute;\r\n              top: -40px;\r\n              left: 6px;\r\n              z-index: var(--z-tooltip);\r\n              padding: var(--space-2) var(--space-4);\r\n              background-color: var(--color-brand-green);\r\n              color: var(--color-text-inverse);\r\n              text-decoration: none;\r\n              border-radius: var(--radius-lg);\r\n              transition: top var(--transition-fast);\r\n            }\r\n            \r\n            .skip-link:focus {\r\n              top: 6px;\r\n            }\r\n            \r\n            /* Performance optimizations */\r\n            .will-change-transform {\r\n              will-change: transform;\r\n            }\r\n            \r\n            .will-change-opacity {\r\n              will-change: opacity;\r\n            }\r\n            \r\n            /* Hardware acceleration for smooth animations */\r\n            .hardware-accelerated {\r\n              transform: translateZ(0);\r\n              backface-visibility: hidden;\r\n              perspective: 1000px;\r\n            }\r\n            \r\n            /* Enhanced loading states */\r\n            .loading-skeleton {\r\n              background: linear-gradient(\r\n                90deg,\r\n                var(--color-bg-tertiary) 25%,\r\n                var(--color-border-subtle) 50%,\r\n                var(--color-bg-tertiary) 75%\r\n              );\r\n              background-size: 200% 100%;\r\n              animation: loading-shimmer 2s infinite;\r\n            }\r\n            \r\n            @keyframes loading-shimmer {\r\n              0% {\r\n                background-position: -200% 0;\r\n              }\r\n              100% {\r\n                background-position: 200% 0;\r\n              }\r\n            }\r\n            \r\n            /* Enhanced button states */\r\n            .button-spring {\r\n              transition: all var(--transition-spring);\r\n              transform-origin: center;\r\n            }\r\n            \r\n            .button-spring:hover {\r\n              transform: scale(1.05);\r\n              box-shadow: 0 4px 12px var(--color-shadow-medium);\r\n            }\r\n            \r\n            .button-spring:active {\r\n              transform: scale(0.98);\r\n              transition-duration: 100ms;\r\n            }\r\n          `}\r\n        </style>\r\n        \r\n        {/* Critical CSS for above-the-fold content */}\r\n        <style>\r\n          {`\r\n            /* Critical path CSS for immediate rendering */\r\n            body {\r\n              margin: 0;\r\n              padding: 0;\r\n              min-height: 100vh;\r\n              font-family: ${inter.style.fontFamily}, system-ui, -apple-system, sans-serif;\r\n              line-height: var(--line-height-normal);\r\n              -webkit-font-smoothing: antialiased;\r\n              -moz-osx-font-smoothing: grayscale;\r\n            }\r\n            \r\n            /* Loading state optimization */\r\n            #initial-loading {\r\n              opacity: 1;\r\n              transition: opacity 0.3s ease-out;\r\n            }\r\n            \r\n            #initial-loading.hidden {\r\n              opacity: 0;\r\n              pointer-events: none;\r\n            }\r\n            \r\n            /* Performance critical layouts */\r\n            .layout-container {\r\n              display: flex;\r\n              flex-direction: column;\r\n              min-height: 100vh;\r\n            }\r\n            \r\n            .content-area {\r\n              flex: 1;\r\n              width: 100%;\r\n              max-width: 1280px;\r\n              margin: 0 auto;\r\n              padding: 0 var(--space-4);\r\n            }\r\n          `}\r\n        </style>\r\n      </head>\r\n      <body\r\n        className={`${spaceGrotesk.variable} ${dmSans.variable} ${inter.variable} ${jetBrainsMono.variable} bg-bg-primary text-text-primary transition-colors duration-300 layout-container`}\r\n      >\r\n        {/* Skip links for accessibility */}\r\n        <a href=\"#main-content\" className=\"skip-link\">\r\n          Pular para conteúdo principal\r\n        </a>\r\n        <a href=\"#navigation\" className=\"skip-link\" style={{ left: '120px' }}>\r\n          Pular para navegação\r\n        </a>\r\n        \r\n        <TRPCProvider>{children}</TRPCProvider>\r\n        \r\n        {/* Loading fallback for slower connections */}\r\n        <div \r\n          id=\"initial-loading\" \r\n          className=\"fixed inset-0 z-50 flex items-center justify-center bg-bg-primary hardware-accelerated\"\r\n          suppressHydrationWarning={true}\r\n          role=\"status\"\r\n          aria-label=\"Carregando aplicação\"\r\n        >\r\n          <div className=\"flex flex-col items-center gap-4\">\r\n            <div className=\"loading-skeleton rounded-full h-8 w-8 border-b-2 border-brand-green\"></div>\r\n            <div className=\"text-sm text-text-muted\">Carregando Interview Prep...</div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Service Worker and Performance Scripts */}\r\n        <Script\r\n          id=\"performance-monitoring\"\r\n          strategy=\"afterInteractive\"\r\n          dangerouslySetInnerHTML={{\r\n            __html: `\r\n              // Performance monitoring\r\n              if (typeof window !== 'undefined' && 'performance' in window && 'measure' in window.performance) {\r\n                window.addEventListener('load', () => {\r\n                  // Measure critical rendering path\r\n                  performance.mark('app-start');\r\n                  \r\n                  setTimeout(() => {\r\n                    performance.mark('app-end');\r\n                    performance.measure('app-load-time', 'app-start', 'app-end');\r\n                    \r\n                    const measures = performance.getEntriesByType('measure');\r\n                    measures.forEach(measure => {\r\n                      if (measure.duration > 1000) {\r\n                        console.warn('Slow operation detected:', measure.name, measure.duration + 'ms');\r\n                      }\r\n                    });\r\n                  }, 0);\r\n                });\r\n                \r\n                // Monitor long tasks\r\n                if ('PerformanceObserver' in window) {\r\n                  const longTaskObserver = new PerformanceObserver((list) => {\r\n                    for (const entry of list.getEntries()) {\r\n                      console.warn('Long task detected:', entry.duration + 'ms');\r\n                    }\r\n                  });\r\n                  \r\n                  try {\r\n                    longTaskObserver.observe({ entryTypes: ['longtask'] });\r\n                  } catch (e) {\r\n                    // Long task API not supported\r\n                  }\r\n                }\r\n              }\r\n              \r\n              // Progressive enhancement detection\r\n              const supportsIntersectionObserver = 'IntersectionObserver' in window;\r\n              const supportsServiceWorker = 'serviceWorker' in navigator;\r\n              const supportsWebShare = 'share' in navigator;\r\n              const supportsNotifications = 'Notification' in window;\r\n              \r\n              // Store feature support for use by components\r\n              window.__FEATURE_SUPPORT__ = {\r\n                intersectionObserver: supportsIntersectionObserver,\r\n                serviceWorker: supportsServiceWorker,\r\n                webShare: supportsWebShare,\r\n                notifications: supportsNotifications,\r\n                webAudio: 'AudioContext' in window || 'webkitAudioContext' in window,\r\n                vibration: 'vibrate' in navigator,\r\n                reducedMotion: window.matchMedia('(prefers-reduced-motion: reduce)').matches,\r\n                highContrast: window.matchMedia('(prefers-contrast: high)').matches\r\n              };\r\n              \r\n              // Service Worker registration with offline support\r\n              if (supportsServiceWorker && 'serviceWorker' in navigator) {\r\n                window.addEventListener('load', () => {\r\n                  navigator.serviceWorker.register('/sw.js')\r\n                    .then(registration => {\r\n                      console.log('SW registered: ', registration);\r\n                      \r\n                      // Listen for updates\r\n                      registration.addEventListener('updatefound', () => {\r\n                        console.log('Service Worker update found');\r\n                      });\r\n                    })\r\n                    .catch(registrationError => {\r\n                      console.log('SW registration failed: ', registrationError);\r\n                    });\r\n                });\r\n              }\r\n              \r\n              // Hide loading screen\r\n              window.addEventListener('load', () => {\r\n                const loading = document.getElementById('initial-loading');\r\n                if (loading) {\r\n                  loading.classList.add('hidden');\r\n                  setTimeout(() => {\r\n                    loading.style.display = 'none';\r\n                  }, 300);\r\n                }\r\n              });\r\n              \r\n              // Handle visibility changes for performance\r\n              document.addEventListener('visibilitychange', () => {\r\n                if (document.hidden) {\r\n                  // Pause animations and heavy operations\r\n                  document.body.classList.add('page-hidden');\r\n                } else {\r\n                  // Resume operations\r\n                  document.body.classList.remove('page-hidden');\r\n                }\r\n              });\r\n              \r\n              // Advanced keyboard navigation\r\n              document.addEventListener('keydown', (event) => {\r\n                const { key, ctrlKey, metaKey } = event;\r\n                \r\n                // Global shortcuts\r\n                if ((metaKey || ctrlKey) && key === 'k') {\r\n                  event.preventDefault();\r\n                  const searchInput = document.querySelector('input[placeholder*=\"Buscar\"]') || document.querySelector('input[type=\"search\"]');\r\n                  if (searchInput) {\r\n                    searchInput.focus();\r\n                  }\r\n                }\r\n                \r\n                // Skip links navigation\r\n                if (key === 'Tab' && !event.shiftKey) {\r\n                  const focusedElement = document.activeElement;\r\n                  if (focusedElement === document.body) {\r\n                    const skipLink = document.querySelector('.skip-link');\r\n                    if (skipLink) {\r\n                      skipLink.focus();\r\n                      event.preventDefault();\r\n                    }\r\n                  }\r\n                }\r\n              });\r\n              \r\n              // Accessibility enhancements\r\n              if (window.__FEATURE_SUPPORT__.reducedMotion) {\r\n                document.body.classList.add('reduce-motion');\r\n              }\r\n              \r\n              if (window.__FEATURE_SUPPORT__.highContrast) {\r\n                document.body.classList.add('high-contrast');\r\n              }\r\n              \r\n              // Focus management for better accessibility\r\n              let focusVisible = false;\r\n              \r\n              document.addEventListener('keydown', (event) => {\r\n                if (event.key === 'Tab') {\r\n                  focusVisible = true;\r\n                  document.body.classList.add('keyboard-navigation');\r\n                }\r\n              });\r\n              \r\n              document.addEventListener('mousedown', () => {\r\n                focusVisible = false;\r\n                document.body.classList.remove('keyboard-navigation');\r\n              });\r\n              \r\n              // Announce page changes to screen readers\r\n              function announceToScreenReader(message) {\r\n                const announcement = document.createElement('div');\r\n                announcement.setAttribute('aria-live', 'polite');\r\n                announcement.setAttribute('aria-atomic', 'true');\r\n                announcement.className = 'sr-only';\r\n                announcement.textContent = message;\r\n                document.body.appendChild(announcement);\r\n                \r\n                setTimeout(() => {\r\n                  document.body.removeChild(announcement);\r\n                }, 1000);\r\n              }\r\n              \r\n              // Expose announce function globally\r\n              window.announceToScreenReader = announceToScreenReader;\r\n            `\r\n          }}\r\n        />\r\n        \r\n        {/* Critical resource hints - removed preload for favicon as it's not critical and causes warnings */}\r\n        \r\n        {/* Manifest for PWA support */}\r\n        <link rel=\"manifest\" href=\"/manifest.json\" />\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n"],"names":["handleClientScriptLoad","initScriptLoader","ScriptCache","Map","LoadCache","Set","insertStylesheets","stylesheets","ReactDOM","preinit","forEach","stylesheet","as","window","head","document","link","createElement","type","rel","href","appendChild","loadScript","props","src","id","onLoad","onReady","dangerouslySetInnerHTML","children","strategy","onError","cacheKey","has","add","get","then","afterLoad","el","loadPromise","Promise","resolve","reject","addEventListener","e","call","catch","innerHTML","__html","textContent","Array","isArray","join","set","setAttributesFromProps","setAttribute","body","requestIdleCallback","loadLazyScript","readyState","addBeforeInteractiveToCache","scripts","querySelectorAll","script","getAttribute","scriptLoaderItems","Script","restProps","updateScripts","getIsSsr","appDir","nonce","useContext","HeadManagerContext","hasOnReadyEffectCalled","useRef","useEffect","current","hasLoadScriptEffectCalled","concat","styleSrc","JSON","stringify","preload","integrity","crossOrigin","Object","defineProperty","value"],"mappings":"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","ignoreList":[0,1,2,3,4,5,7,8,9,10,11]}}]
}